"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DeliveryStream:
    r"""
    DeliveryStream is the Schema for the DeliveryStreams API. Provides a AWS Kinesis Firehose Delivery Stream

    Attributes
    ----------
    apiVersion : str, default is "firehose.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DeliveryStream", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpec, default is Undefined, required
        spec
    status : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatus, default is Undefined, optional
        status
    """


    apiVersion: "firehose.aws.upbound.io/v1beta2" = "firehose.aws.upbound.io/v1beta2"

    kind: "DeliveryStream" = "DeliveryStream"

    metadata?: v1.ObjectMeta

    spec: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpec

    status?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatus


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpec:
    r"""
    DeliveryStreamSpec defines the desired state of DeliveryStream

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProvider, default is Undefined, required
        for provider
    initProvider : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProvider

    initProvider?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRef

    publishConnectionDetailsTo?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecWriteConnectionSecretToRef


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProvider:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider

    Attributes
    ----------
    destination : str, default is Undefined, optional
        â€“  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch, opensearchserverless and snowflake.
    destinationId : str, default is Undefined, optional
        destination Id
    elasticsearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfiguration, default is Undefined, optional
        elasticsearch configuration
    extendedS3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3Configuration, default is Undefined, optional
        extended s3 configuration
    httpEndpointConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfiguration, default is Undefined, optional
        http endpoint configuration
    icebergConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfiguration, default is Undefined, optional
        iceberg configuration
    kinesisSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderKinesisSourceConfiguration, default is Undefined, optional
        kinesis source configuration
    mskSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfiguration, default is Undefined, optional
        msk source configuration
    name : str, default is Undefined, optional
        A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.
    opensearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfiguration, default is Undefined, optional
        opensearch configuration
    opensearchserverlessConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfiguration, default is Undefined, optional
        opensearchserverless configuration
    redshiftConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfiguration, default is Undefined, optional
        redshift configuration
    region : str, default is Undefined, required
        If you don't specify an AWS Region, the default is the current region.
        Region is the region you'd like your resource to be created in.
    serverSideEncryption : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    snowflakeConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfiguration, default is Undefined, optional
        snowflake configuration
    splunkConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfiguration, default is Undefined, optional
        splunk configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    destination?: str

    destinationId?: str

    elasticsearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfiguration

    extendedS3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3Configuration

    httpEndpointConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfiguration

    icebergConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfiguration

    kinesisSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderKinesisSourceConfiguration

    mskSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfiguration

    name?: str

    opensearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfiguration

    opensearchserverlessConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfiguration

    redshiftConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfiguration

    region: str

    serverSideEncryption?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderServerSideEncryption

    snowflakeConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfiguration

    splunkConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfiguration

    tags?: {str:str}

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfiguration:
    r"""
    Configuration options when destination is elasticsearch. See elasticsearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    domainArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRef, default is Undefined, optional
        domain arn ref
    domainArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelector, default is Undefined, optional
        domain arn selector
    indexName : str, default is Undefined, optional
        The Elasticsearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeElasticsearchDomain, DescribeElasticsearchDomains, and DescribeElasticsearchDomainConfig.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    domainArn?: str

    domainArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRef

    domainArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelector

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRef:
    r"""
    Reference to a Domain in elasticsearch to populate domainArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelector:
    r"""
    Selector for a Domain in elasticsearch to populate domainArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationDomainArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider elasticsearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider elasticsearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelector, default is Undefined, optional
        role arn selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    securityGroupIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    subnetIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3Configuration:
    r"""
    Enhanced configuration options for the s3 destination. See extended_s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    customTimeZone : str, default is Undefined, optional
        The time zone you prefer. Valid values are UTC or a non-3-letter IANA time zones (for example, America/Los_Angeles). Default value is UTC.
    dataFormatConversionConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfiguration, default is Undefined, optional
        data format conversion configuration
    dynamicPartitioningConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDynamicPartitioningConfiguration, default is Undefined, optional
        dynamic partitioning configuration
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    fileExtension : str, default is Undefined, optional
        The file extension to override the default file extension (for example, .json).
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    customTimeZone?: str

    dataFormatConversionConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfiguration

    dynamicPartitioningConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDynamicPartitioningConfiguration

    errorOutputPrefix?: str

    fileExtension?: str

    kmsKeyArn?: str

    prefix?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfiguration

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelector

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfiguration

    s3BackupMode?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfiguration:
    r"""
    Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. See data_format_conversion_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    inputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration, default is Undefined, optional
        input format configuration
    outputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration, default is Undefined, optional
        output format configuration
    schemaConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration, default is Undefined, optional
        schema configuration
    """


    enabled?: bool

    inputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration

    outputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration

    schemaConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration:
    r"""
    Specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. See input_format_configuration block below for details.

    Attributes
    ----------
    deserializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer, default is Undefined, optional
        deserializer
    """


    deserializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer:
    r"""
    Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. See deserializer block below for details.

    Attributes
    ----------
    hiveJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe, default is Undefined, optional
        hive Json ser de
    openXJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe, default is Undefined, optional
        open x Json ser de
    """


    hiveJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe

    openXJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe:
    r"""
    Specifies the native Hive / HCatalog JsonSerDe. More details below. See hive_json_ser_de block below for details.

    Attributes
    ----------
    timestampFormats : [str], default is Undefined, optional
        A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
    """


    timestampFormats?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe:
    r"""
    Specifies the OpenX SerDe. See open_x_json_ser_de block below for details.

    Attributes
    ----------
    caseInsensitive : bool, default is Undefined, optional
        When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
    columnToJsonKeyMappings : {str:str}, default is Undefined, optional
        A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = "timestamp" } to map this key to a column named ts.
    convertDotsInJsonKeysToUnderscores : bool, default is Undefined, optional
        When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option. Defaults to false.
    """


    caseInsensitive?: bool

    columnToJsonKeyMappings?: {str:str}

    convertDotsInJsonKeysToUnderscores?: bool


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration:
    r"""
    Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. See output_format_configuration block below for details.

    Attributes
    ----------
    serializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer, default is Undefined, optional
        serializer
    """


    serializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer:
    r"""
    Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. See serializer block below for details.

    Attributes
    ----------
    orcSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe, default is Undefined, optional
        orc ser de
    parquetSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe, default is Undefined, optional
        parquet ser de
    """


    orcSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe

    parquetSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe:
    r"""
    Specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. See orc_ser_de block below for details.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    bloomFilterColumns : [str], default is Undefined, optional
        A list of column names for which you want Kinesis Data Firehose to create bloom filters.
    bloomFilterFalsePositiveProbability : float, default is Undefined, optional
        The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    dictionaryKeyThreshold : float, default is Undefined, optional
        A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
    enablePadding : bool, default is Undefined, optional
        Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.
    formatVersion : str, default is Undefined, optional
        The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.
    paddingTolerance : float, default is Undefined, optional
        A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.
    rowIndexStride : float, default is Undefined, optional
        The number of rows between index entries. The default is 10000 and the minimum is 1000.
    stripeSizeBytes : float, default is Undefined, optional
        The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
    """


    blockSizeBytes?: float

    bloomFilterColumns?: [str]

    bloomFilterFalsePositiveProbability?: float

    compression?: str

    dictionaryKeyThreshold?: float

    enablePadding?: bool

    formatVersion?: str

    paddingTolerance?: float

    rowIndexStride?: float

    stripeSizeBytes?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe:
    r"""
    Specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    enableDictionaryCompression : bool, default is Undefined, optional
        Indicates whether to enable dictionary compression.
    maxPaddingBytes : float, default is Undefined, optional
        The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
    pageSizeBytes : float, default is Undefined, optional
        The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
    writerVersion : str, default is Undefined, optional
        Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.
    """


    blockSizeBytes?: float

    compression?: str

    enableDictionaryCompression?: bool

    maxPaddingBytes?: float

    pageSizeBytes?: float

    writerVersion?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration:
    r"""
    Specifies the AWS Glue Data Catalog table that contains the column information. See schema_configuration block below for details.

    Attributes
    ----------
    catalogId : str, default is Undefined, optional
        The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    region : str, default is Undefined, optional
        If you don't specify an AWS Region, the default is the current region.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    tableNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector, default is Undefined, optional
        table name selector
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    catalogId?: str

    databaseName?: str

    region?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector

    tableName?: str

    tableNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef

    tableNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef:
    r"""
    Reference to a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector:
    r"""
    Selector for a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationDynamicPartitioningConfiguration:
    r"""
    The configuration for dynamic partitioning. Required when using dynamic partitioning. See dynamic_partitioning_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    """


    enabled?: bool

    retryDuration?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider extended s3 configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider extended s3 configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfiguration:
    r"""
    Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  See http_endpoint_configuration block below for details.

    Attributes
    ----------
    accessKeySecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationAccessKeySecretRef, default is Undefined, optional
        access key secret ref
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    name : str, default is Undefined, optional
        The HTTP endpoint name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    requestConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfiguration, default is Undefined, optional
        request configuration
    retryDuration : float, default is Undefined, optional
        Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between 0 and 7200. Default is 300.
    roleArn : str, default is Undefined, optional
        Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDataOnly and AllData.  Default value is FailedDataOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    url : str, default is Undefined, optional
        The HTTP endpoint URL to which Kinesis Firehose sends your data.
    """


    accessKeySecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationAccessKeySecretRef

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationCloudwatchLoggingOptions

    name?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfiguration

    requestConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationSecretsManagerConfiguration

    url?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationAccessKeySecretRef:
    r"""
    The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider HTTP endpoint configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider HTTP endpoint configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfiguration:
    r"""
    The request configuration.  See request_configuration block below for details.

    Attributes
    ----------
    commonAttributes : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0], default is Undefined, optional
        Describes the metadata sent to the HTTP endpoint destination. See common_attributes block below for details.
    contentEncoding : str, default is Undefined, optional
        Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.
    """


    commonAttributes?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0]

    contentEncoding?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider HTTP endpoint configuration request configuration common attributes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the HTTP endpoint common attribute.
    value : str, default is Undefined, optional
        The value of the HTTP endpoint common attribute.
    """


    name?: str

    value?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderHTTPEndpointConfigurationSecretsManagerConfiguration:
    r"""
    The Secret Manager Configuration. See secrets_manager_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfiguration:
    r"""
    Configuration options when destination is iceberg. See iceberg_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 and 900, before delivering it to the destination. The default value is 300.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 and 128, before delivering it to the destination. The default value is 5.
    catalogArn : str, default is Undefined, optional
        Glue catalog ARN identifier of the destination Apache Iceberg Tables. You must specify the ARN in the format arn:aws:glue:region:account-id:catalog
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    destinationTableConfiguration : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0], default is Undefined, optional
        Destination table configurations which Firehose uses to deliver data to Apache Iceberg Tables. Firehose will write data with insert if table specific configuration is not provided. See destination_table_configuration block below for details.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The period of time, in seconds between 0 to 7200, during which Firehose retries to deliver data to the specified destination.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling Apache Iceberg Tables.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    catalogArn?: str

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationCloudwatchLoggingOptions

    destinationTableConfiguration?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0]

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3Configuration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider iceberg configuration destination table configuration items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    databaseNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector, default is Undefined, optional
        database name selector
    s3ErrorOutputPrefix : str, default is Undefined, optional
        The table specific S3 error output prefix. All the errors that occurred while delivering to this table will be prefixed with this value in S3 destination.
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    tableNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector, default is Undefined, optional
        table name selector
    uniqueKeys : [str], default is Undefined, optional
        A list of unique keys for a given Apache Iceberg table. Firehose will use these for running Create, Update, or Delete operations on the given Iceberg table.
    """


    databaseName?: str

    databaseNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef

    databaseNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector

    s3ErrorOutputPrefix?: str

    tableName?: str

    tableNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef

    tableNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector

    uniqueKeys?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef:
    r"""
    Reference to a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector:
    r"""
    Selector for a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider iceberg configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider iceberg configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderKinesisSourceConfiguration:
    r"""
    The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. See kinesis_source_configuration block below for details.

    Attributes
    ----------
    kinesisStreamArn : str, default is Undefined, optional
        The kinesis stream used as the source of the firehose delivery stream.
    roleArn : str, default is Undefined, optional
        The ARN of the role that provides access to the source Kinesis stream.
    """


    kinesisStreamArn?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfiguration:
    r"""
    The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. See msk_source_configuration block below for details.

    Attributes
    ----------
    authenticationConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    mskClusterArn : str, default is Undefined, optional
        The ARN of the Amazon MSK cluster.
    topicName : str, default is Undefined, optional
        The topic name within the Amazon MSK cluster.
    """


    authenticationConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfigurationAuthenticationConfiguration

    mskClusterArn?: str

    topicName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderMskSourceConfigurationAuthenticationConfiguration:
    r"""
    The authentication configuration of the Amazon MSK cluster. See authentication_configuration block below for details.

    Attributes
    ----------
    connectivity : str, default is Undefined, optional
        The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.
    roleArn : str, default is Undefined, optional
        The ARN of the role used to access the Amazon MSK cluster.
    """


    connectivity?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfiguration:
    r"""
    Configuration options when destination is opensearch. See opensearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    documentIdOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDocumentIDOptions, default is Undefined, optional
        document Id options
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    domainArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRef, default is Undefined, optional
        domain arn ref
    domainArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelector, default is Undefined, optional
        domain arn selector
    indexName : str, default is Undefined, optional
        The OpenSearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeDomain, DescribeDomains, and DescribeDomainConfig.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    documentIdOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDocumentIDOptions

    domainArn?: str

    domainArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRef

    domainArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelector

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDocumentIDOptions:
    r"""
    The method for setting up document ID. See [document_id_options block] below for details.

    Attributes
    ----------
    defaultDocumentIdFormat : str, default is Undefined, optional
        The method for setting up document ID. Valid values: FIREHOSE_DEFAULT, NO_DOCUMENT_ID.
    """


    defaultDocumentIdFormat?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRef:
    r"""
    Reference to a Domain in opensearch to populate domainArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelector:
    r"""
    Selector for a Domain in opensearch to populate domainArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationDomainArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider opensearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider opensearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelector, default is Undefined, optional
        role arn selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    securityGroupIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    subnetIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfiguration:
    r"""
    Configuration options when destination is opensearchserverless. See opensearchserverless_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    collectionEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
    collectionEndpointRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRef, default is Undefined, optional
        collection endpoint ref
    collectionEndpointSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelector, default is Undefined, optional
        collection endpoint selector
    indexName : str, default is Undefined, optional
        The Serverless offering for Amazon OpenSearch Service index name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions

    collectionEndpoint?: str

    collectionEndpointRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRef

    collectionEndpointSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelector

    indexName?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3Configuration

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRef:
    r"""
    Reference to a Collection in opensearchserverless to populate collectionEndpoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelector:
    r"""
    Selector for a Collection in opensearchserverless to populate collectionEndpoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider opensearchserverless configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider opensearchserverless configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderOpensearchserverlessConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    """


    roleArn?: str

    securityGroupIds?: [str]

    subnetIds?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfiguration:
    r"""
    Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. See redshift_configuration block below for details.

    Attributes
    ----------
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterJdbcurl : str, default is Undefined, optional
        The jdbcurl of the redshift cluster.
    copyOptions : str, default is Undefined, optional
        Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation
    dataTableColumns : str, default is Undefined, optional
        The data table columns that will be targeted by the copy command.
    dataTableName : str, default is Undefined, optional
        The name of the table in the redshift cluster that the s3 bucket will copy to.
    passwordSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationPasswordSecretRef, default is Undefined, optional
        password secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
    roleArn : str, default is Undefined, optional
        The arn of the role the stream assumes.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    username : str, default is Undefined, optional
        The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions. This value is required if secrets_manager_configuration is not provided.
    """


    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationCloudwatchLoggingOptions

    clusterJdbcurl?: str

    copyOptions?: str

    dataTableColumns?: str

    dataTableName?: str

    passwordSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationPasswordSecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelector

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfiguration

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationSecretsManagerConfiguration

    username?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationPasswordSecretRef:
    r"""
    The password for the username above. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider redshift configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider redshift configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.
    secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if username and password are not provided.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderRedshiftConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderServerSideEncryption:
    r"""
    Encrypt at rest options. See server_side_encryption block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Default is false.
    keyArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.
    keyType : str, default is Undefined, optional
        Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK
    """


    enabled?: bool

    keyArn?: str

    keyType?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfiguration:
    r"""
    Configuration options when destination is snowflake. See snowflake_configuration block below for details.

    Attributes
    ----------
    accountUrl : str, default is Undefined, optional
        The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    contentColumnName : str, default is Undefined, optional
        The name of the content column.
    dataLoadingOption : str, default is Undefined, optional
        The data loading option.
    database : str, default is Undefined, optional
        The Snowflake database name.
    keyPassphraseSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationKeyPassphraseSecretRef, default is Undefined, optional
        key passphrase secret ref
    metadataColumnName : str, default is Undefined, optional
        The name of the metadata column.
    privateKeySecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationPrivateKeySecretRef, default is Undefined, optional
        private key secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        The S3 backup mode.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    $schema : str, default is Undefined, optional
        The Snowflake schema name.
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    snowflakeRoleConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeRoleConfiguration, default is Undefined, optional
        snowflake role configuration
    snowflakeVpcConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeVpcConfiguration, default is Undefined, optional
        snowflake vpc configuration
    table : str, default is Undefined, optional
        The Snowflake table name.
    user : str, default is Undefined, optional
        The user for authentication. This value is required if secrets_manager_configuration is not provided.
    """


    accountUrl?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationCloudwatchLoggingOptions

    contentColumnName?: str

    dataLoadingOption?: str

    database?: str

    keyPassphraseSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationKeyPassphraseSecretRef

    metadataColumnName?: str

    privateKeySecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationPrivateKeySecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3Configuration

    $schema?: str

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSecretsManagerConfiguration

    snowflakeRoleConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeRoleConfiguration

    snowflakeVpcConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeVpcConfiguration

    table?: str

    user?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationKeyPassphraseSecretRef:
    r"""
    The passphrase for the private key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationPrivateKeySecretRef:
    r"""
    The private key for authentication. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfiguration:
    r"""
    The processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider snowflake configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider snowflake configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3Configuration:
    r"""
    The S3 configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeRoleConfiguration:
    r"""
    The configuration for Snowflake role.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    snowflakeRole : str, default is Undefined, optional
        The Snowflake role.
    """


    enabled?: bool

    snowflakeRole?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSnowflakeConfigurationSnowflakeVpcConfiguration:
    r"""
    The VPC configuration for Snowflake.

    Attributes
    ----------
    privateLinkVpceId : str, default is Undefined, optional
        The VPCE ID for Firehose to privately connect with Snowflake.
    """


    privateLinkVpceId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfiguration:
    r"""
    Configuration options when destination is splunk. See splunk_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    hecAcknowledgmentTimeout : float, default is Undefined, optional
        The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
    hecEndpoint : str, default is Undefined, optional
        The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
    hecEndpointType : str, default is Undefined, optional
        The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.
    hecTokenSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationHecTokenSecretRef, default is Undefined, optional
        hec token secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationCloudwatchLoggingOptions

    hecAcknowledgmentTimeout?: float

    hecEndpoint?: str

    hecEndpointType?: str

    hecTokenSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationHecTokenSecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfiguration

    retryDuration?: float

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationSecretsManagerConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationHecTokenSecretRef:
    r"""
    The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider splunk configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec for provider splunk configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecForProviderSplunkConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    destination : str, default is Undefined, optional
        â€“  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch, opensearchserverless and snowflake.
    destinationId : str, default is Undefined, optional
        destination Id
    elasticsearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfiguration, default is Undefined, optional
        elasticsearch configuration
    extendedS3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3Configuration, default is Undefined, optional
        extended s3 configuration
    httpEndpointConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfiguration, default is Undefined, optional
        http endpoint configuration
    icebergConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfiguration, default is Undefined, optional
        iceberg configuration
    kinesisSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderKinesisSourceConfiguration, default is Undefined, optional
        kinesis source configuration
    mskSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfiguration, default is Undefined, optional
        msk source configuration
    name : str, default is Undefined, optional
        A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.
    opensearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfiguration, default is Undefined, optional
        opensearch configuration
    opensearchserverlessConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfiguration, default is Undefined, optional
        opensearchserverless configuration
    redshiftConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfiguration, default is Undefined, optional
        redshift configuration
    serverSideEncryption : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    snowflakeConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfiguration, default is Undefined, optional
        snowflake configuration
    splunkConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfiguration, default is Undefined, optional
        splunk configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    destination?: str

    destinationId?: str

    elasticsearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfiguration

    extendedS3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3Configuration

    httpEndpointConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfiguration

    icebergConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfiguration

    kinesisSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderKinesisSourceConfiguration

    mskSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfiguration

    name?: str

    opensearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfiguration

    opensearchserverlessConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfiguration

    redshiftConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfiguration

    serverSideEncryption?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderServerSideEncryption

    snowflakeConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfiguration

    splunkConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfiguration

    tags?: {str:str}

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfiguration:
    r"""
    Configuration options when destination is elasticsearch. See elasticsearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    domainArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRef, default is Undefined, optional
        domain arn ref
    domainArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelector, default is Undefined, optional
        domain arn selector
    indexName : str, default is Undefined, optional
        The Elasticsearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeElasticsearchDomain, DescribeElasticsearchDomains, and DescribeElasticsearchDomainConfig.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    domainArn?: str

    domainArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRef

    domainArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelector

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRef:
    r"""
    Reference to a Domain in elasticsearch to populate domainArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelector:
    r"""
    Selector for a Domain in elasticsearch to populate domainArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationDomainArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider elasticsearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider elasticsearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelector, default is Undefined, optional
        role arn selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    securityGroupIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    subnetIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderElasticsearchConfigurationVpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3Configuration:
    r"""
    Enhanced configuration options for the s3 destination. See extended_s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    customTimeZone : str, default is Undefined, optional
        The time zone you prefer. Valid values are UTC or a non-3-letter IANA time zones (for example, America/Los_Angeles). Default value is UTC.
    dataFormatConversionConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfiguration, default is Undefined, optional
        data format conversion configuration
    dynamicPartitioningConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDynamicPartitioningConfiguration, default is Undefined, optional
        dynamic partitioning configuration
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    fileExtension : str, default is Undefined, optional
        The file extension to override the default file extension (for example, .json).
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    customTimeZone?: str

    dataFormatConversionConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfiguration

    dynamicPartitioningConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDynamicPartitioningConfiguration

    errorOutputPrefix?: str

    fileExtension?: str

    kmsKeyArn?: str

    prefix?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfiguration

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelector

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfiguration

    s3BackupMode?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfiguration:
    r"""
    Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. See data_format_conversion_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    inputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration, default is Undefined, optional
        input format configuration
    outputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration, default is Undefined, optional
        output format configuration
    schemaConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration, default is Undefined, optional
        schema configuration
    """


    enabled?: bool

    inputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration

    outputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration

    schemaConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration:
    r"""
    Specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. See input_format_configuration block below for details.

    Attributes
    ----------
    deserializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer, default is Undefined, optional
        deserializer
    """


    deserializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer:
    r"""
    Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. See deserializer block below for details.

    Attributes
    ----------
    hiveJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe, default is Undefined, optional
        hive Json ser de
    openXJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe, default is Undefined, optional
        open x Json ser de
    """


    hiveJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe

    openXJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe:
    r"""
    Specifies the native Hive / HCatalog JsonSerDe. More details below. See hive_json_ser_de block below for details.

    Attributes
    ----------
    timestampFormats : [str], default is Undefined, optional
        A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
    """


    timestampFormats?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe:
    r"""
    Specifies the OpenX SerDe. See open_x_json_ser_de block below for details.

    Attributes
    ----------
    caseInsensitive : bool, default is Undefined, optional
        When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
    columnToJsonKeyMappings : {str:str}, default is Undefined, optional
        A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = "timestamp" } to map this key to a column named ts.
    convertDotsInJsonKeysToUnderscores : bool, default is Undefined, optional
        When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option. Defaults to false.
    """


    caseInsensitive?: bool

    columnToJsonKeyMappings?: {str:str}

    convertDotsInJsonKeysToUnderscores?: bool


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration:
    r"""
    Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. See output_format_configuration block below for details.

    Attributes
    ----------
    serializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer, default is Undefined, optional
        serializer
    """


    serializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer:
    r"""
    Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. See serializer block below for details.

    Attributes
    ----------
    orcSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe, default is Undefined, optional
        orc ser de
    parquetSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe, default is Undefined, optional
        parquet ser de
    """


    orcSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe

    parquetSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe:
    r"""
    Specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. See orc_ser_de block below for details.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    bloomFilterColumns : [str], default is Undefined, optional
        A list of column names for which you want Kinesis Data Firehose to create bloom filters.
    bloomFilterFalsePositiveProbability : float, default is Undefined, optional
        The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    dictionaryKeyThreshold : float, default is Undefined, optional
        A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
    enablePadding : bool, default is Undefined, optional
        Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.
    formatVersion : str, default is Undefined, optional
        The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.
    paddingTolerance : float, default is Undefined, optional
        A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.
    rowIndexStride : float, default is Undefined, optional
        The number of rows between index entries. The default is 10000 and the minimum is 1000.
    stripeSizeBytes : float, default is Undefined, optional
        The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
    """


    blockSizeBytes?: float

    bloomFilterColumns?: [str]

    bloomFilterFalsePositiveProbability?: float

    compression?: str

    dictionaryKeyThreshold?: float

    enablePadding?: bool

    formatVersion?: str

    paddingTolerance?: float

    rowIndexStride?: float

    stripeSizeBytes?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe:
    r"""
    Specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    enableDictionaryCompression : bool, default is Undefined, optional
        Indicates whether to enable dictionary compression.
    maxPaddingBytes : float, default is Undefined, optional
        The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
    pageSizeBytes : float, default is Undefined, optional
        The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
    writerVersion : str, default is Undefined, optional
        Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.
    """


    blockSizeBytes?: float

    compression?: str

    enableDictionaryCompression?: bool

    maxPaddingBytes?: float

    pageSizeBytes?: float

    writerVersion?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration:
    r"""
    Specifies the AWS Glue Data Catalog table that contains the column information. See schema_configuration block below for details.

    Attributes
    ----------
    catalogId : str, default is Undefined, optional
        The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    tableNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector, default is Undefined, optional
        table name selector
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    catalogId?: str

    databaseName?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector

    tableName?: str

    tableNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef

    tableNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRef:
    r"""
    Reference to a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelector:
    r"""
    Selector for a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationDynamicPartitioningConfiguration:
    r"""
    The configuration for dynamic partitioning. Required when using dynamic partitioning. See dynamic_partitioning_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    """


    enabled?: bool

    retryDuration?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider extended s3 configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider extended s3 configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfiguration:
    r"""
    Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  See http_endpoint_configuration block below for details.

    Attributes
    ----------
    accessKeySecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationAccessKeySecretRef, default is Undefined, optional
        access key secret ref
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    name : str, default is Undefined, optional
        The HTTP endpoint name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    requestConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfiguration, default is Undefined, optional
        request configuration
    retryDuration : float, default is Undefined, optional
        Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between 0 and 7200. Default is 300.
    roleArn : str, default is Undefined, optional
        Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDataOnly and AllData.  Default value is FailedDataOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    url : str, default is Undefined, optional
        The HTTP endpoint URL to which Kinesis Firehose sends your data.
    """


    accessKeySecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationAccessKeySecretRef

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationCloudwatchLoggingOptions

    name?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfiguration

    requestConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationSecretsManagerConfiguration

    url?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationAccessKeySecretRef:
    r"""
    The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider HTTP endpoint configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider HTTP endpoint configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfiguration:
    r"""
    The request configuration.  See request_configuration block below for details.

    Attributes
    ----------
    commonAttributes : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0], default is Undefined, optional
        Describes the metadata sent to the HTTP endpoint destination. See common_attributes block below for details.
    contentEncoding : str, default is Undefined, optional
        Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.
    """


    commonAttributes?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0]

    contentEncoding?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider HTTP endpoint configuration request configuration common attributes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the HTTP endpoint common attribute.
    value : str, default is Undefined, optional
        The value of the HTTP endpoint common attribute.
    """


    name?: str

    value?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderHTTPEndpointConfigurationSecretsManagerConfiguration:
    r"""
    The Secret Manager Configuration. See secrets_manager_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfiguration:
    r"""
    Configuration options when destination is iceberg. See iceberg_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 and 900, before delivering it to the destination. The default value is 300.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 and 128, before delivering it to the destination. The default value is 5.
    catalogArn : str, default is Undefined, optional
        Glue catalog ARN identifier of the destination Apache Iceberg Tables. You must specify the ARN in the format arn:aws:glue:region:account-id:catalog
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    destinationTableConfiguration : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0], default is Undefined, optional
        Destination table configurations which Firehose uses to deliver data to Apache Iceberg Tables. Firehose will write data with insert if table specific configuration is not provided. See destination_table_configuration block below for details.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The period of time, in seconds between 0 to 7200, during which Firehose retries to deliver data to the specified destination.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling Apache Iceberg Tables.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    catalogArn?: str

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationCloudwatchLoggingOptions

    destinationTableConfiguration?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0]

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3Configuration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider iceberg configuration destination table configuration items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    databaseNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector, default is Undefined, optional
        database name selector
    s3ErrorOutputPrefix : str, default is Undefined, optional
        The table specific S3 error output prefix. All the errors that occurred while delivering to this table will be prefixed with this value in S3 destination.
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    tableNameRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector, default is Undefined, optional
        table name selector
    uniqueKeys : [str], default is Undefined, optional
        A list of unique keys for a given Apache Iceberg table. Firehose will use these for running Create, Update, or Delete operations on the given Iceberg table.
    """


    databaseName?: str

    databaseNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef

    databaseNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector

    s3ErrorOutputPrefix?: str

    tableName?: str

    tableNameRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef

    tableNameSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector

    uniqueKeys?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0DatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRef:
    r"""
    Reference to a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelector:
    r"""
    Selector for a CatalogTable in glue to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationDestinationTableConfigurationItems0TableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider iceberg configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider iceberg configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderIcebergConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderKinesisSourceConfiguration:
    r"""
    The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. See kinesis_source_configuration block below for details.

    Attributes
    ----------
    kinesisStreamArn : str, default is Undefined, optional
        The kinesis stream used as the source of the firehose delivery stream.
    roleArn : str, default is Undefined, optional
        The ARN of the role that provides access to the source Kinesis stream.
    """


    kinesisStreamArn?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfiguration:
    r"""
    The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. See msk_source_configuration block below for details.

    Attributes
    ----------
    authenticationConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    mskClusterArn : str, default is Undefined, optional
        The ARN of the Amazon MSK cluster.
    topicName : str, default is Undefined, optional
        The topic name within the Amazon MSK cluster.
    """


    authenticationConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfigurationAuthenticationConfiguration

    mskClusterArn?: str

    topicName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderMskSourceConfigurationAuthenticationConfiguration:
    r"""
    The authentication configuration of the Amazon MSK cluster. See authentication_configuration block below for details.

    Attributes
    ----------
    connectivity : str, default is Undefined, optional
        The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.
    roleArn : str, default is Undefined, optional
        The ARN of the role used to access the Amazon MSK cluster.
    """


    connectivity?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfiguration:
    r"""
    Configuration options when destination is opensearch. See opensearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    documentIdOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDocumentIDOptions, default is Undefined, optional
        document Id options
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    domainArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRef, default is Undefined, optional
        domain arn ref
    domainArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelector, default is Undefined, optional
        domain arn selector
    indexName : str, default is Undefined, optional
        The OpenSearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeDomain, DescribeDomains, and DescribeDomainConfig.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    documentIdOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDocumentIDOptions

    domainArn?: str

    domainArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRef

    domainArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelector

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDocumentIDOptions:
    r"""
    The method for setting up document ID. See [document_id_options block] below for details.

    Attributes
    ----------
    defaultDocumentIdFormat : str, default is Undefined, optional
        The method for setting up document ID. Valid values: FIREHOSE_DEFAULT, NO_DOCUMENT_ID.
    """


    defaultDocumentIdFormat?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRef:
    r"""
    Reference to a Domain in opensearch to populate domainArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelector:
    r"""
    Selector for a Domain in opensearch to populate domainArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationDomainArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider opensearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider opensearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelector, default is Undefined, optional
        role arn selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    securityGroupIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    subnetIdsRefs : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchConfigurationVpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfiguration:
    r"""
    Configuration options when destination is opensearchserverless. See opensearchserverless_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    collectionEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
    collectionEndpointRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRef, default is Undefined, optional
        collection endpoint ref
    collectionEndpointSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelector, default is Undefined, optional
        collection endpoint selector
    indexName : str, default is Undefined, optional
        The Serverless offering for Amazon OpenSearch Service index name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be arn:.*.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions

    collectionEndpoint?: str

    collectionEndpointRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRef

    collectionEndpointSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelector

    indexName?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3Configuration

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRef:
    r"""
    Reference to a Collection in opensearchserverless to populate collectionEndpoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelector:
    r"""
    Selector for a Collection in opensearchserverless to populate collectionEndpoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationCollectionEndpointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider opensearchserverless configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider opensearchserverless configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderOpensearchserverlessConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    """


    roleArn?: str

    securityGroupIds?: [str]

    subnetIds?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfiguration:
    r"""
    Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. See redshift_configuration block below for details.

    Attributes
    ----------
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterJdbcurl : str, default is Undefined, optional
        The jdbcurl of the redshift cluster.
    copyOptions : str, default is Undefined, optional
        Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation
    dataTableColumns : str, default is Undefined, optional
        The data table columns that will be targeted by the copy command.
    dataTableName : str, default is Undefined, optional
        The name of the table in the redshift cluster that the s3 bucket will copy to.
    passwordSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationPasswordSecretRef, default is Undefined, optional
        password secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
    roleArn : str, default is Undefined, optional
        The arn of the role the stream assumes.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    username : str, default is Undefined, optional
        The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions. This value is required if secrets_manager_configuration is not provided.
    """


    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationCloudwatchLoggingOptions

    clusterJdbcurl?: str

    copyOptions?: str

    dataTableColumns?: str

    dataTableName?: str

    passwordSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationPasswordSecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelector

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfiguration

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationSecretsManagerConfiguration

    username?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationPasswordSecretRef:
    r"""
    The password for the username above. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider redshift configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider redshift configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.
    secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if username and password are not provided.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3BackupConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderRedshiftConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderServerSideEncryption:
    r"""
    Encrypt at rest options. See server_side_encryption block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Default is false.
    keyArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.
    keyType : str, default is Undefined, optional
        Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK
    """


    enabled?: bool

    keyArn?: str

    keyType?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfiguration:
    r"""
    Configuration options when destination is snowflake. See snowflake_configuration block below for details.

    Attributes
    ----------
    accountUrl : str, default is Undefined, optional
        The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    contentColumnName : str, default is Undefined, optional
        The name of the content column.
    dataLoadingOption : str, default is Undefined, optional
        The data loading option.
    database : str, default is Undefined, optional
        The Snowflake database name.
    keyPassphraseSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationKeyPassphraseSecretRef, default is Undefined, optional
        key passphrase secret ref
    metadataColumnName : str, default is Undefined, optional
        The name of the metadata column.
    privateKeySecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationPrivateKeySecretRef, default is Undefined, optional
        private key secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role.
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    s3BackupMode : str, default is Undefined, optional
        The S3 backup mode.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    $schema : str, default is Undefined, optional
        The Snowflake schema name.
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    snowflakeRoleConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeRoleConfiguration, default is Undefined, optional
        snowflake role configuration
    snowflakeVpcConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeVpcConfiguration, default is Undefined, optional
        snowflake vpc configuration
    table : str, default is Undefined, optional
        The Snowflake table name.
    user : str, default is Undefined, optional
        The user for authentication. This value is required if secrets_manager_configuration is not provided.
    """


    accountUrl?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationCloudwatchLoggingOptions

    contentColumnName?: str

    dataLoadingOption?: str

    database?: str

    keyPassphraseSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationKeyPassphraseSecretRef

    metadataColumnName?: str

    privateKeySecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationPrivateKeySecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelector

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3Configuration

    $schema?: str

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSecretsManagerConfiguration

    snowflakeRoleConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeRoleConfiguration

    snowflakeVpcConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeVpcConfiguration

    table?: str

    user?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationKeyPassphraseSecretRef:
    r"""
    The passphrase for the private key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationPrivateKeySecretRef:
    r"""
    The private key for authentication. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfiguration:
    r"""
    The processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider snowflake configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider snowflake configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3Configuration:
    r"""
    The S3 configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeRoleConfiguration:
    r"""
    The configuration for Snowflake role.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    snowflakeRole : str, default is Undefined, optional
        The Snowflake role.
    """


    enabled?: bool

    snowflakeRole?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSnowflakeConfigurationSnowflakeVpcConfiguration:
    r"""
    The VPC configuration for Snowflake.

    Attributes
    ----------
    privateLinkVpceId : str, default is Undefined, optional
        The VPCE ID for Firehose to privately connect with Snowflake.
    """


    privateLinkVpceId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfiguration:
    r"""
    Configuration options when destination is splunk. See splunk_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    hecAcknowledgmentTimeout : float, default is Undefined, optional
        The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
    hecEndpoint : str, default is Undefined, optional
        The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
    hecEndpointType : str, default is Undefined, optional
        The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.
    hecTokenSecretRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationHecTokenSecretRef, default is Undefined, optional
        hec token secret ref
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationCloudwatchLoggingOptions

    hecAcknowledgmentTimeout?: float

    hecEndpoint?: str

    hecEndpointType?: str

    hecTokenSecretRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationHecTokenSecretRef

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfiguration

    retryDuration?: float

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationSecretsManagerConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationHecTokenSecretRef:
    r"""
    The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint. This value is required if secrets_manager_configuration is not provided.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider splunk configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream spec init provider splunk configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bucketArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    roleArnRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucketArn?: str

    bucketArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRef

    bucketArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelector

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str

    roleArnRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRef

    roleArnSelector?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelector


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationS3ConfigurationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecInitProviderSplunkConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRef

    metadata?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToMetadata

    name: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRefPolicy


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatus:
    r"""
    DeliveryStreamStatus defines the observed state of DeliveryStream.

    Attributes
    ----------
    atProvider : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProvider

    conditions?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusConditionsItems0]

    observedGeneration?: int


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProvider:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) specifying the Stream
    destination : str, default is Undefined, optional
        â€“  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch, opensearchserverless and snowflake.
    destinationId : str, default is Undefined, optional
        destination Id
    elasticsearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfiguration, default is Undefined, optional
        elasticsearch configuration
    extendedS3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3Configuration, default is Undefined, optional
        extended s3 configuration
    httpEndpointConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfiguration, default is Undefined, optional
        http endpoint configuration
    icebergConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfiguration, default is Undefined, optional
        iceberg configuration
    id : str, default is Undefined, optional
        id
    kinesisSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderKinesisSourceConfiguration, default is Undefined, optional
        kinesis source configuration
    mskSourceConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfiguration, default is Undefined, optional
        msk source configuration
    name : str, default is Undefined, optional
        A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.
    opensearchConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfiguration, default is Undefined, optional
        opensearch configuration
    opensearchserverlessConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfiguration, default is Undefined, optional
        opensearchserverless configuration
    redshiftConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfiguration, default is Undefined, optional
        redshift configuration
    serverSideEncryption : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    snowflakeConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfiguration, default is Undefined, optional
        snowflake configuration
    splunkConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfiguration, default is Undefined, optional
        splunk configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    arn?: str

    destination?: str

    destinationId?: str

    elasticsearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfiguration

    extendedS3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3Configuration

    httpEndpointConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfiguration

    icebergConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfiguration

    id?: str

    kinesisSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderKinesisSourceConfiguration

    mskSourceConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfiguration

    name?: str

    opensearchConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfiguration

    opensearchserverlessConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfiguration

    redshiftConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfiguration

    serverSideEncryption?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderServerSideEncryption

    snowflakeConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfiguration

    splunkConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfiguration

    tags?: {str:str}

    tagsAll?: {str:str}

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfiguration:
    r"""
    Configuration options when destination is elasticsearch. See elasticsearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    indexName : str, default is Undefined, optional
        The Elasticsearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeElasticsearchDomain, DescribeElasticsearchDomains, and DescribeElasticsearchDomainConfig.  The pattern needs to be arn:.*.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    domainArn?: str

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider elasticsearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider elasticsearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderElasticsearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    vpcId : str, default is Undefined, optional
        vpc Id
    """


    roleArn?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3Configuration:
    r"""
    Enhanced configuration options for the s3 destination. See extended_s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    customTimeZone : str, default is Undefined, optional
        The time zone you prefer. Valid values are UTC or a non-3-letter IANA time zones (for example, America/Los_Angeles). Default value is UTC.
    dataFormatConversionConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfiguration, default is Undefined, optional
        data format conversion configuration
    dynamicPartitioningConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDynamicPartitioningConfiguration, default is Undefined, optional
        dynamic partitioning configuration
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    fileExtension : str, default is Undefined, optional
        The file extension to override the default file extension (for example, .json).
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    customTimeZone?: str

    dataFormatConversionConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfiguration

    dynamicPartitioningConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDynamicPartitioningConfiguration

    errorOutputPrefix?: str

    fileExtension?: str

    kmsKeyArn?: str

    prefix?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfiguration

    roleArn?: str

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfiguration

    s3BackupMode?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfiguration:
    r"""
    Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. See data_format_conversion_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    inputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration, default is Undefined, optional
        input format configuration
    outputFormatConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration, default is Undefined, optional
        output format configuration
    schemaConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration, default is Undefined, optional
        schema configuration
    """


    enabled?: bool

    inputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration

    outputFormatConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration

    schemaConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration:
    r"""
    Specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. See input_format_configuration block below for details.

    Attributes
    ----------
    deserializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer, default is Undefined, optional
        deserializer
    """


    deserializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer:
    r"""
    Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. See deserializer block below for details.

    Attributes
    ----------
    hiveJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe, default is Undefined, optional
        hive Json ser de
    openXJsonSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe, default is Undefined, optional
        open x Json ser de
    """


    hiveJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe

    openXJsonSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJSONSerDe:
    r"""
    Specifies the native Hive / HCatalog JsonSerDe. More details below. See hive_json_ser_de block below for details.

    Attributes
    ----------
    timestampFormats : [str], default is Undefined, optional
        A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
    """


    timestampFormats?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJSONSerDe:
    r"""
    Specifies the OpenX SerDe. See open_x_json_ser_de block below for details.

    Attributes
    ----------
    caseInsensitive : bool, default is Undefined, optional
        When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
    columnToJsonKeyMappings : {str:str}, default is Undefined, optional
        A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = "timestamp" } to map this key to a column named ts.
    convertDotsInJsonKeysToUnderscores : bool, default is Undefined, optional
        When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option. Defaults to false.
    """


    caseInsensitive?: bool

    columnToJsonKeyMappings?: {str:str}

    convertDotsInJsonKeysToUnderscores?: bool


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration:
    r"""
    Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. See output_format_configuration block below for details.

    Attributes
    ----------
    serializer : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer, default is Undefined, optional
        serializer
    """


    serializer?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer:
    r"""
    Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. See serializer block below for details.

    Attributes
    ----------
    orcSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe, default is Undefined, optional
        orc ser de
    parquetSerDe : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe, default is Undefined, optional
        parquet ser de
    """


    orcSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe

    parquetSerDe?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe:
    r"""
    Specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. See orc_ser_de block below for details.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    bloomFilterColumns : [str], default is Undefined, optional
        A list of column names for which you want Kinesis Data Firehose to create bloom filters.
    bloomFilterFalsePositiveProbability : float, default is Undefined, optional
        The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    dictionaryKeyThreshold : float, default is Undefined, optional
        A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
    enablePadding : bool, default is Undefined, optional
        Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.
    formatVersion : str, default is Undefined, optional
        The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.
    paddingTolerance : float, default is Undefined, optional
        A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.
    rowIndexStride : float, default is Undefined, optional
        The number of rows between index entries. The default is 10000 and the minimum is 1000.
    stripeSizeBytes : float, default is Undefined, optional
        The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
    """


    blockSizeBytes?: float

    bloomFilterColumns?: [str]

    bloomFilterFalsePositiveProbability?: float

    compression?: str

    dictionaryKeyThreshold?: float

    enablePadding?: bool

    formatVersion?: str

    paddingTolerance?: float

    rowIndexStride?: float

    stripeSizeBytes?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe:
    r"""
    Specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.

    Attributes
    ----------
    blockSizeBytes : float, default is Undefined, optional
        The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
    compression : str, default is Undefined, optional
        The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
    enableDictionaryCompression : bool, default is Undefined, optional
        Indicates whether to enable dictionary compression.
    maxPaddingBytes : float, default is Undefined, optional
        The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
    pageSizeBytes : float, default is Undefined, optional
        The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
    writerVersion : str, default is Undefined, optional
        Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.
    """


    blockSizeBytes?: float

    compression?: str

    enableDictionaryCompression?: bool

    maxPaddingBytes?: float

    pageSizeBytes?: float

    writerVersion?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration:
    r"""
    Specifies the AWS Glue Data Catalog table that contains the column information. See schema_configuration block below for details.

    Attributes
    ----------
    catalogId : str, default is Undefined, optional
        The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    region : str, default is Undefined, optional
        If you don't specify an AWS Region, the default is the current region.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    versionId : str, default is Undefined, optional
        Specifies the table version for the output data schema. Defaults to LATEST.
    """


    catalogId?: str

    databaseName?: str

    region?: str

    roleArn?: str

    tableName?: str

    versionId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationDynamicPartitioningConfiguration:
    r"""
    The configuration for dynamic partitioning. Required when using dynamic partitioning. See dynamic_partitioning_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    """


    enabled?: bool

    retryDuration?: float


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider extended s3 configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider extended s3 configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfiguration:
    r"""
    Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  See http_endpoint_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    name : str, default is Undefined, optional
        The HTTP endpoint name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    requestConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfiguration, default is Undefined, optional
        request configuration
    retryDuration : float, default is Undefined, optional
        Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between 0 and 7200. Default is 300.
    roleArn : str, default is Undefined, optional
        Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be arn:.*.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDataOnly and AllData.  Default value is FailedDataOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    url : str, default is Undefined, optional
        The HTTP endpoint URL to which Kinesis Firehose sends your data.
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationCloudwatchLoggingOptions

    name?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfiguration

    requestConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationSecretsManagerConfiguration

    url?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider HTTP endpoint configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider HTTP endpoint configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfiguration:
    r"""
    The request configuration.  See request_configuration block below for details.

    Attributes
    ----------
    commonAttributes : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0], default is Undefined, optional
        Describes the metadata sent to the HTTP endpoint destination. See common_attributes block below for details.
    contentEncoding : str, default is Undefined, optional
        Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.
    """


    commonAttributes?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0]

    contentEncoding?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationRequestConfigurationCommonAttributesItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider HTTP endpoint configuration request configuration common attributes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the HTTP endpoint common attribute.
    value : str, default is Undefined, optional
        The value of the HTTP endpoint common attribute.
    """


    name?: str

    value?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderHTTPEndpointConfigurationSecretsManagerConfiguration:
    r"""
    The Secret Manager Configuration. See secrets_manager_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfiguration:
    r"""
    Configuration options when destination is iceberg. See iceberg_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 and 900, before delivering it to the destination. The default value is 300.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 and 128, before delivering it to the destination. The default value is 5.
    catalogArn : str, default is Undefined, optional
        Glue catalog ARN identifier of the destination Apache Iceberg Tables. You must specify the ARN in the format arn:aws:glue:region:account-id:catalog
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    destinationTableConfiguration : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationDestinationTableConfigurationItems0], default is Undefined, optional
        Destination table configurations which Firehose uses to deliver data to Apache Iceberg Tables. Firehose will write data with insert if table specific configuration is not provided. See destination_table_configuration block below for details.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The period of time, in seconds between 0 to 7200, during which Firehose retries to deliver data to the specified destination.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling Apache Iceberg Tables.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    catalogArn?: str

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationCloudwatchLoggingOptions

    destinationTableConfiguration?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationDestinationTableConfigurationItems0]

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3Configuration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationDestinationTableConfigurationItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider iceberg configuration destination table configuration items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        Specifies the name of the AWS Glue database that contains the schema for the output data.
    s3ErrorOutputPrefix : str, default is Undefined, optional
        The table specific S3 error output prefix. All the errors that occurred while delivering to this table will be prefixed with this value in S3 destination.
    tableName : str, default is Undefined, optional
        Specifies the AWS Glue table that contains the column information that constitutes your data schema.
    uniqueKeys : [str], default is Undefined, optional
        A list of unique keys for a given Apache Iceberg table. Firehose will use these for running Create, Update, or Delete operations on the given Iceberg table.
    """


    databaseName?: str

    s3ErrorOutputPrefix?: str

    tableName?: str

    uniqueKeys?: [str]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider iceberg configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider iceberg configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderIcebergConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderKinesisSourceConfiguration:
    r"""
    The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. See kinesis_source_configuration block below for details.

    Attributes
    ----------
    kinesisStreamArn : str, default is Undefined, optional
        The kinesis stream used as the source of the firehose delivery stream.
    roleArn : str, default is Undefined, optional
        The ARN of the role that provides access to the source Kinesis stream.
    """


    kinesisStreamArn?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfiguration:
    r"""
    The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. See msk_source_configuration block below for details.

    Attributes
    ----------
    authenticationConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    mskClusterArn : str, default is Undefined, optional
        The ARN of the Amazon MSK cluster.
    topicName : str, default is Undefined, optional
        The topic name within the Amazon MSK cluster.
    """


    authenticationConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfigurationAuthenticationConfiguration

    mskClusterArn?: str

    topicName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderMskSourceConfigurationAuthenticationConfiguration:
    r"""
    The authentication configuration of the Amazon MSK cluster. See authentication_configuration block below for details.

    Attributes
    ----------
    connectivity : str, default is Undefined, optional
        The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.
    roleArn : str, default is Undefined, optional
        The ARN of the role used to access the Amazon MSK cluster.
    """


    connectivity?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfiguration:
    r"""
    Configuration options when destination is opensearch. See opensearch_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
    documentIdOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationDocumentIDOptions, default is Undefined, optional
        document Id options
    domainArn : str, default is Undefined, optional
        The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
    indexName : str, default is Undefined, optional
        The OpenSearch index name.
    indexRotationPeriod : str, default is Undefined, optional
        The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for DescribeDomain, DescribeDomains, and DescribeDomainConfig.  The pattern needs to be arn:.*.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    typeName : str, default is Undefined, optional
        The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationCloudwatchLoggingOptions

    clusterEndpoint?: str

    documentIdOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationDocumentIDOptions

    domainArn?: str

    indexName?: str

    indexRotationPeriod?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3Configuration

    typeName?: str

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationDocumentIDOptions:
    r"""
    The method for setting up document ID. See [document_id_options block] below for details.

    Attributes
    ----------
    defaultDocumentIdFormat : str, default is Undefined, optional
        The method for setting up document ID. Valid values: FIREHOSE_DEFAULT, NO_DOCUMENT_ID.
    """


    defaultDocumentIdFormat?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfiguration:
    r"""
    The data processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider opensearch configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider opensearch configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    vpcId : str, default is Undefined, optional
        vpc Id
    """


    roleArn?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfiguration:
    r"""
    Configuration options when destination is opensearchserverless. See opensearchserverless_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    collectionEndpoint : str, default is Undefined, optional
        The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
    indexName : str, default is Undefined, optional
        The Serverless offering for Amazon OpenSearch Service index name.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be arn:.*.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedDocumentsOnly and AllDocuments.  Default value is FailedDocumentsOnly.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    vpcConfig : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationVpcConfig, default is Undefined, optional
        vpc config
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions

    collectionEndpoint?: str

    indexName?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3Configuration

    vpcConfig?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationVpcConfig


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider opensearchserverless configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider opensearchserverless configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderOpensearchserverlessConfigurationVpcConfig:
    r"""
    The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See vpc_config block below for details.

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    securityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with Kinesis Firehose.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs to associate with Kinesis Firehose.
    vpcId : str, default is Undefined, optional
        vpc Id
    """


    roleArn?: str

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfiguration:
    r"""
    Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. See redshift_configuration block below for details.

    Attributes
    ----------
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    clusterJdbcurl : str, default is Undefined, optional
        The jdbcurl of the redshift cluster.
    copyOptions : str, default is Undefined, optional
        Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation
    dataTableColumns : str, default is Undefined, optional
        The data table columns that will be targeted by the copy command.
    dataTableName : str, default is Undefined, optional
        The name of the table in the redshift cluster that the s3 bucket will copy to.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
    roleArn : str, default is Undefined, optional
        The arn of the role the stream assumes.
    s3BackupConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfiguration, default is Undefined, optional
        s3 backup configuration
    s3BackupMode : str, default is Undefined, optional
        The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    username : str, default is Undefined, optional
        The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions. This value is required if secrets_manager_configuration is not provided.
    """


    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationCloudwatchLoggingOptions

    clusterJdbcurl?: str

    copyOptions?: str

    dataTableColumns?: str

    dataTableName?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfiguration

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationSecretsManagerConfiguration

    username?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider redshift configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider redshift configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfiguration:
    r"""
    The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.
    secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if username and password are not provided.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderRedshiftConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderServerSideEncryption:
    r"""
    Encrypt at rest options. See server_side_encryption block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Default is false.
    keyArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.
    keyType : str, default is Undefined, optional
        Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK
    """


    enabled?: bool

    keyArn?: str

    keyType?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfiguration:
    r"""
    Configuration options when destination is snowflake. See snowflake_configuration block below for details.

    Attributes
    ----------
    accountUrl : str, default is Undefined, optional
        The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    contentColumnName : str, default is Undefined, optional
        The name of the content column.
    dataLoadingOption : str, default is Undefined, optional
        The data loading option.
    database : str, default is Undefined, optional
        The Snowflake database name.
    metadataColumnName : str, default is Undefined, optional
        The name of the metadata column.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role.
    s3BackupMode : str, default is Undefined, optional
        The S3 backup mode.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    $schema : str, default is Undefined, optional
        The Snowflake schema name.
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    snowflakeRoleConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeRoleConfiguration, default is Undefined, optional
        snowflake role configuration
    snowflakeVpcConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeVpcConfiguration, default is Undefined, optional
        snowflake vpc configuration
    table : str, default is Undefined, optional
        The Snowflake table name.
    user : str, default is Undefined, optional
        The user for authentication. This value is required if secrets_manager_configuration is not provided.
    """


    accountUrl?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationCloudwatchLoggingOptions

    contentColumnName?: str

    dataLoadingOption?: str

    database?: str

    metadataColumnName?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfiguration

    retryDuration?: float

    roleArn?: str

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3Configuration

    $schema?: str

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSecretsManagerConfiguration

    snowflakeRoleConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeRoleConfiguration

    snowflakeVpcConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeVpcConfiguration

    table?: str

    user?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfiguration:
    r"""
    The processing configuration. See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider snowflake configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider snowflake configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3Configuration:
    r"""
    The S3 configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeRoleConfiguration:
    r"""
    The configuration for Snowflake role.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    snowflakeRole : str, default is Undefined, optional
        The Snowflake role.
    """


    enabled?: bool

    snowflakeRole?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSnowflakeConfigurationSnowflakeVpcConfiguration:
    r"""
    The VPC configuration for Snowflake.

    Attributes
    ----------
    privateLinkVpceId : str, default is Undefined, optional
        The VPCE ID for Firehose to privately connect with Snowflake.
    """


    privateLinkVpceId?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfiguration:
    r"""
    Configuration options when destination is splunk. See splunk_configuration block below for details.

    Attributes
    ----------
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    hecAcknowledgmentTimeout : float, default is Undefined, optional
        The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
    hecEndpoint : str, default is Undefined, optional
        The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
    hecEndpointType : str, default is Undefined, optional
        The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.
    processingConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfiguration, default is Undefined, optional
        processing configuration
    retryDuration : float, default is Undefined, optional
        After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
    s3BackupMode : str, default is Undefined, optional
        Defines how documents should be delivered to Amazon S3.  Valid values are FailedEventsOnly and AllEvents.  Default value is FailedEventsOnly.
        secrets_manager_configuration -  The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if hec_token is not provided.
    s3Configuration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3Configuration, default is Undefined, optional
        s3 configuration
    secretsManagerConfiguration : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationSecretsManagerConfiguration, default is Undefined, optional
        secrets manager configuration
    """


    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationCloudwatchLoggingOptions

    hecAcknowledgmentTimeout?: float

    hecEndpoint?: str

    hecEndpointType?: str

    processingConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfiguration

    retryDuration?: float

    s3BackupMode?: str

    s3Configuration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3Configuration

    secretsManagerConfiguration?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationSecretsManagerConfiguration


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfiguration:
    r"""
    The data processing configuration.  See processing_configuration block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    processors : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0], default is Undefined, optional
        Specifies the data processors as multiple blocks. See processors block below for details.
    """


    enabled?: bool

    processors?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0]


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider splunk configuration processing configuration processors items0

    Attributes
    ----------
    parameters : [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0], default is Undefined, optional
        Specifies the processor parameters as multiple blocks. See parameters block below for details.
    $type : str, default is Undefined, optional
        The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord, Decompression, CloudWatchLogProcessing. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    """


    parameters?: [FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0]

    $type?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationProcessingConfigurationProcessorsItems0ParametersItems0:
    r"""
    firehose aws upbound io v1beta2 delivery stream status at provider splunk configuration processing configuration processors items0 parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter, CompressionFormat, DataMessageExtraction. Validation is done against AWS SDK constants; so values not explicitly listed may also work.
    parameterValue : str, default is Undefined, optional
        Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
    """


    parameterName?: str

    parameterValue?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3Configuration:
    r"""
    The S3 Configuration. See s3_configuration block below for details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN of the S3 bucket
    bufferingInterval : float, default is Undefined, optional
        Buffer incoming data for the specified period of time, in seconds between 0 to 60, before delivering it to the destination.  The default value is 60s.
    bufferingSize : float, default is Undefined, optional
        Buffer incoming data to the specified size, in MBs between 1 to 5, before delivering it to the destination.  The default value is 5MB.
    cloudwatchLoggingOptions : FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    compressionFormat : str, default is Undefined, optional
        The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
    errorOutputPrefix : str, default is Undefined, optional
        Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
    kmsKeyArn : str, default is Undefined, optional
        Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
        be used.
    prefix : str, default is Undefined, optional
        The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    """


    bucketArn?: str

    bufferingInterval?: float

    bufferingSize?: float

    cloudwatchLoggingOptions?: FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions

    compressionFormat?: str

    errorOutputPrefix?: str

    kmsKeyArn?: str

    prefix?: str

    roleArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions:
    r"""
    The CloudWatch Logging Options for the delivery stream. See cloudwatch_logging_options block below for details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    logGroupName : str, default is Undefined, optional
        The CloudWatch group name for logging. This value is required if enabled is true.
    logStreamName : str, default is Undefined, optional
        The CloudWatch log stream name for logging. This value is required if enabled is true.
    """


    enabled?: bool

    logGroupName?: str

    logStreamName?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusAtProviderSplunkConfigurationSecretsManagerConfiguration:
    r"""
    The Secrets Manager configuration. See secrets_manager_configuration block below for details. This value is required if user and private_key are not provided.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables or disables the logging. Defaults to false.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary IAM permissions
    secretArn : str, default is Undefined, optional
        The ARN of the Secrets Manager secret. This value is required if enabled is true.
    """


    enabled?: bool

    roleArn?: str

    secretArn?: str


schema FirehoseAwsUpboundIoV1beta2DeliveryStreamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


