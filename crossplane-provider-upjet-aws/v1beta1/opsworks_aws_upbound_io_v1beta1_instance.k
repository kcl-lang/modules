"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    r"""
    Instance is the Schema for the Instances API. Provides an OpsWorks instance resource.

    Attributes
    ----------
    apiVersion : str, default is "opsworks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpsworksAwsUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : OpsworksAwsUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "opsworks.aws.upbound.io/v1beta1" = "opsworks.aws.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: OpsworksAwsUpboundIoV1beta1InstanceSpec

    status?: OpsworksAwsUpboundIoV1beta1InstanceStatus


schema OpsworksAwsUpboundIoV1beta1InstanceSpec:
    r"""
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OpsworksAwsUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OpsworksAwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OpsworksAwsUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProvider:
    r"""
    opsworks aws upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        OpsWorks agent to install. Default is INHERIT.
    amiId : str, default is Undefined, optional
        AMI to use for the instance.  If an AMI is specified, os must be Custom.
    architecture : str, default is Undefined, optional
        Machine architecture for created instances.  Valid values are x86_64 or i386. The default is x86_64.
    autoScalingType : str, default is Undefined, optional
        Creates load-based or time-based instances.  Valid values are load, timer.
    availabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
    createdAt : str, default is Undefined, optional
        Time that the instance was created.
    deleteEbs : bool, default is Undefined, optional
        Whether to delete EBS volume on deletion. Default is true.
    deleteEip : bool, default is Undefined, optional
        Whether to delete the Elastic IP on deletion.
    ebsBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0], default is Undefined, optional
        Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
    ebsOptimized : bool, default is Undefined, optional
        Whether the launched EC2 instance will be EBS-optimized.
    ecsClusterArn : str, default is Undefined, optional
        ECS cluster's ARN for container instances.
    elasticIp : str, default is Undefined, optional
        Instance Elastic IP address.
    ephemeralBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
    hostname : str, default is Undefined, optional
        Instance's host name.
    infrastructureClass : str, default is Undefined, optional
        For registered instances, infrastructure class: ec2 or on-premises.
    installUpdatesOnBoot : bool, default is Undefined, optional
        Controls where to install OS and package updates when the instance boots.  Default is true.
    instanceProfileArn : str, default is Undefined, optional
        ARN of the instance's IAM profile.
    instanceType : str, default is Undefined, optional
        Type of instance to start.
    layerIds : [str], default is Undefined, optional
        List of the layers the instance will belong to.
    layerIdsRefs : [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0], default is Undefined, optional
        References to CustomLayer in opsworks to populate layerIds.
    layerIdsSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelector, default is Undefined, optional
        layer ids selector
    os : str, default is Undefined, optional
        Name of operating system that will be installed.
    rootBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block for the root block device of the instance. See Block Devices below.
    rootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default. Valid values are ebs or instance-store.
    securityGroupIdRefs : [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Associated security groups.
    sshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    stackId : str, default is Undefined, optional
        Identifier of the stack the instance will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    state : str, default is Undefined, optional
        Desired state of the instance. Valid values are running or stopped.
    status : str, default is Undefined, optional
        Instance status. Will be one of booting, connection_lost, online, pending, rebooting, requested, running_setup, setup_failed, shutting_down, start_failed, stop_failed, stopped, stopping, terminated, or terminating.
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to.
    subnetIdRef : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tenancy : str, default is Undefined, optional
        Instance tenancy to use. Valid values are default, dedicated or host.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances will use. Valid values are paravirtual or hvm.
    """


    agentVersion?: str

    amiId?: str

    architecture?: str

    autoScalingType?: str

    availabilityZone?: str

    createdAt?: str

    deleteEbs?: bool

    deleteEip?: bool

    ebsBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    ecsClusterArn?: str

    elasticIp?: str

    ephemeralBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0]

    hostname?: str

    infrastructureClass?: str

    installUpdatesOnBoot?: bool

    instanceProfileArn?: str

    instanceType?: str

    layerIds?: [str]

    layerIdsRefs?: [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0]

    layerIdsSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelector

    os?: str

    rootBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0]

    rootDeviceType?: str

    securityGroupIdRefs?: [OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    sshKeyName?: str

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelector

    state?: str

    status?: str

    subnetId?: str

    subnetIdRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef

    subnetIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector

    tenancy?: str

    virtualizationType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec for provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    deviceName?: str

    iops?: float

    snapshotId?: str

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec for provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    virtualName?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelector:
    r"""
    Selector for a list of CustomLayer in opsworks to populate layerIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderLayerIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec for provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    iops?: float

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        OpsWorks agent to install. Default is INHERIT.
    amiId : str, default is Undefined, optional
        AMI to use for the instance.  If an AMI is specified, os must be Custom.
    architecture : str, default is Undefined, optional
        Machine architecture for created instances.  Valid values are x86_64 or i386. The default is x86_64.
    autoScalingType : str, default is Undefined, optional
        Creates load-based or time-based instances.  Valid values are load, timer.
    availabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
    createdAt : str, default is Undefined, optional
        Time that the instance was created.
    deleteEbs : bool, default is Undefined, optional
        Whether to delete EBS volume on deletion. Default is true.
    deleteEip : bool, default is Undefined, optional
        Whether to delete the Elastic IP on deletion.
    ebsBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0], default is Undefined, optional
        Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
    ebsOptimized : bool, default is Undefined, optional
        Whether the launched EC2 instance will be EBS-optimized.
    ecsClusterArn : str, default is Undefined, optional
        ECS cluster's ARN for container instances.
    elasticIp : str, default is Undefined, optional
        Instance Elastic IP address.
    ephemeralBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
    hostname : str, default is Undefined, optional
        Instance's host name.
    infrastructureClass : str, default is Undefined, optional
        For registered instances, infrastructure class: ec2 or on-premises.
    installUpdatesOnBoot : bool, default is Undefined, optional
        Controls where to install OS and package updates when the instance boots.  Default is true.
    instanceProfileArn : str, default is Undefined, optional
        ARN of the instance's IAM profile.
    instanceType : str, default is Undefined, optional
        Type of instance to start.
    layerIds : [str], default is Undefined, optional
        List of the layers the instance will belong to.
    layerIdsRefs : [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0], default is Undefined, optional
        References to CustomLayer in opsworks to populate layerIds.
    layerIdsSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelector, default is Undefined, optional
        layer ids selector
    os : str, default is Undefined, optional
        Name of operating system that will be installed.
    rootBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block for the root block device of the instance. See Block Devices below.
    rootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default. Valid values are ebs or instance-store.
    securityGroupIdRefs : [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Associated security groups.
    sshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    stackId : str, default is Undefined, optional
        Identifier of the stack the instance will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    state : str, default is Undefined, optional
        Desired state of the instance. Valid values are running or stopped.
    status : str, default is Undefined, optional
        Instance status. Will be one of booting, connection_lost, online, pending, rebooting, requested, running_setup, setup_failed, shutting_down, start_failed, stop_failed, stopped, stopping, terminated, or terminating.
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to.
    subnetIdRef : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tenancy : str, default is Undefined, optional
        Instance tenancy to use. Valid values are default, dedicated or host.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances will use. Valid values are paravirtual or hvm.
    """


    agentVersion?: str

    amiId?: str

    architecture?: str

    autoScalingType?: str

    availabilityZone?: str

    createdAt?: str

    deleteEbs?: bool

    deleteEip?: bool

    ebsBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    ecsClusterArn?: str

    elasticIp?: str

    ephemeralBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0]

    hostname?: str

    infrastructureClass?: str

    installUpdatesOnBoot?: bool

    instanceProfileArn?: str

    instanceType?: str

    layerIds?: [str]

    layerIdsRefs?: [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0]

    layerIdsSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelector

    os?: str

    rootBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0]

    rootDeviceType?: str

    securityGroupIdRefs?: [OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    sshKeyName?: str

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelector

    state?: str

    status?: str

    subnetId?: str

    subnetIdRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef

    subnetIdSelector?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector

    tenancy?: str

    virtualizationType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec init provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    deviceName?: str

    iops?: float

    snapshotId?: str

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec init provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    virtualName?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelector:
    r"""
    Selector for a list of CustomLayer in opsworks to populate layerIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderLayerIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance spec init provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    iops?: float

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OpsworksAwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1InstanceStatus:
    r"""
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : OpsworksAwsUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpsworksAwsUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpsworksAwsUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [OpsworksAwsUpboundIoV1beta1InstanceStatusConditionsItems0]

    observedGeneration?: int


schema OpsworksAwsUpboundIoV1beta1InstanceStatusAtProvider:
    r"""
    opsworks aws upbound io v1beta1 instance status at provider

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        OpsWorks agent to install. Default is INHERIT.
    amiId : str, default is Undefined, optional
        AMI to use for the instance.  If an AMI is specified, os must be Custom.
    architecture : str, default is Undefined, optional
        Machine architecture for created instances.  Valid values are x86_64 or i386. The default is x86_64.
    autoScalingType : str, default is Undefined, optional
        Creates load-based or time-based instances.  Valid values are load, timer.
    availabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
    createdAt : str, default is Undefined, optional
        Time that the instance was created.
    deleteEbs : bool, default is Undefined, optional
        Whether to delete EBS volume on deletion. Default is true.
    deleteEip : bool, default is Undefined, optional
        Whether to delete the Elastic IP on deletion.
    ebsBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0], default is Undefined, optional
        Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
    ebsOptimized : bool, default is Undefined, optional
        Whether the launched EC2 instance will be EBS-optimized.
    ec2InstanceId : str, default is Undefined, optional
        EC2 instance ID.
    ecsClusterArn : str, default is Undefined, optional
        ECS cluster's ARN for container instances.
    elasticIp : str, default is Undefined, optional
        Instance Elastic IP address.
    ephemeralBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
    hostname : str, default is Undefined, optional
        Instance's host name.
    id : str, default is Undefined, optional
        ID of the OpsWorks instance.
    infrastructureClass : str, default is Undefined, optional
        For registered instances, infrastructure class: ec2 or on-premises.
    installUpdatesOnBoot : bool, default is Undefined, optional
        Controls where to install OS and package updates when the instance boots.  Default is true.
    instanceProfileArn : str, default is Undefined, optional
        ARN of the instance's IAM profile.
    instanceType : str, default is Undefined, optional
        Type of instance to start.
    lastServiceErrorId : str, default is Undefined, optional
        ID of the last service error.
    layerIds : [str], default is Undefined, optional
        List of the layers the instance will belong to.
    os : str, default is Undefined, optional
        Name of operating system that will be installed.
    platform : str, default is Undefined, optional
        Instance's platform.
    privateDns : str, default is Undefined, optional
        Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
    privateIp : str, default is Undefined, optional
        Private IP address assigned to the instance.
    publicDns : str, default is Undefined, optional
        Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
    publicIp : str, default is Undefined, optional
        Public IP address assigned to the instance, if applicable.
    registeredBy : str, default is Undefined, optional
        For registered instances, who performed the registration.
    reportedAgentVersion : str, default is Undefined, optional
        Instance's reported AWS OpsWorks Stacks agent version.
    reportedOsFamily : str, default is Undefined, optional
        For registered instances, the reported operating system family.
    reportedOsName : str, default is Undefined, optional
        For registered instances, the reported operating system name.
    reportedOsVersion : str, default is Undefined, optional
        For registered instances, the reported operating system version.
    rootBlockDevice : [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block for the root block device of the instance. See Block Devices below.
    rootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default. Valid values are ebs or instance-store.
    rootDeviceVolumeId : str, default is Undefined, optional
        Root device volume ID.
    securityGroupIds : [str], default is Undefined, optional
        Associated security groups.
    sshHostDsaKeyFingerprint : str, default is Undefined, optional
        SSH key's Deep Security Agent (DSA) fingerprint.
    sshHostRsaKeyFingerprint : str, default is Undefined, optional
        SSH key's RSA fingerprint.
    sshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    stackId : str, default is Undefined, optional
        Identifier of the stack the instance will belong to.
    state : str, default is Undefined, optional
        Desired state of the instance. Valid values are running or stopped.
    status : str, default is Undefined, optional
        Instance status. Will be one of booting, connection_lost, online, pending, rebooting, requested, running_setup, setup_failed, shutting_down, start_failed, stop_failed, stopped, stopping, terminated, or terminating.
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to.
    tenancy : str, default is Undefined, optional
        Instance tenancy to use. Valid values are default, dedicated or host.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances will use. Valid values are paravirtual or hvm.
    """


    agentVersion?: str

    amiId?: str

    architecture?: str

    autoScalingType?: str

    availabilityZone?: str

    createdAt?: str

    deleteEbs?: bool

    deleteEip?: bool

    ebsBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    ec2InstanceId?: str

    ecsClusterArn?: str

    elasticIp?: str

    ephemeralBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0]

    hostname?: str

    id?: str

    infrastructureClass?: str

    installUpdatesOnBoot?: bool

    instanceProfileArn?: str

    instanceType?: str

    lastServiceErrorId?: str

    layerIds?: [str]

    os?: str

    platform?: str

    privateDns?: str

    privateIp?: str

    publicDns?: str

    publicIp?: str

    registeredBy?: str

    reportedAgentVersion?: str

    reportedOsFamily?: str

    reportedOsName?: str

    reportedOsVersion?: str

    rootBlockDevice?: [OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0]

    rootDeviceType?: str

    rootDeviceVolumeId?: str

    securityGroupIds?: [str]

    sshHostDsaKeyFingerprint?: str

    sshHostRsaKeyFingerprint?: str

    sshKeyName?: str

    stackId?: str

    state?: str

    status?: str

    subnetId?: str

    tenancy?: str

    virtualizationType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance status at provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    deviceName?: str

    iops?: float

    snapshotId?: str

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance status at provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    virtualName?: str


schema OpsworksAwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0:
    r"""
    opsworks aws upbound io v1beta1 instance status at provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Default is true.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. This must be set with a volume_type of io1.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values are standard, gp2, or io1. Default is standard.
    """


    deleteOnTermination?: bool

    iops?: float

    volumeSize?: float

    volumeType?: str


schema OpsworksAwsUpboundIoV1beta1InstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


