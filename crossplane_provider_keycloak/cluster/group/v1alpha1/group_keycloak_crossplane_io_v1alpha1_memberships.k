"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Memberships:
    r"""
    Memberships is the Schema for the Membershipss API.

    Attributes
    ----------
    apiVersion : str, default is "group.keycloak.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Memberships", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpec, default is Undefined, required
        spec
    status : GroupKeycloakCrossplaneIoV1alpha1MembershipsStatus, default is Undefined, optional
        status
    """


    apiVersion: "group.keycloak.crossplane.io/v1alpha1" = "group.keycloak.crossplane.io/v1alpha1"

    kind: "Memberships" = "Memberships"

    metadata?: v1.ObjectMeta

    spec: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpec

    status?: GroupKeycloakCrossplaneIoV1alpha1MembershipsStatus


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpec:
    r"""
    MembershipsSpec defines the desired state of Memberships

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProvider, default is Undefined, required
        for provider
    initProvider : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProvider

    initProvider?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRef

    writeConnectionSecretToRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecWriteConnectionSecretToRef


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProvider:
    r"""
    group keycloak crossplane io v1alpha1 memberships spec for provider

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The ID of the group this resource should manage memberships for.
    groupIdRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelector, default is Undefined, optional
        group Id selector
    members : [str], default is Undefined, optional
        A list of usernames that belong to this group.
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    realmIdRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    groupId?: str

    groupIdRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRef

    groupIdSelector?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelector

    members?: [str]

    realmId?: str

    realmIdRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRef

    realmIdSelector?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelector


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRef:
    r"""
    Reference to a Group in group to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelector:
    r"""
    Selector for a Group in group to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The ID of the group this resource should manage memberships for.
    groupIdRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelector, default is Undefined, optional
        group Id selector
    members : [str], default is Undefined, optional
        A list of usernames that belong to this group.
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    realmIdRef : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    groupId?: str

    groupIdRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRef

    groupIdSelector?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelector

    members?: [str]

    realmId?: str

    realmIdRef?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRef

    realmIdSelector?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelector


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRef:
    r"""
    Reference to a Group in group to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelector:
    r"""
    Selector for a Group in group to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsStatus:
    r"""
    MembershipsStatus defines the observed state of Memberships.

    Attributes
    ----------
    atProvider : GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusAtProvider

    conditions?: [GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusConditionsItems0]

    observedGeneration?: int


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusAtProvider:
    r"""
    group keycloak crossplane io v1alpha1 memberships status at provider

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The ID of the group this resource should manage memberships for.
    id : str, default is Undefined, optional
        id
    members : [str], default is Undefined, optional
        A list of usernames that belong to this group.
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    """


    groupId?: str

    id?: str

    members?: [str]

    realmId?: str


schema GroupKeycloakCrossplaneIoV1alpha1MembershipsStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


