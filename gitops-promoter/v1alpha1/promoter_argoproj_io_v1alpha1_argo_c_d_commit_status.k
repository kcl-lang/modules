"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ArgoCDCommitStatus:
    r"""
    ArgoCDCommitStatus is the Schema for the argocdcommitstatuses API.

    Attributes
    ----------
    apiVersion : str, default is "promoter.argoproj.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ArgoCDCommitStatus", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpec, default is Undefined, optional
        spec
    status : PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatus, default is Undefined, optional
        status
    """


    apiVersion: "promoter.argoproj.io/v1alpha1" = "promoter.argoproj.io/v1alpha1"

    kind: "ArgoCDCommitStatus" = "ArgoCDCommitStatus"

    metadata?: v1.ObjectMeta

    spec?: PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpec

    status?: PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatus


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpec:
    r"""
    ArgoCDCommitStatusSpec defines the desired state of ArgoCDCommitStatus.

    Attributes
    ----------
    applicationSelector : PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelector, default is Undefined, required
        application selector
    promotionStrategyRef : PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecPromotionStrategyRef, default is Undefined, required
        promotion strategy ref
    url : PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecURL, default is Undefined, optional
        url
    """


    applicationSelector: PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelector

    promotionStrategyRef: PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecPromotionStrategyRef

    url?: PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecURL


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelector:
    r"""
    ApplicationSelector is a label selector that selects the Argo CD applications to which this commit status applies.

    Attributes
    ----------
    matchExpressions : [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecApplicationSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecPromotionStrategyRef:
    r"""
    PromotionStrategyRef is a reference to the promotion strategy that this commit status applies to.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the object to refer to.
    """


    name: str


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusSpecURL:
    r"""
    URL generates the URL to use in the CommitStatus, for example a link to the Argo CD UI.

    Attributes
    ----------
    options : [str], default is Undefined, optional
        Options sets options for the template. Options are described by
        strings, either a simple string or "key=value". There can be at
        most one equals sign in an option string. If the option string
        is unrecognized or otherwise invalid, Option panics.

        Known options:

        missingkey: Control the behavior during execution if a map is
        indexed with a key that is not present in the map.

        	"missingkey=default" or "missingkey=invalid"
        		The default behavior: Do nothing and continue execution.
        		If printed, the result of the index operation is the string
        		"<no value>".
        	"missingkey=zero"
        		The operation returns the zero value for the map type's element.
        	"missingkey=error"
        		Execution stops immediately with an error.
    template : str, default is Undefined, optional
        Template is a go text template and receives .Environment and .ArgoCDCommitStatus variables. A function called urlQueryEscape
        is available to escape url query parameters. The template can be configured with options to control the behavior
        during execution if a variable is not present.

        Example:

          {{- $baseURL := "https://dev.argocd.local" -}}
          {{- if eq .Environment "environment/development" -}}
          {{- $baseURL = "https://dev.argocd.local" -}}
          {{- else if eq .Environment "environment/staging" -}}
          {{- $baseURL = "https://staging.argocd.local" -}}
          {{- else if eq .Environment "environment/production" -}}
          {{- $baseURL = "https://prod.argocd.local" -}}
          {{- end -}}
          {{- $labels := "" -}}
          {{- range $key, $value := .ArgoCDCommitStatus.Spec.ApplicationSelector.MatchLabels -}}
          {{- $labels = printf "%s%s=%s," $labels $key $value -}}
          {{- end -}}
          {{ printf "%s/applications?labels=%s" $baseURL (urlQueryEscape $labels) }}
    """


    options?: [str]

    template?: str


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatus:
    r"""
    ArgoCDCommitStatusStatus defines the observed state of ArgoCDCommitStatus.

    Attributes
    ----------
    applicationsSelected : [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusApplicationsSelectedItems0], default is Undefined, optional
        ApplicationsSelected represents the Argo CD applications that are selected by the commit status.
        This field is sorted by environment (same order as the referenced PromotionStrategy), then namespace, then name.
    conditions : [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusConditionsItems0], default is Undefined, optional
        Conditions Represents the observations of the current state.
    """


    applicationsSelected?: [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusApplicationsSelectedItems0]

    conditions?: [PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusConditionsItems0]


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusApplicationsSelectedItems0:
    r"""
    ApplicationsSelected represents the Argo CD applications that are selected by the commit status.

    Attributes
    ----------
    clusterName : str, default is Undefined, required
        ClusterName is the name of the cluster that the application manifest is deployed to.
    environment : str, default is Undefined, optional
        Environment is the syncSource.targetBranch of the Argo CD application (in effect, its environment).
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the phase transitioned.
    name : str, default is Undefined, required
        Name is the name of the Argo CD application.
    namespace : str, default is Undefined, required
        Namespace is the namespace of the Argo CD application.
    phase : str, default is Undefined, required
        Phase is the current phase of the commit status.
    sha : str, default is Undefined, required
        Sha is the commit SHA that this status is associated with.
    """


    clusterName: str

    environment?: str

    lastTransitionTime?: str

    name: str

    namespace: str

    phase: str

    sha: str


schema PromoterArgoprojIoV1alpha1ArgoCDCommitStatusStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


