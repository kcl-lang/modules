"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Topic:
    r"""
    Topic is the Schema for the Topics API. Provides an SNS topic resource.

    Attributes
    ----------
    apiVersion : str, default is "sns.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Topic", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SnsAwsUpboundIoV1beta1TopicSpec, default is Undefined, required
        spec
    status : SnsAwsUpboundIoV1beta1TopicStatus, default is Undefined, optional
        status
    """


    apiVersion: "sns.aws.upbound.io/v1beta1" = "sns.aws.upbound.io/v1beta1"

    kind: "Topic" = "Topic"

    metadata?: v1.ObjectMeta

    spec: SnsAwsUpboundIoV1beta1TopicSpec

    status?: SnsAwsUpboundIoV1beta1TopicStatus


schema SnsAwsUpboundIoV1beta1TopicSpec:
    r"""
    TopicSpec defines the desired state of Topic

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SnsAwsUpboundIoV1beta1TopicSpecForProvider, default is Undefined, required
        for provider
    initProvider : SnsAwsUpboundIoV1beta1TopicSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SnsAwsUpboundIoV1beta1TopicSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SnsAwsUpboundIoV1beta1TopicSpecForProvider

    initProvider?: SnsAwsUpboundIoV1beta1TopicSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRef

    publishConnectionDetailsTo?: SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SnsAwsUpboundIoV1beta1TopicSpecWriteConnectionSecretToRef


schema SnsAwsUpboundIoV1beta1TopicSpecForProvider:
    r"""
    sns aws upbound io v1beta1 topic spec for provider

    Attributes
    ----------
    applicationFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    applicationFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRef, default is Undefined, optional
        application failure feedback role arn ref
    applicationFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelector, default is Undefined, optional
        application failure feedback role arn selector
    applicationSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    applicationSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRef, default is Undefined, optional
        application success feedback role arn ref
    applicationSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelector, default is Undefined, optional
        application success feedback role arn selector
    applicationSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    archivePolicy : str, default is Undefined, optional
        The message archive policy for FIFO topics. More details in the AWS documentation.
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO topics. For more information, see the related documentation
    deliveryPolicy : str, default is Undefined, optional
        The SNS delivery policy. More details in the AWS documentation.
    displayName : str, default is Undefined, optional
        The display name for the topic
    fifoTopic : bool, default is Undefined, optional
        Boolean indicating whether or not to create a FIFO (first-in-first-out) topic. FIFO topics can't deliver messages to customer managed endpoints, such as email addresses, mobile apps, SMS, or HTTP(S) endpoints. These endpoint types aren't guaranteed to preserve strict message ordering. Default is false.
    firehoseFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    firehoseFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRef, default is Undefined, optional
        firehose failure feedback role arn ref
    firehoseFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelector, default is Undefined, optional
        firehose failure feedback role arn selector
    firehoseSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    firehoseSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRef, default is Undefined, optional
        firehose success feedback role arn ref
    firehoseSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelector, default is Undefined, optional
        firehose success feedback role arn selector
    firehoseSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    httpFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    httpFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRef, default is Undefined, optional
        http failure feedback role arn ref
    httpFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelector, default is Undefined, optional
        http failure feedback role arn selector
    httpSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    httpSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRef, default is Undefined, optional
        http success feedback role arn ref
    httpSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelector, default is Undefined, optional
        http success feedback role arn selector
    httpSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms
    lambdaFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    lambdaFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRef, default is Undefined, optional
        lambda failure feedback role arn ref
    lambdaFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelector, default is Undefined, optional
        lambda failure feedback role arn selector
    lambdaSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    lambdaSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRef, default is Undefined, optional
        lambda success feedback role arn ref
    lambdaSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelector, default is Undefined, optional
        lambda success feedback role arn selector
    lambdaSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    policy : str, default is Undefined, optional
        The fully-formed AWS policy as JSON.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    signatureVersion : float, default is Undefined, optional
        If SignatureVersion should be 1 (SHA1) or 2 (SHA256). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
    sqsFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    sqsFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRef, default is Undefined, optional
        sqs failure feedback role arn ref
    sqsFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelector, default is Undefined, optional
        sqs failure feedback role arn selector
    sqsSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    sqsSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRef, default is Undefined, optional
        sqs success feedback role arn ref
    sqsSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelector, default is Undefined, optional
        sqs success feedback role arn selector
    sqsSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tracingConfig : str, default is Undefined, optional
        Tracing mode of an Amazon SNS topic. Valid values: "PassThrough", "Active".
    """


    applicationFailureFeedbackRoleArn?: str

    applicationFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRef

    applicationFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelector

    applicationSuccessFeedbackRoleArn?: str

    applicationSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRef

    applicationSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelector

    applicationSuccessFeedbackSampleRate?: float

    archivePolicy?: str

    contentBasedDeduplication?: bool

    deliveryPolicy?: str

    displayName?: str

    fifoTopic?: bool

    firehoseFailureFeedbackRoleArn?: str

    firehoseFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRef

    firehoseFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelector

    firehoseSuccessFeedbackRoleArn?: str

    firehoseSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRef

    firehoseSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelector

    firehoseSuccessFeedbackSampleRate?: float

    httpFailureFeedbackRoleArn?: str

    httpFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRef

    httpFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelector

    httpSuccessFeedbackRoleArn?: str

    httpSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRef

    httpSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelector

    httpSuccessFeedbackSampleRate?: float

    kmsMasterKeyId?: str

    lambdaFailureFeedbackRoleArn?: str

    lambdaFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRef

    lambdaFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelector

    lambdaSuccessFeedbackRoleArn?: str

    lambdaSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRef

    lambdaSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelector

    lambdaSuccessFeedbackSampleRate?: float

    policy?: str

    region: str

    signatureVersion?: float

    sqsFailureFeedbackRoleArn?: str

    sqsFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRef

    sqsFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelector

    sqsSuccessFeedbackRoleArn?: str

    sqsSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRef

    sqsSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelector

    sqsSuccessFeedbackSampleRate?: float

    tags?: {str:str}

    tracingConfig?: str


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate applicationFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate applicationFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate applicationSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate applicationSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderApplicationSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate firehoseFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate firehoseFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate firehoseSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate firehoseSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate httpFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate httpFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate httpSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate httpSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderHTTPSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate lambdaFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate lambdaFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate lambdaSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate lambdaSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderLambdaSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate sqsFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate sqsFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate sqsSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate sqsSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecForProviderSqsSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    applicationFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRef, default is Undefined, optional
        application failure feedback role arn ref
    applicationFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelector, default is Undefined, optional
        application failure feedback role arn selector
    applicationSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    applicationSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRef, default is Undefined, optional
        application success feedback role arn ref
    applicationSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelector, default is Undefined, optional
        application success feedback role arn selector
    applicationSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    archivePolicy : str, default is Undefined, optional
        The message archive policy for FIFO topics. More details in the AWS documentation.
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO topics. For more information, see the related documentation
    deliveryPolicy : str, default is Undefined, optional
        The SNS delivery policy. More details in the AWS documentation.
    displayName : str, default is Undefined, optional
        The display name for the topic
    fifoTopic : bool, default is Undefined, optional
        Boolean indicating whether or not to create a FIFO (first-in-first-out) topic. FIFO topics can't deliver messages to customer managed endpoints, such as email addresses, mobile apps, SMS, or HTTP(S) endpoints. These endpoint types aren't guaranteed to preserve strict message ordering. Default is false.
    firehoseFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    firehoseFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRef, default is Undefined, optional
        firehose failure feedback role arn ref
    firehoseFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelector, default is Undefined, optional
        firehose failure feedback role arn selector
    firehoseSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    firehoseSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRef, default is Undefined, optional
        firehose success feedback role arn ref
    firehoseSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelector, default is Undefined, optional
        firehose success feedback role arn selector
    firehoseSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    httpFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    httpFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRef, default is Undefined, optional
        http failure feedback role arn ref
    httpFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelector, default is Undefined, optional
        http failure feedback role arn selector
    httpSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    httpSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRef, default is Undefined, optional
        http success feedback role arn ref
    httpSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelector, default is Undefined, optional
        http success feedback role arn selector
    httpSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms
    lambdaFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    lambdaFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRef, default is Undefined, optional
        lambda failure feedback role arn ref
    lambdaFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelector, default is Undefined, optional
        lambda failure feedback role arn selector
    lambdaSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    lambdaSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRef, default is Undefined, optional
        lambda success feedback role arn ref
    lambdaSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelector, default is Undefined, optional
        lambda success feedback role arn selector
    lambdaSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    policy : str, default is Undefined, optional
        The fully-formed AWS policy as JSON.
    signatureVersion : float, default is Undefined, optional
        If SignatureVersion should be 1 (SHA1) or 2 (SHA256). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
    sqsFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    sqsFailureFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRef, default is Undefined, optional
        sqs failure feedback role arn ref
    sqsFailureFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelector, default is Undefined, optional
        sqs failure feedback role arn selector
    sqsSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    sqsSuccessFeedbackRoleArnRef : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRef, default is Undefined, optional
        sqs success feedback role arn ref
    sqsSuccessFeedbackRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelector, default is Undefined, optional
        sqs success feedback role arn selector
    sqsSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tracingConfig : str, default is Undefined, optional
        Tracing mode of an Amazon SNS topic. Valid values: "PassThrough", "Active".
    """


    applicationFailureFeedbackRoleArn?: str

    applicationFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRef

    applicationFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelector

    applicationSuccessFeedbackRoleArn?: str

    applicationSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRef

    applicationSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelector

    applicationSuccessFeedbackSampleRate?: float

    archivePolicy?: str

    contentBasedDeduplication?: bool

    deliveryPolicy?: str

    displayName?: str

    fifoTopic?: bool

    firehoseFailureFeedbackRoleArn?: str

    firehoseFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRef

    firehoseFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelector

    firehoseSuccessFeedbackRoleArn?: str

    firehoseSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRef

    firehoseSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelector

    firehoseSuccessFeedbackSampleRate?: float

    httpFailureFeedbackRoleArn?: str

    httpFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRef

    httpFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelector

    httpSuccessFeedbackRoleArn?: str

    httpSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRef

    httpSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelector

    httpSuccessFeedbackSampleRate?: float

    kmsMasterKeyId?: str

    lambdaFailureFeedbackRoleArn?: str

    lambdaFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRef

    lambdaFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelector

    lambdaSuccessFeedbackRoleArn?: str

    lambdaSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRef

    lambdaSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelector

    lambdaSuccessFeedbackSampleRate?: float

    policy?: str

    signatureVersion?: float

    sqsFailureFeedbackRoleArn?: str

    sqsFailureFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRef

    sqsFailureFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelector

    sqsSuccessFeedbackRoleArn?: str

    sqsSuccessFeedbackRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRef

    sqsSuccessFeedbackRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelector

    sqsSuccessFeedbackSampleRate?: float

    tags?: {str:str}

    tracingConfig?: str


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate applicationFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate applicationFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate applicationSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate applicationSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderApplicationSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate firehoseFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate firehoseFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate firehoseSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate firehoseSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderFirehoseSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate httpFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate httpFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate httpSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate httpSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderHTTPSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate lambdaFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate lambdaFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate lambdaSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate lambdaSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderLambdaSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate sqsFailureFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate sqsFailureFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsFailureFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRef:
    r"""
    Reference to a Role in iam to populate sqsSuccessFeedbackRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelector:
    r"""
    Selector for a Role in iam to populate sqsSuccessFeedbackRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecInitProviderSqsSuccessFeedbackRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRef

    metadata?: SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToMetadata

    name: str


schema SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SnsAwsUpboundIoV1beta1TopicSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SnsAwsUpboundIoV1beta1TopicStatus:
    r"""
    TopicStatus defines the observed state of Topic.

    Attributes
    ----------
    atProvider : SnsAwsUpboundIoV1beta1TopicStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SnsAwsUpboundIoV1beta1TopicStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SnsAwsUpboundIoV1beta1TopicStatusAtProvider

    conditions?: [SnsAwsUpboundIoV1beta1TopicStatusConditionsItems0]

    observedGeneration?: int


schema SnsAwsUpboundIoV1beta1TopicStatusAtProvider:
    r"""
    sns aws upbound io v1beta1 topic status at provider

    Attributes
    ----------
    applicationFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    applicationSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    applicationSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    archivePolicy : str, default is Undefined, optional
        The message archive policy for FIFO topics. More details in the AWS documentation.
    arn : str, default is Undefined, optional
        The ARN of the SNS topic, as a more obvious property (clone of id)
    beginningArchiveTime : str, default is Undefined, optional
        The oldest timestamp at which a FIFO topic subscriber can start a replay.
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO topics. For more information, see the related documentation
    deliveryPolicy : str, default is Undefined, optional
        The SNS delivery policy. More details in the AWS documentation.
    displayName : str, default is Undefined, optional
        The display name for the topic
    fifoTopic : bool, default is Undefined, optional
        Boolean indicating whether or not to create a FIFO (first-in-first-out) topic. FIFO topics can't deliver messages to customer managed endpoints, such as email addresses, mobile apps, SMS, or HTTP(S) endpoints. These endpoint types aren't guaranteed to preserve strict message ordering. Default is false.
    firehoseFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    firehoseSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    firehoseSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    httpFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    httpSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    httpSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    id : str, default is Undefined, optional
        The ARN of the SNS topic
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms
    lambdaFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    lambdaSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    lambdaSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    owner : str, default is Undefined, optional
        The AWS Account ID of the SNS topic owner
    policy : str, default is Undefined, optional
        The fully-formed AWS policy as JSON.
    signatureVersion : float, default is Undefined, optional
        If SignatureVersion should be 1 (SHA1) or 2 (SHA256). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
    sqsFailureFeedbackRoleArn : str, default is Undefined, optional
        IAM role for failure feedback
    sqsSuccessFeedbackRoleArn : str, default is Undefined, optional
        The IAM role permitted to receive success feedback for this topic
    sqsSuccessFeedbackSampleRate : float, default is Undefined, optional
        Percentage of success to sample
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tracingConfig : str, default is Undefined, optional
        Tracing mode of an Amazon SNS topic. Valid values: "PassThrough", "Active".
    """


    applicationFailureFeedbackRoleArn?: str

    applicationSuccessFeedbackRoleArn?: str

    applicationSuccessFeedbackSampleRate?: float

    archivePolicy?: str

    arn?: str

    beginningArchiveTime?: str

    contentBasedDeduplication?: bool

    deliveryPolicy?: str

    displayName?: str

    fifoTopic?: bool

    firehoseFailureFeedbackRoleArn?: str

    firehoseSuccessFeedbackRoleArn?: str

    firehoseSuccessFeedbackSampleRate?: float

    httpFailureFeedbackRoleArn?: str

    httpSuccessFeedbackRoleArn?: str

    httpSuccessFeedbackSampleRate?: float

    id?: str

    kmsMasterKeyId?: str

    lambdaFailureFeedbackRoleArn?: str

    lambdaSuccessFeedbackRoleArn?: str

    lambdaSuccessFeedbackSampleRate?: float

    owner?: str

    policy?: str

    signatureVersion?: float

    sqsFailureFeedbackRoleArn?: str

    sqsSuccessFeedbackRoleArn?: str

    sqsSuccessFeedbackSampleRate?: float

    tags?: {str:str}

    tagsAll?: {str:str}

    tracingConfig?: str


schema SnsAwsUpboundIoV1beta1TopicStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


