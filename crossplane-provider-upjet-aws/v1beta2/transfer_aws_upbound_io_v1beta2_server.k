"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Server:
    r"""
    Server is the Schema for the Servers API. Provides a AWS Transfer Server resource.

    Attributes
    ----------
    apiVersion : str, default is "transfer.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Server", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TransferAwsUpboundIoV1beta2ServerSpec, default is Undefined, required
        spec
    status : TransferAwsUpboundIoV1beta2ServerStatus, default is Undefined, optional
        status
    """


    apiVersion: "transfer.aws.upbound.io/v1beta2" = "transfer.aws.upbound.io/v1beta2"

    kind: "Server" = "Server"

    metadata?: v1.ObjectMeta

    spec: TransferAwsUpboundIoV1beta2ServerSpec

    status?: TransferAwsUpboundIoV1beta2ServerStatus


schema TransferAwsUpboundIoV1beta2ServerSpec:
    r"""
    ServerSpec defines the desired state of Server

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : TransferAwsUpboundIoV1beta2ServerSpecForProvider, default is Undefined, required
        for provider
    initProvider : TransferAwsUpboundIoV1beta2ServerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : TransferAwsUpboundIoV1beta2ServerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: TransferAwsUpboundIoV1beta2ServerSpecForProvider

    initProvider?: TransferAwsUpboundIoV1beta2ServerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRef

    publishConnectionDetailsTo?: TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: TransferAwsUpboundIoV1beta2ServerSpecWriteConnectionSecretToRef


schema TransferAwsUpboundIoV1beta2ServerSpecForProvider:
    r"""
    transfer aws upbound io v1beta2 server spec for provider

    Attributes
    ----------
    certificate : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when protocols is set to FTPS
    certificateRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRef, default is Undefined, optional
        certificate ref
    certificateSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelector, default is Undefined, optional
        certificate selector
    directoryId : str, default is Undefined, optional
        The directory service ID of the directory service you want to connect to with an identity_provider_type of AWS_DIRECTORY_SERVICE.
    directoryIdRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRef, default is Undefined, optional
        directory Id ref
    directoryIdSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelector, default is Undefined, optional
        directory Id selector
    domain : str, default is Undefined, optional
        The domain of the storage system that is used for file transfers. Valid values are: S3 and EFS. The default value is S3.
    endpointDetails : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetails, default is Undefined, optional
        endpoint details
    endpointType : str, default is Undefined, optional
        The type of endpoint that you want your SFTP server connect to. If you connect to a VPC (or VPC_ENDPOINT), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set PUBLIC.  Defaults to PUBLIC.
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is false. This option only applies to servers configured with a SERVICE_MANAGED identity_provider_type.
    function : str, default is Undefined, optional
        The ARN for a lambda function to use for the Identity provider.
    hostKeySecretRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderHostKeySecretRef, default is Undefined, optional
        host key secret ref
    identityProviderType : str, default is Undefined, optional
        The mode of authentication enabled for this service. The default value is SERVICE_MANAGED, which allows you to store and access SFTP user credentials within the service. API_GATEWAY indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using AWS_DIRECTORY_SERVICE will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the AWS_LAMBDA value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the function argument.
    invocationRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an identity_provider_type of API_GATEWAY.
    loggingRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
    loggingRoleRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRef, default is Undefined, optional
        logging role ref
    loggingRoleSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelector, default is Undefined, optional
        logging role selector
    postAuthenticationLoginBannerSecretRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderPostAuthenticationLoginBannerSecretRef, default is Undefined, optional
        post authentication login banner secret ref
    preAuthenticationLoginBannerSecretRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderPreAuthenticationLoginBannerSecretRef, default is Undefined, optional
        pre authentication login banner secret ref
    protocolDetails : TransferAwsUpboundIoV1beta2ServerSpecForProviderProtocolDetails, default is Undefined, optional
        protocol details
    protocols : [str], default is Undefined, optional
        Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to SFTP . The available protocols are:
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    s3StorageOptions : TransferAwsUpboundIoV1beta2ServerSpecForProviderS3StorageOptions, default is Undefined, optional
        s3 storage options
    securityPolicyName : str, default is Undefined, optional
        Specifies the name of the security policy that is attached to the server. Default value is: TransferSecurityPolicy-2018-11. The available values are:
    sftpAuthenticationMethods : str, default is Undefined, optional
        For SFTP-enabled servers, and for custom identity providers only. Valid values are PASSWORD, PUBLIC_KEY, PUBLIC_KEY_OR_PASSWORD and PUBLIC_KEY_AND_PASSWORD. Default value is: PUBLIC_KEY_OR_PASSWORD.
    structuredLogDestinations : [str], default is Undefined, optional
        A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
        This is a set of arns of destinations that will receive structured logs from the transfer server
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    url : str, default is Undefined, optional
        - URL of the service endpoint used to authenticate users with an identity_provider_type of API_GATEWAY.
    workflowDetails : TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetails, default is Undefined, optional
        workflow details
    """


    certificate?: str

    certificateRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRef

    certificateSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelector

    directoryId?: str

    directoryIdRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRef

    directoryIdSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelector

    domain?: str

    endpointDetails?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetails

    endpointType?: str

    forceDestroy?: bool

    function?: str

    hostKeySecretRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderHostKeySecretRef

    identityProviderType?: str

    invocationRole?: str

    loggingRole?: str

    loggingRoleRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRef

    loggingRoleSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelector

    postAuthenticationLoginBannerSecretRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderPostAuthenticationLoginBannerSecretRef

    preAuthenticationLoginBannerSecretRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderPreAuthenticationLoginBannerSecretRef

    protocolDetails?: TransferAwsUpboundIoV1beta2ServerSpecForProviderProtocolDetails

    protocols?: [str]

    region: str

    s3StorageOptions?: TransferAwsUpboundIoV1beta2ServerSpecForProviderS3StorageOptions

    securityPolicyName?: str

    sftpAuthenticationMethods?: str

    structuredLogDestinations?: [str]

    tags?: {str:str}

    url?: str

    workflowDetails?: TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetails


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRef:
    r"""
    Reference to a Certificate in acm to populate certificate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelector:
    r"""
    Selector for a Certificate in acm to populate certificate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderCertificateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate directoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate directoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetails:
    r"""
    The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. See endpoint_details Block below for details.

    Attributes
    ----------
    addressAllocationIds : [str], default is Undefined, optional
        A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when endpoint_type is set to VPC.
    addressAllocationIdsRefs : [TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate addressAllocationIds.
    addressAllocationIdsSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelector, default is Undefined, optional
        address allocation ids selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when endpoint_type is set to VPC.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when endpoint_type is set to VPC.
    subnetIdsRefs : [TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcEndpointId : str, default is Undefined, optional
        The ID of the VPC endpoint. This property can only be used when endpoint_type is set to VPC_ENDPOINT
    vpcId : str, default is Undefined, optional
        The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when endpoint_type is set to VPC.
    vpcIdRef : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    addressAllocationIds?: [str]

    addressAllocationIdsRefs?: [TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0]

    addressAllocationIdsSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelector

    securityGroupIds?: [str]

    subnetIds?: [str]

    subnetIdsRefs?: [TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0]

    subnetIdsSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelector

    vpcEndpointId?: str

    vpcId?: str

    vpcIdRef?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRef

    vpcIdSelector?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelector


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate addressAllocationIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsAddressAllocationIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0Policy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderEndpointDetailsVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderHostKeySecretRef:
    r"""
    RSA, ECDSA, or ED25519 private key (e.g., as generated by the ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key, ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key or ssh-keygen -t ed25519 -N "" -f my-new-server-key commands).

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRef:
    r"""
    Reference to a Role in iam to populate loggingRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelector:
    r"""
    Selector for a Role in iam to populate loggingRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderLoggingRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderPostAuthenticationLoginBannerSecretRef:
    r"""
    Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderPreAuthenticationLoginBannerSecretRef:
    r"""
    Specify a string to display when users connect to a server. This string is displayed before the user authenticates.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderProtocolDetails:
    r"""
    The protocol settings that are configured for your server. See protocol_details Block below for details.

    Attributes
    ----------
    as2Transports : [str], default is Undefined, optional
        Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.
    passiveIp : str, default is Undefined, optional
        Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address, such as the public IP address of a firewall, router, or load balancer.
    setStatOption : str, default is Undefined, optional
        Use to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket. Valid values: DEFAULT, ENABLE_NO_OP.
    tlsSessionResumptionMode : str, default is Undefined, optional
        A property used with Transfer Family servers that use the FTPS protocol. Provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. Valid values: DISABLED, ENABLED, ENFORCED.
    """


    as2Transports?: [str]

    passiveIp?: str

    setStatOption?: str

    tlsSessionResumptionMode?: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderS3StorageOptions:
    r"""
    Specifies whether or not performance for your Amazon S3 directories is optimized. This is disabled by default. See s3_storage_options Block below for details.

    Attributes
    ----------
    directoryListingOptimization : str, default is Undefined, optional
        Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are DISABLED, ENABLED.
    """


    directoryListingOptimization?: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetails:
    r"""
    Specifies the workflow details. See workflow_details Block below for details.

    Attributes
    ----------
    onPartialUpload : TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnPartialUpload, default is Undefined, optional
        on partial upload
    onUpload : TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnUpload, default is Undefined, optional
        on upload
    """


    onPartialUpload?: TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnPartialUpload

    onUpload?: TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnUpload


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnPartialUpload:
    r"""
    A trigger that starts a workflow if a file is only partially uploaded. See Workflow Detail below. See on_partial_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerSpecForProviderWorkflowDetailsOnUpload:
    r"""
    A trigger that starts a workflow: the workflow begins to execute after a file is uploaded. See on_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificate : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when protocols is set to FTPS
    certificateRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRef, default is Undefined, optional
        certificate ref
    certificateSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelector, default is Undefined, optional
        certificate selector
    directoryId : str, default is Undefined, optional
        The directory service ID of the directory service you want to connect to with an identity_provider_type of AWS_DIRECTORY_SERVICE.
    directoryIdRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRef, default is Undefined, optional
        directory Id ref
    directoryIdSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelector, default is Undefined, optional
        directory Id selector
    domain : str, default is Undefined, optional
        The domain of the storage system that is used for file transfers. Valid values are: S3 and EFS. The default value is S3.
    endpointDetails : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetails, default is Undefined, optional
        endpoint details
    endpointType : str, default is Undefined, optional
        The type of endpoint that you want your SFTP server connect to. If you connect to a VPC (or VPC_ENDPOINT), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set PUBLIC.  Defaults to PUBLIC.
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is false. This option only applies to servers configured with a SERVICE_MANAGED identity_provider_type.
    function : str, default is Undefined, optional
        The ARN for a lambda function to use for the Identity provider.
    hostKeySecretRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderHostKeySecretRef, default is Undefined, optional
        host key secret ref
    identityProviderType : str, default is Undefined, optional
        The mode of authentication enabled for this service. The default value is SERVICE_MANAGED, which allows you to store and access SFTP user credentials within the service. API_GATEWAY indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using AWS_DIRECTORY_SERVICE will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the AWS_LAMBDA value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the function argument.
    invocationRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an identity_provider_type of API_GATEWAY.
    loggingRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
    loggingRoleRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRef, default is Undefined, optional
        logging role ref
    loggingRoleSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelector, default is Undefined, optional
        logging role selector
    postAuthenticationLoginBannerSecretRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderPostAuthenticationLoginBannerSecretRef, default is Undefined, optional
        post authentication login banner secret ref
    preAuthenticationLoginBannerSecretRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderPreAuthenticationLoginBannerSecretRef, default is Undefined, optional
        pre authentication login banner secret ref
    protocolDetails : TransferAwsUpboundIoV1beta2ServerSpecInitProviderProtocolDetails, default is Undefined, optional
        protocol details
    protocols : [str], default is Undefined, optional
        Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to SFTP . The available protocols are:
    s3StorageOptions : TransferAwsUpboundIoV1beta2ServerSpecInitProviderS3StorageOptions, default is Undefined, optional
        s3 storage options
    securityPolicyName : str, default is Undefined, optional
        Specifies the name of the security policy that is attached to the server. Default value is: TransferSecurityPolicy-2018-11. The available values are:
    sftpAuthenticationMethods : str, default is Undefined, optional
        For SFTP-enabled servers, and for custom identity providers only. Valid values are PASSWORD, PUBLIC_KEY, PUBLIC_KEY_OR_PASSWORD and PUBLIC_KEY_AND_PASSWORD. Default value is: PUBLIC_KEY_OR_PASSWORD.
    structuredLogDestinations : [str], default is Undefined, optional
        A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
        This is a set of arns of destinations that will receive structured logs from the transfer server
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    url : str, default is Undefined, optional
        - URL of the service endpoint used to authenticate users with an identity_provider_type of API_GATEWAY.
    workflowDetails : TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetails, default is Undefined, optional
        workflow details
    """


    certificate?: str

    certificateRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRef

    certificateSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelector

    directoryId?: str

    directoryIdRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRef

    directoryIdSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelector

    domain?: str

    endpointDetails?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetails

    endpointType?: str

    forceDestroy?: bool

    function?: str

    hostKeySecretRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderHostKeySecretRef

    identityProviderType?: str

    invocationRole?: str

    loggingRole?: str

    loggingRoleRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRef

    loggingRoleSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelector

    postAuthenticationLoginBannerSecretRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderPostAuthenticationLoginBannerSecretRef

    preAuthenticationLoginBannerSecretRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderPreAuthenticationLoginBannerSecretRef

    protocolDetails?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderProtocolDetails

    protocols?: [str]

    s3StorageOptions?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderS3StorageOptions

    securityPolicyName?: str

    sftpAuthenticationMethods?: str

    structuredLogDestinations?: [str]

    tags?: {str:str}

    url?: str

    workflowDetails?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetails


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRef:
    r"""
    Reference to a Certificate in acm to populate certificate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelector:
    r"""
    Selector for a Certificate in acm to populate certificate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderCertificateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate directoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate directoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetails:
    r"""
    The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. See endpoint_details Block below for details.

    Attributes
    ----------
    addressAllocationIds : [str], default is Undefined, optional
        A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when endpoint_type is set to VPC.
    addressAllocationIdsRefs : [TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate addressAllocationIds.
    addressAllocationIdsSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelector, default is Undefined, optional
        address allocation ids selector
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when endpoint_type is set to VPC.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when endpoint_type is set to VPC.
    subnetIdsRefs : [TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcEndpointId : str, default is Undefined, optional
        The ID of the VPC endpoint. This property can only be used when endpoint_type is set to VPC_ENDPOINT
    vpcId : str, default is Undefined, optional
        The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when endpoint_type is set to VPC.
    vpcIdRef : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    addressAllocationIds?: [str]

    addressAllocationIdsRefs?: [TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0]

    addressAllocationIdsSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelector

    securityGroupIds?: [str]

    subnetIds?: [str]

    subnetIdsRefs?: [TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0]

    subnetIdsSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelector

    vpcEndpointId?: str

    vpcId?: str

    vpcIdRef?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRef

    vpcIdSelector?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelector


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate addressAllocationIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsAddressAllocationIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0Policy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderEndpointDetailsVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderHostKeySecretRef:
    r"""
    RSA, ECDSA, or ED25519 private key (e.g., as generated by the ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key, ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key or ssh-keygen -t ed25519 -N "" -f my-new-server-key commands).

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRef:
    r"""
    Reference to a Role in iam to populate loggingRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelector:
    r"""
    Selector for a Role in iam to populate loggingRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelectorPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderLoggingRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderPostAuthenticationLoginBannerSecretRef:
    r"""
    Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderPreAuthenticationLoginBannerSecretRef:
    r"""
    Specify a string to display when users connect to a server. This string is displayed before the user authenticates.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderProtocolDetails:
    r"""
    The protocol settings that are configured for your server. See protocol_details Block below for details.

    Attributes
    ----------
    as2Transports : [str], default is Undefined, optional
        Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.
    passiveIp : str, default is Undefined, optional
        Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address, such as the public IP address of a firewall, router, or load balancer.
    setStatOption : str, default is Undefined, optional
        Use to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket. Valid values: DEFAULT, ENABLE_NO_OP.
    tlsSessionResumptionMode : str, default is Undefined, optional
        A property used with Transfer Family servers that use the FTPS protocol. Provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. Valid values: DISABLED, ENABLED, ENFORCED.
    """


    as2Transports?: [str]

    passiveIp?: str

    setStatOption?: str

    tlsSessionResumptionMode?: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderS3StorageOptions:
    r"""
    Specifies whether or not performance for your Amazon S3 directories is optimized. This is disabled by default. See s3_storage_options Block below for details.

    Attributes
    ----------
    directoryListingOptimization : str, default is Undefined, optional
        Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are DISABLED, ENABLED.
    """


    directoryListingOptimization?: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetails:
    r"""
    Specifies the workflow details. See workflow_details Block below for details.

    Attributes
    ----------
    onPartialUpload : TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnPartialUpload, default is Undefined, optional
        on partial upload
    onUpload : TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnUpload, default is Undefined, optional
        on upload
    """


    onPartialUpload?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnPartialUpload

    onUpload?: TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnUpload


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnPartialUpload:
    r"""
    A trigger that starts a workflow if a file is only partially uploaded. See Workflow Detail below. See on_partial_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerSpecInitProviderWorkflowDetailsOnUpload:
    r"""
    A trigger that starts a workflow: the workflow begins to execute after a file is uploaded. See on_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRef

    metadata?: TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToMetadata

    name: str


schema TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRefPolicy


schema TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta2ServerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema TransferAwsUpboundIoV1beta2ServerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta2ServerStatus:
    r"""
    ServerStatus defines the observed state of Server.

    Attributes
    ----------
    atProvider : TransferAwsUpboundIoV1beta2ServerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [TransferAwsUpboundIoV1beta2ServerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: TransferAwsUpboundIoV1beta2ServerStatusAtProvider

    conditions?: [TransferAwsUpboundIoV1beta2ServerStatusConditionsItems0]

    observedGeneration?: int


schema TransferAwsUpboundIoV1beta2ServerStatusAtProvider:
    r"""
    transfer aws upbound io v1beta2 server status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of Transfer Server
    certificate : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when protocols is set to FTPS
    directoryId : str, default is Undefined, optional
        The directory service ID of the directory service you want to connect to with an identity_provider_type of AWS_DIRECTORY_SERVICE.
    domain : str, default is Undefined, optional
        The domain of the storage system that is used for file transfers. Valid values are: S3 and EFS. The default value is S3.
    endpoint : str, default is Undefined, optional
        The endpoint of the Transfer Server (e.g., s-12345678.server.transfer.REGION.amazonaws.com)
    endpointDetails : TransferAwsUpboundIoV1beta2ServerStatusAtProviderEndpointDetails, default is Undefined, optional
        endpoint details
    endpointType : str, default is Undefined, optional
        The type of endpoint that you want your SFTP server connect to. If you connect to a VPC (or VPC_ENDPOINT), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set PUBLIC.  Defaults to PUBLIC.
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is false. This option only applies to servers configured with a SERVICE_MANAGED identity_provider_type.
    function : str, default is Undefined, optional
        The ARN for a lambda function to use for the Identity provider.
    hostKeyFingerprint : str, default is Undefined, optional
        This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the ssh-keygen -l -E md5 -f my-new-server-key command.
    id : str, default is Undefined, optional
        The Server ID of the Transfer Server (e.g., s-12345678)
    identityProviderType : str, default is Undefined, optional
        The mode of authentication enabled for this service. The default value is SERVICE_MANAGED, which allows you to store and access SFTP user credentials within the service. API_GATEWAY indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using AWS_DIRECTORY_SERVICE will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the AWS_LAMBDA value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the function argument.
    invocationRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an identity_provider_type of API_GATEWAY.
    loggingRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
    protocolDetails : TransferAwsUpboundIoV1beta2ServerStatusAtProviderProtocolDetails, default is Undefined, optional
        protocol details
    protocols : [str], default is Undefined, optional
        Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to SFTP . The available protocols are:
    s3StorageOptions : TransferAwsUpboundIoV1beta2ServerStatusAtProviderS3StorageOptions, default is Undefined, optional
        s3 storage options
    securityPolicyName : str, default is Undefined, optional
        Specifies the name of the security policy that is attached to the server. Default value is: TransferSecurityPolicy-2018-11. The available values are:
    sftpAuthenticationMethods : str, default is Undefined, optional
        For SFTP-enabled servers, and for custom identity providers only. Valid values are PASSWORD, PUBLIC_KEY, PUBLIC_KEY_OR_PASSWORD and PUBLIC_KEY_AND_PASSWORD. Default value is: PUBLIC_KEY_OR_PASSWORD.
    structuredLogDestinations : [str], default is Undefined, optional
        A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
        This is a set of arns of destinations that will receive structured logs from the transfer server
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    url : str, default is Undefined, optional
        - URL of the service endpoint used to authenticate users with an identity_provider_type of API_GATEWAY.
    workflowDetails : TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetails, default is Undefined, optional
        workflow details
    """


    arn?: str

    certificate?: str

    directoryId?: str

    domain?: str

    endpoint?: str

    endpointDetails?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderEndpointDetails

    endpointType?: str

    forceDestroy?: bool

    function?: str

    hostKeyFingerprint?: str

    id?: str

    identityProviderType?: str

    invocationRole?: str

    loggingRole?: str

    protocolDetails?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderProtocolDetails

    protocols?: [str]

    s3StorageOptions?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderS3StorageOptions

    securityPolicyName?: str

    sftpAuthenticationMethods?: str

    structuredLogDestinations?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    url?: str

    workflowDetails?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetails


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderEndpointDetails:
    r"""
    The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. See endpoint_details Block below for details.

    Attributes
    ----------
    addressAllocationIds : [str], default is Undefined, optional
        A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when endpoint_type is set to VPC.
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when endpoint_type is set to VPC.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when endpoint_type is set to VPC.
    vpcEndpointId : str, default is Undefined, optional
        The ID of the VPC endpoint. This property can only be used when endpoint_type is set to VPC_ENDPOINT
    vpcId : str, default is Undefined, optional
        The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when endpoint_type is set to VPC.
    """


    addressAllocationIds?: [str]

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcEndpointId?: str

    vpcId?: str


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderProtocolDetails:
    r"""
    The protocol settings that are configured for your server. See protocol_details Block below for details.

    Attributes
    ----------
    as2Transports : [str], default is Undefined, optional
        Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.
    passiveIp : str, default is Undefined, optional
        Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address, such as the public IP address of a firewall, router, or load balancer.
    setStatOption : str, default is Undefined, optional
        Use to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket. Valid values: DEFAULT, ENABLE_NO_OP.
    tlsSessionResumptionMode : str, default is Undefined, optional
        A property used with Transfer Family servers that use the FTPS protocol. Provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. Valid values: DISABLED, ENABLED, ENFORCED.
    """


    as2Transports?: [str]

    passiveIp?: str

    setStatOption?: str

    tlsSessionResumptionMode?: str


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderS3StorageOptions:
    r"""
    Specifies whether or not performance for your Amazon S3 directories is optimized. This is disabled by default. See s3_storage_options Block below for details.

    Attributes
    ----------
    directoryListingOptimization : str, default is Undefined, optional
        Specifies whether or not performance for your Amazon S3 directories is optimized. Valid values are DISABLED, ENABLED.
    """


    directoryListingOptimization?: str


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetails:
    r"""
    Specifies the workflow details. See workflow_details Block below for details.

    Attributes
    ----------
    onPartialUpload : TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnPartialUpload, default is Undefined, optional
        on partial upload
    onUpload : TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnUpload, default is Undefined, optional
        on upload
    """


    onPartialUpload?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnPartialUpload

    onUpload?: TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnUpload


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnPartialUpload:
    r"""
    A trigger that starts a workflow if a file is only partially uploaded. See Workflow Detail below. See on_partial_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerStatusAtProviderWorkflowDetailsOnUpload:
    r"""
    A trigger that starts a workflow: the workflow begins to execute after a file is uploaded. See on_upload Block below for details.

    Attributes
    ----------
    executionRole : str, default is Undefined, optional
        Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
    workflowId : str, default is Undefined, optional
        A unique identifier for the workflow.
    """


    executionRole?: str

    workflowId?: str


schema TransferAwsUpboundIoV1beta2ServerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


