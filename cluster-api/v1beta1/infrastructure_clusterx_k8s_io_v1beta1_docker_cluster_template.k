"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DockerClusterTemplate:
    r"""
    DockerClusterTemplate is the Schema for the dockerclustertemplates API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DockerClusterTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpec, default is Undefined, optional
        spec
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "DockerClusterTemplate" = "DockerClusterTemplate"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpec:
    r"""
    DockerClusterTemplateSpec defines the desired state of DockerClusterTemplate.

    Attributes
    ----------
    template : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplate


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplate:
    r"""
    DockerClusterTemplateResource describes the data needed to create a DockerCluster from a template.

    Attributes
    ----------
    metadata : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateMetadata

    spec: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpec


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpec:
    r"""
    DockerClusterSpec defines the desired state of DockerCluster.

    Attributes
    ----------
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    failureDomains : {str:InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecFailureDomainsAnon}, default is Undefined, optional
        FailureDomains are usually not defined in the spec.
        The docker provider is special since failure domains don't mean anything in a local docker environment.
        Instead, the docker cluster controller will simply copy these into the Status and allow the Cluster API
        controllers to do what they will with the defined failure domains.
    loadBalancer : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancer, default is Undefined, optional
        load balancer
    """


    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecControlPlaneEndpoint

    failureDomains?: {str:InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecFailureDomainsAnon}

    loadBalancer?: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancer


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        Host is the hostname on which the API server is serving.
    port : int, default is Undefined, required
        Port is the port on which the API server is serving.
        Defaults to 6443 if not set.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancer:
    r"""
    LoadBalancer allows defining configurations for the cluster load balancer.

    Attributes
    ----------
    customHAProxyConfigTemplateRef : InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancerCustomHAProxyConfigTemplateRef, default is Undefined, optional
        custom h a proxy config template ref
    imageRepository : str, default is Undefined, optional
        ImageRepository sets the container registry to pull the haproxy image from.
        if not set, "kindest" will be used instead.
    imageTag : str, default is Undefined, optional
        ImageTag allows to specify a tag for the haproxy image.
        if not set, "v20210715-a6da3463" will be used instead.
    """


    customHAProxyConfigTemplateRef?: InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancerCustomHAProxyConfigTemplateRef

    imageRepository?: str

    imageTag?: str


schema InfrastructureClusterxK8sIoV1beta1DockerClusterTemplateSpecTemplateSpecLoadBalancerCustomHAProxyConfigTemplateRef:
    r"""
    CustomHAProxyConfigTemplateRef allows you to replace the default HAProxy config file.
    This field is a reference to a config map that contains the configuration template. The key of the config map should be equal to 'value'.
    The content of the config map will be processed and will replace the default HAProxy config file. Please use it with caution, as there are
    no checks to ensure the validity of the configuration. This template will support the following variables that will be passed by the controller:
    $IPv6 (bool) indicates if the cluster is IPv6, $FrontendControlPlanePort (string) indicates the frontend control plane port,
    $BackendControlPlanePort (string) indicates the backend control plane port, $BackendServers (map[string]string) indicates the backend server
    where the key is the server name and the value is the address. This map is dynamic and is updated every time a new control plane
    node is added or removed. The template will also support the JoinHostPort function to join the host and port of the backend server.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        TODO: Add other useful fields. apiVersion, kind, uid?
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
    """


    name?: str = ""


