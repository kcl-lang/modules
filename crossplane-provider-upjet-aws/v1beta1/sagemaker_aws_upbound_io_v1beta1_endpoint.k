"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Endpoint:
    r"""
    Endpoint is the Schema for the Endpoints API. Provides a SageMaker Endpoint resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Endpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta1EndpointSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta1EndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta1" = "sagemaker.aws.upbound.io/v1beta1"

    kind: "Endpoint" = "Endpoint"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta1EndpointSpec

    status?: SagemakerAwsUpboundIoV1beta1EndpointStatus


schema SagemakerAwsUpboundIoV1beta1EndpointSpec:
    r"""
    EndpointSpec defines the desired state of Endpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta1EndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta1EndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta1EndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta1EndpointSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta1EndpointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta1EndpointSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider

    Attributes
    ----------
    deploymentConfig : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0], default is Undefined, optional
        The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
    endpointConfigName : str, default is Undefined, optional
        The name of the endpoint configuration to use.
    endpointConfigNameRef : SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRef, default is Undefined, optional
        endpoint config name ref
    endpointConfigNameSelector : SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelector, default is Undefined, optional
        endpoint config name selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    deploymentConfig?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0]

    endpointConfigName?: str

    endpointConfigNameRef?: SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRef

    endpointConfigNameSelector?: SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelector

    region: str

    tags?: {str:str}


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0

    Attributes
    ----------
    autoRollbackConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0], default is Undefined, optional
        Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
    blueGreenUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0], default is Undefined, optional
        Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
    rollingUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0], default is Undefined, optional
        Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
    """


    autoRollbackConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0]

    blueGreenUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0]

    rollingUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 auto rollback configuration items0

    Attributes
    ----------
    alarms : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0], default is Undefined, optional
        List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
    """


    alarms?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 auto rollback configuration items0 alarms items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The name of a CloudWatch alarm in your account.
    """


    alarmName?: str


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 blue green update policy items0

    Attributes
    ----------
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    terminationWaitInSeconds : float, default is Undefined, optional
        Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0. Valid values are between 0 and 3600.
    trafficRoutingConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0], default is Undefined, optional
        Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
    """


    maximumExecutionTimeoutInSeconds?: float

    terminationWaitInSeconds?: float

    trafficRoutingConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 blue green update policy items0 traffic routing configuration items0

    Attributes
    ----------
    canarySize : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0], default is Undefined, optional
        Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
    linearStepSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0], default is Undefined, optional
        Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    canarySize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0]

    linearStepSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0]

    $type?: str

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 blue green update policy items0 traffic routing configuration items0 canary size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 blue green update policy items0 traffic routing configuration items0 linear step size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 rolling update policy items0

    Attributes
    ----------
    maximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0], default is Undefined, optional
        Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    rollbackMaximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0], default is Undefined, optional
        Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    maximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0]

    maximumExecutionTimeoutInSeconds?: float

    rollbackMaximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0]

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 rolling update policy items0 maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec for provider deployment config items0 rolling update policy items0 rollback maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRef:
    r"""
    Reference to a EndpointConfiguration in sagemaker to populate endpointConfigName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelector:
    r"""
    Selector for a EndpointConfiguration in sagemaker to populate endpointConfigName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecForProviderEndpointConfigNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deploymentConfig : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0], default is Undefined, optional
        The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
    endpointConfigName : str, default is Undefined, optional
        The name of the endpoint configuration to use.
    endpointConfigNameRef : SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRef, default is Undefined, optional
        endpoint config name ref
    endpointConfigNameSelector : SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelector, default is Undefined, optional
        endpoint config name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    deploymentConfig?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0]

    endpointConfigName?: str

    endpointConfigNameRef?: SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRef

    endpointConfigNameSelector?: SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelector

    tags?: {str:str}


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0

    Attributes
    ----------
    autoRollbackConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0], default is Undefined, optional
        Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
    blueGreenUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0], default is Undefined, optional
        Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
    rollingUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0], default is Undefined, optional
        Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
    """


    autoRollbackConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0]

    blueGreenUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0]

    rollingUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 auto rollback configuration items0

    Attributes
    ----------
    alarms : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0], default is Undefined, optional
        List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
    """


    alarms?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 auto rollback configuration items0 alarms items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The name of a CloudWatch alarm in your account.
    """


    alarmName?: str


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 blue green update policy items0

    Attributes
    ----------
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    terminationWaitInSeconds : float, default is Undefined, optional
        Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0. Valid values are between 0 and 3600.
    trafficRoutingConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0], default is Undefined, optional
        Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
    """


    maximumExecutionTimeoutInSeconds?: float

    terminationWaitInSeconds?: float

    trafficRoutingConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 blue green update policy items0 traffic routing configuration items0

    Attributes
    ----------
    canarySize : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0], default is Undefined, optional
        Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
    linearStepSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0], default is Undefined, optional
        Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    canarySize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0]

    linearStepSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0]

    $type?: str

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 blue green update policy items0 traffic routing configuration items0 canary size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 blue green update policy items0 traffic routing configuration items0 linear step size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 rolling update policy items0

    Attributes
    ----------
    maximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0], default is Undefined, optional
        Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    rollbackMaximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0], default is Undefined, optional
        Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    maximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0]

    maximumExecutionTimeoutInSeconds?: float

    rollbackMaximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0]

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 rolling update policy items0 maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint spec init provider deployment config items0 rolling update policy items0 rollback maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRef:
    r"""
    Reference to a EndpointConfiguration in sagemaker to populate endpointConfigName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelector:
    r"""
    Selector for a EndpointConfiguration in sagemaker to populate endpointConfigName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecInitProviderEndpointConfigNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1EndpointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta1EndpointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta1EndpointStatus:
    r"""
    EndpointStatus defines the observed state of Endpoint.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta1EndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta1EndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta1EndpointStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta1EndpointStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) assigned by AWS to this endpoint.
    deploymentConfig : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0], default is Undefined, optional
        The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
    endpointConfigName : str, default is Undefined, optional
        The name of the endpoint configuration to use.
    id : str, default is Undefined, optional
        id
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    deploymentConfig?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0]

    endpointConfigName?: str

    id?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0

    Attributes
    ----------
    autoRollbackConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0], default is Undefined, optional
        Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
    blueGreenUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0], default is Undefined, optional
        Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
    rollingUpdatePolicy : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0], default is Undefined, optional
        Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
    """


    autoRollbackConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0]

    blueGreenUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0]

    rollingUpdatePolicy?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 auto rollback configuration items0

    Attributes
    ----------
    alarms : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0], default is Undefined, optional
        List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
    """


    alarms?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0AutoRollbackConfigurationItems0AlarmsItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 auto rollback configuration items0 alarms items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The name of a CloudWatch alarm in your account.
    """


    alarmName?: str


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 blue green update policy items0

    Attributes
    ----------
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    terminationWaitInSeconds : float, default is Undefined, optional
        Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is 0. Valid values are between 0 and 3600.
    trafficRoutingConfiguration : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0], default is Undefined, optional
        Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
    """


    maximumExecutionTimeoutInSeconds?: float

    terminationWaitInSeconds?: float

    trafficRoutingConfiguration?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0]


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 blue green update policy items0 traffic routing configuration items0

    Attributes
    ----------
    canarySize : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0], default is Undefined, optional
        Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
    linearStepSize : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0], default is Undefined, optional
        Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    canarySize?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0]

    linearStepSize?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0]

    $type?: str

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0CanarySizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 blue green update policy items0 traffic routing configuration items0 canary size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0BlueGreenUpdatePolicyItems0TrafficRoutingConfigurationItems0LinearStepSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 blue green update policy items0 traffic routing configuration items0 linear step size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 rolling update policy items0

    Attributes
    ----------
    maximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0], default is Undefined, optional
        Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
    maximumExecutionTimeoutInSeconds : float, default is Undefined, optional
        Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in termination_wait_in_seconds and wait_interval_in_seconds. Valid values are between 600 and 14400.
    rollbackMaximumBatchSize : [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0], default is Undefined, optional
        Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
    waitIntervalInSeconds : float, default is Undefined, optional
        The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between 0 and 3600.
    """


    maximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0]

    maximumExecutionTimeoutInSeconds?: float

    rollbackMaximumBatchSize?: [SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0]

    waitIntervalInSeconds?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0MaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 rolling update policy items0 maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusAtProviderDeploymentConfigItems0RollingUpdatePolicyItems0RollbackMaximumBatchSizeItems0:
    r"""
    sagemaker aws upbound io v1beta1 endpoint status at provider deployment config items0 rolling update policy items0 rollback maximum batch size items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Traffic routing strategy type. Valid values are: ALL_AT_ONCE, CANARY, and LINEAR.
    value : float, default is Undefined, optional
        Defines the capacity size, either as a number of instances or a capacity percentage.
    """


    $type?: str

    value?: float


schema SagemakerAwsUpboundIoV1beta1EndpointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


