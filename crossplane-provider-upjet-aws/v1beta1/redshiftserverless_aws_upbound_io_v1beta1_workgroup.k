"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Workgroup:
    r"""
    Workgroup is the Schema for the Workgroups API. Provides a Redshift Serverless Workgroup resource.

    Attributes
    ----------
    apiVersion : str, default is "redshiftserverless.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Workgroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpec, default is Undefined, required
        spec
    status : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "redshiftserverless.aws.upbound.io/v1beta1" = "redshiftserverless.aws.upbound.io/v1beta1"

    kind: "Workgroup" = "Workgroup"

    metadata?: v1.ObjectMeta

    spec: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpec

    status?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatus


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpec:
    r"""
    WorkgroupSpec defines the desired state of Workgroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProvider

    initProvider?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRef

    publishConnectionDetailsTo?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecWriteConnectionSecretToRef


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProvider:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup spec for provider

    Attributes
    ----------
    baseCapacity : float, default is Undefined, optional
        The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
    configParameter : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderConfigParameterItems0], default is Undefined, optional
        An array of parameters to set for more control over a serverless database. See Config Parameter below.
    enhancedVpcRouting : bool, default is Undefined, optional
        The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
    maxCapacity : float, default is Undefined, optional
        The maximum data-warehouse capacity Amazon Redshift Serverless uses to serve queries, specified in Redshift Processing Units (RPUs).
    namespaceName : str, default is Undefined, optional
        The name of the namespace.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections.
    publiclyAccessible : bool, default is Undefined, optional
        A value that specifies whether the workgroup can be accessed from a public network.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupIdRefs : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        An array of security group IDs to associate with the workgroup.
    subnetIdRefs : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following AWS document.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    baseCapacity?: float

    configParameter?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderConfigParameterItems0]

    enhancedVpcRouting?: bool

    maxCapacity?: float

    namespaceName?: str

    port?: float

    publiclyAccessible?: bool

    region: str

    securityGroupIdRefs?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0]

    subnetIdSelector?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderConfigParameterItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup spec for provider config parameter items0

    Attributes
    ----------
    parameterKey : str, default is Undefined, optional
        The key of the parameter. The options are auto_mv, datestyle, enable_case_sensitive_identifier, enable_user_activity_logging, query_group, search_path, require_ssl, use_fips_ssl, and query monitoring metrics that let you define performance boundaries: max_query_cpu_time, max_query_blocks_read, max_scan_row_count, max_query_execution_time, max_query_queue_time, max_query_cpu_usage_percent, max_query_temp_blocks_to_disk, max_join_row_count and max_nested_loop_join_row_count.
    parameterValue : str, default is Undefined, optional
        The value of the parameter to set.
    """


    parameterKey?: str

    parameterValue?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0Policy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelectorPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0Policy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelectorPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    baseCapacity : float, default is Undefined, optional
        The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
    configParameter : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderConfigParameterItems0], default is Undefined, optional
        An array of parameters to set for more control over a serverless database. See Config Parameter below.
    enhancedVpcRouting : bool, default is Undefined, optional
        The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
    maxCapacity : float, default is Undefined, optional
        The maximum data-warehouse capacity Amazon Redshift Serverless uses to serve queries, specified in Redshift Processing Units (RPUs).
    namespaceName : str, default is Undefined, optional
        The name of the namespace.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections.
    publiclyAccessible : bool, default is Undefined, optional
        A value that specifies whether the workgroup can be accessed from a public network.
    securityGroupIdRefs : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        An array of security group IDs to associate with the workgroup.
    subnetIdRefs : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following AWS document.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    baseCapacity?: float

    configParameter?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderConfigParameterItems0]

    enhancedVpcRouting?: bool

    maxCapacity?: float

    namespaceName?: str

    port?: float

    publiclyAccessible?: bool

    securityGroupIdRefs?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0]

    subnetIdSelector?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderConfigParameterItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup spec init provider config parameter items0

    Attributes
    ----------
    parameterKey : str, default is Undefined, optional
        The key of the parameter. The options are auto_mv, datestyle, enable_case_sensitive_identifier, enable_user_activity_logging, query_group, search_path, require_ssl, use_fips_ssl, and query monitoring metrics that let you define performance boundaries: max_query_cpu_time, max_query_blocks_read, max_scan_row_count, max_query_execution_time, max_query_queue_time, max_query_cpu_usage_percent, max_query_temp_blocks_to_disk, max_join_row_count and max_nested_loop_join_row_count.
    parameterValue : str, default is Undefined, optional
        The value of the parameter to set.
    """


    parameterKey?: str

    parameterValue?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0Policy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelectorPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0Policy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelectorPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRefPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRef

    metadata?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToMetadata

    name: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatus:
    r"""
    WorkgroupStatus defines the observed state of Workgroup.

    Attributes
    ----------
    atProvider : RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProvider

    conditions?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusConditionsItems0]

    observedGeneration?: int


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProvider:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
    baseCapacity : float, default is Undefined, optional
        The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
    configParameter : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderConfigParameterItems0], default is Undefined, optional
        An array of parameters to set for more control over a serverless database. See Config Parameter below.
    endpoint : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0], default is Undefined, optional
        The endpoint that is created from the workgroup. See Endpoint below.
    enhancedVpcRouting : bool, default is Undefined, optional
        The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
    id : str, default is Undefined, optional
        The Redshift Workgroup Name.
    maxCapacity : float, default is Undefined, optional
        The maximum data-warehouse capacity Amazon Redshift Serverless uses to serve queries, specified in Redshift Processing Units (RPUs).
    namespaceName : str, default is Undefined, optional
        The name of the namespace.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections.
    publiclyAccessible : bool, default is Undefined, optional
        A value that specifies whether the workgroup can be accessed from a public network.
    securityGroupIds : [str], default is Undefined, optional
        An array of security group IDs to associate with the workgroup.
    subnetIds : [str], default is Undefined, optional
        An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following AWS document.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    workgroupId : str, default is Undefined, optional
        The Redshift Workgroup ID.
    """


    arn?: str

    baseCapacity?: float

    configParameter?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderConfigParameterItems0]

    endpoint?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0]

    enhancedVpcRouting?: bool

    id?: str

    maxCapacity?: float

    namespaceName?: str

    port?: float

    publiclyAccessible?: bool

    securityGroupIds?: [str]

    subnetIds?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    workgroupId?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderConfigParameterItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup status at provider config parameter items0

    Attributes
    ----------
    parameterKey : str, default is Undefined, optional
        The key of the parameter. The options are auto_mv, datestyle, enable_case_sensitive_identifier, enable_user_activity_logging, query_group, search_path, require_ssl, use_fips_ssl, and query monitoring metrics that let you define performance boundaries: max_query_cpu_time, max_query_blocks_read, max_scan_row_count, max_query_execution_time, max_query_queue_time, max_query_cpu_usage_percent, max_query_temp_blocks_to_disk, max_join_row_count and max_nested_loop_join_row_count.
    parameterValue : str, default is Undefined, optional
        The value of the parameter to set.
    """


    parameterKey?: str

    parameterValue?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup status at provider endpoint items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The DNS address of the VPC endpoint.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections.
    vpcEndpoint : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0], default is Undefined, optional
        The VPC endpoint or the Redshift Serverless workgroup. See VPC Endpoint below.
    """


    address?: str

    port?: float

    vpcEndpoint?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0]


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup status at provider endpoint items0 vpc endpoint items0

    Attributes
    ----------
    networkInterface : [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0NetworkInterfaceItems0], default is Undefined, optional
        The network interfaces of the endpoint.. See Network Interface below.
    vpcEndpointId : str, default is Undefined, optional
        The DNS address of the VPC endpoint.
    vpcId : str, default is Undefined, optional
        The port that Amazon Redshift Serverless listens on.
    """


    networkInterface?: [RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0NetworkInterfaceItems0]

    vpcEndpointId?: str

    vpcId?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusAtProviderEndpointItems0VpcEndpointItems0NetworkInterfaceItems0:
    r"""
    redshiftserverless aws upbound io v1beta1 workgroup status at provider endpoint items0 vpc endpoint items0 network interface items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability Zone.
    networkInterfaceId : str, default is Undefined, optional
        The unique identifier of the network interface.
    privateIpAddress : str, default is Undefined, optional
        The IPv4 address of the network interface within the subnet.
    subnetId : str, default is Undefined, optional
        The unique identifier of the subnet.
    """


    availabilityZone?: str

    networkInterfaceId?: str

    privateIpAddress?: str

    subnetId?: str


schema RedshiftserverlessAwsUpboundIoV1beta1WorkgroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


