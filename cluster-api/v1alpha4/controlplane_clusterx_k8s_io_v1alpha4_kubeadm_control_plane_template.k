"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KubeadmControlPlaneTemplate:
    r"""
    KubeadmControlPlaneTemplate is the Schema for the kubeadmcontrolplanetemplates API.


    Deprecated: This type will be removed in one of the next releases.

    Attributes
    ----------
    apiVersion : str, default is "controlplane.cluster.x-k8s.io/v1alpha4", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KubeadmControlPlaneTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpec, default is Undefined, optional
        spec
    """


    apiVersion: "controlplane.cluster.x-k8s.io/v1alpha4" = "controlplane.cluster.x-k8s.io/v1alpha4"

    kind: "KubeadmControlPlaneTemplate" = "KubeadmControlPlaneTemplate"

    metadata?: v1.ObjectMeta

    spec?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpec


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpec:
    r"""
    KubeadmControlPlaneTemplateSpec defines the desired state of KubeadmControlPlaneTemplate.

    Attributes
    ----------
    template : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplate, default is Undefined, required
        template
    """


    template: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplate


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplate:
    r"""
    KubeadmControlPlaneTemplateResource describes the data needed to create a KubeadmControlPlane from a template.

    Attributes
    ----------
    spec : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpec, default is Undefined, required
        spec
    """


    spec: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpec


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpec:
    r"""
    KubeadmControlPlaneSpec defines the desired state of KubeadmControlPlane.

    Attributes
    ----------
    kubeadmConfigSpec : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpec, default is Undefined, required
        kubeadm config spec
    machineTemplate : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplate, default is Undefined, required
        machine template
    replicas : int, default is Undefined, optional
        Number of desired machines. Defaults to 1. When stacked etcd is used only
        odd numbers are permitted, as per [etcd best practice](https://etcd.io/docs/v3.3.12/faq/#why-an-odd-number-of-cluster-members).
        This is a pointer to distinguish between explicit zero and not specified.
    rolloutAfter : str, default is Undefined, optional
        RolloutAfter is a field to indicate a rollout should be performed
        after the specified time even if no changes have been made to the
        KubeadmControlPlane.
    rolloutStrategy : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategy, default is Undefined, optional
        rollout strategy
    version : str, default is Undefined, required
        Version defines the desired Kubernetes version.
    """


    kubeadmConfigSpec: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpec

    machineTemplate: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplate

    replicas?: int

    rolloutAfter?: str

    rolloutStrategy?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategy

    version: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpec:
    r"""
    KubeadmConfigSpec is a KubeadmConfigSpec
    to use for initializing and joining machines to the control plane.

    Attributes
    ----------
    clusterConfiguration : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfiguration, default is Undefined, optional
        cluster configuration
    diskSetup : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetup, default is Undefined, optional
        disk setup
    files : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0], default is Undefined, optional
        Files specifies extra files to be passed to user_data upon creation.
    format : str, default is Undefined, optional
        Format specifies the output format of the bootstrap data
    initConfiguration : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfiguration, default is Undefined, optional
        init configuration
    joinConfiguration : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfiguration, default is Undefined, optional
        join configuration
    mounts : [[str]], default is Undefined, optional
        Mounts specifies a list of mount points to be setup.
    ntp : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecNtp, default is Undefined, optional
        ntp
    postKubeadmCommands : [str], default is Undefined, optional
        PostKubeadmCommands specifies extra commands to run after kubeadm runs
    preKubeadmCommands : [str], default is Undefined, optional
        PreKubeadmCommands specifies extra commands to run before kubeadm runs
    useExperimentalRetryJoin : bool, default is Undefined, optional
        UseExperimentalRetryJoin replaces a basic kubeadm command with a shell
        script with retries for joins.


        This is meant to be an experimental temporary workaround on some environments
        where joins fail due to timing (and other issues). The long term goal is to add retries to
        kubeadm proper and use that functionality.


        This will add about 40KB to userdata


        For more information, refer to https://github.com/kubernetes-sigs/cluster-api/pull/2763#discussion_r397306055.
    users : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecUsersItems0], default is Undefined, optional
        Users specifies extra users to add
    verbosity : int, default is Undefined, optional
        Verbosity is the number for the kubeadm log level verbosity.
        It overrides the `--v` flag in kubeadm commands.
    """


    clusterConfiguration?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfiguration

    diskSetup?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetup

    files?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0]

    format?: "cloud-config"

    initConfiguration?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfiguration

    joinConfiguration?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfiguration

    mounts?: [[str]]

    ntp?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecNtp

    postKubeadmCommands?: [str]

    preKubeadmCommands?: [str]

    useExperimentalRetryJoin?: bool

    users?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecUsersItems0]

    verbosity?: int


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfiguration:
    r"""
    ClusterConfiguration along with InitConfiguration are the configurations necessary for the init command

    Attributes
    ----------
    apiServer : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServer, default is Undefined, optional
        api server
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    certificatesDir : str, default is Undefined, optional
        CertificatesDir specifies where to store or look for all required certificates.
        NB: if not provided, this will default to `/etc/kubernetes/pki`
    clusterName : str, default is Undefined, optional
        The cluster name
    controlPlaneEndpoint : str, default is Undefined, optional
        ControlPlaneEndpoint sets a stable IP address or DNS name for the control plane; it
        can be a valid IP address or a RFC-1123 DNS subdomain, both with optional TCP port.
        In case the ControlPlaneEndpoint is not specified, the AdvertiseAddress + BindPort
        are used; in case the ControlPlaneEndpoint is specified but without a TCP port,
        the BindPort is used.
        Possible usages are:
        e.g. In a cluster with more than one control plane instances, this field should be
        assigned the address of the external load balancer in front of the
        control plane instances.
        e.g.  in environments with enforced node recycling, the ControlPlaneEndpoint
        could be used for assigning a stable DNS to the control plane.
        NB: This value defaults to the first value in the Cluster object status.apiEndpoints array.
    controllerManager : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManager, default is Undefined, optional
        controller manager
    dns : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationDNS, default is Undefined, optional
        dns
    etcd : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcd, default is Undefined, optional
        etcd
    featureGates : {str:bool}, default is Undefined, optional
        FeatureGates enabled by the user.
    imageRepository : str, default is Undefined, optional
        ImageRepository sets the container registry to pull images from.
        If empty, `registry.k8s.io` will be used by default; in case of kubernetes version is a CI build (kubernetes version starts with `ci/` or `ci-cross/`)
        `gcr.io/k8s-staging-ci-images` will be used as a default for control plane components and for kube-proxy, while `registry.k8s.io`
        will be used for all the other images.
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    kubernetesVersion : str, default is Undefined, optional
        KubernetesVersion is the target version of the control plane.
        NB: This value defaults to the Machine object spec.version
    networking : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationNetworking, default is Undefined, optional
        networking
    scheduler : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationScheduler, default is Undefined, optional
        scheduler
    """


    apiServer?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServer

    apiVersion?: str

    certificatesDir?: str

    clusterName?: str

    controlPlaneEndpoint?: str

    controllerManager?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManager

    dns?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationDNS

    etcd?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcd

    featureGates?: {str:bool}

    imageRepository?: str

    kind?: str

    kubernetesVersion?: str

    networking?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationNetworking

    scheduler?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationScheduler


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServer:
    r"""
    APIServer contains extra settings for the API server control plane component

    Attributes
    ----------
    certSANs : [str], default is Undefined, optional
        CertSANs sets extra Subject Alternative Names for the API Server signing cert.
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs is an extra set of flags to pass to the control plane component.
        TODO: This is temporary and ideally we would like to switch all components to
        use ComponentConfig + ConfigMaps.
    extraVolumes : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServerExtraVolumesItems0], default is Undefined, optional
        ExtraVolumes is an extra set of host volumes, mounted to the control plane component.
    timeoutForControlPlane : str, default is Undefined, optional
        TimeoutForControlPlane controls the timeout that we use for API server to appear
    """


    certSANs?: [str]

    extraArgs?: {str:str}

    extraVolumes?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServerExtraVolumesItems0]

    timeoutForControlPlane?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationAPIServerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        HostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        MountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        Name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        PathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        ReadOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManager:
    r"""
    ControllerManager contains extra settings for the controller manager control plane component

    Attributes
    ----------
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs is an extra set of flags to pass to the control plane component.
        TODO: This is temporary and ideally we would like to switch all components to
        use ComponentConfig + ConfigMaps.
    extraVolumes : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManagerExtraVolumesItems0], default is Undefined, optional
        ExtraVolumes is an extra set of host volumes, mounted to the control plane component.
    """


    extraArgs?: {str:str}

    extraVolumes?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManagerExtraVolumesItems0]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationControllerManagerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        HostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        MountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        Name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        PathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        ReadOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationDNS:
    r"""
    DNS defines the options for the DNS add-on installed in the cluster.

    Attributes
    ----------
    imageRepository : str, default is Undefined, optional
        ImageRepository sets the container registry to pull images from.
        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
    imageTag : str, default is Undefined, optional
        ImageTag allows to specify a tag for the image.
        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
    """


    imageRepository?: str

    imageTag?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcd:
    r"""
    Etcd holds configuration for etcd.
    NB: This value defaults to a Local (stacked) etcd

    Attributes
    ----------
    external : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdExternal, default is Undefined, optional
        external
    local : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdLocal, default is Undefined, optional
        local
    """


    external?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdExternal

    local?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdLocal


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdExternal:
    r"""
    External describes how to connect to an external etcd cluster
    Local and External are mutually exclusive

    Attributes
    ----------
    caFile : str, default is Undefined, required
        CAFile is an SSL Certificate Authority file used to secure etcd communication.
        Required if using a TLS connection.
    certFile : str, default is Undefined, required
        CertFile is an SSL certification file used to secure etcd communication.
        Required if using a TLS connection.
    endpoints : [str], default is Undefined, required
        Endpoints of etcd members. Required for ExternalEtcd.
    keyFile : str, default is Undefined, required
        KeyFile is an SSL key file used to secure etcd communication.
        Required if using a TLS connection.
    """


    caFile: str

    certFile: str

    endpoints: [str]

    keyFile: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationEtcdLocal:
    r"""
    Local provides configuration knobs for configuring the local etcd instance
    Local and External are mutually exclusive

    Attributes
    ----------
    dataDir : str, default is Undefined, optional
        DataDir is the directory etcd will place its data.
        Defaults to "/var/lib/etcd".
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs are extra arguments provided to the etcd binary
        when run inside a static pod.
    imageRepository : str, default is Undefined, optional
        ImageRepository sets the container registry to pull images from.
        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
    imageTag : str, default is Undefined, optional
        ImageTag allows to specify a tag for the image.
        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
    peerCertSANs : [str], default is Undefined, optional
        PeerCertSANs sets extra Subject Alternative Names for the etcd peer signing cert.
    serverCertSANs : [str], default is Undefined, optional
        ServerCertSANs sets extra Subject Alternative Names for the etcd server signing cert.
    """


    dataDir?: str

    extraArgs?: {str:str}

    imageRepository?: str

    imageTag?: str

    peerCertSANs?: [str]

    serverCertSANs?: [str]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationNetworking:
    r"""
    Networking holds configuration for the networking topology of the cluster.
    NB: This value defaults to the Cluster object spec.clusterNetwork.

    Attributes
    ----------
    dnsDomain : str, default is Undefined, optional
        DNSDomain is the dns domain used by k8s services. Defaults to "cluster.local".
    podSubnet : str, default is Undefined, optional
        PodSubnet is the subnet used by pods.
        If unset, the API server will not allocate CIDR ranges for every node.
        Defaults to a comma-delimited string of the Cluster object's spec.clusterNetwork.services.cidrBlocks if that is set
    serviceSubnet : str, default is Undefined, optional
        ServiceSubnet is the subnet used by k8s services.
        Defaults to a comma-delimited string of the Cluster object's spec.clusterNetwork.pods.cidrBlocks, or
        to "10.96.0.0/12" if that's unset.
    """


    dnsDomain?: str

    podSubnet?: str

    serviceSubnet?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationScheduler:
    r"""
    Scheduler contains extra settings for the scheduler control plane component

    Attributes
    ----------
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs is an extra set of flags to pass to the control plane component.
        TODO: This is temporary and ideally we would like to switch all components to
        use ComponentConfig + ConfigMaps.
    extraVolumes : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationSchedulerExtraVolumesItems0], default is Undefined, optional
        ExtraVolumes is an extra set of host volumes, mounted to the control plane component.
    """


    extraArgs?: {str:str}

    extraVolumes?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationSchedulerExtraVolumesItems0]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecClusterConfigurationSchedulerExtraVolumesItems0:
    r"""
    HostPathMount contains elements describing volumes that are mounted from the
    host.

    Attributes
    ----------
    hostPath : str, default is Undefined, required
        HostPath is the path in the host that will be mounted inside
        the pod.
    mountPath : str, default is Undefined, required
        MountPath is the path inside the pod where hostPath will be mounted.
    name : str, default is Undefined, required
        Name of the volume inside the pod template.
    pathType : str, default is Undefined, optional
        PathType is the type of the HostPath.
    readOnly : bool, default is Undefined, optional
        ReadOnly controls write access to the volume
    """


    hostPath: str

    mountPath: str

    name: str

    pathType?: str

    readOnly?: bool


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetup:
    r"""
    DiskSetup specifies options for the creation of partition tables and file systems on devices.

    Attributes
    ----------
    filesystems : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupFilesystemsItems0], default is Undefined, optional
        Filesystems specifies the list of file systems to setup.
    partitions : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupPartitionsItems0], default is Undefined, optional
        Partitions specifies the list of the partitions to setup.
    """


    filesystems?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupFilesystemsItems0]

    partitions?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupPartitionsItems0]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupFilesystemsItems0:
    r"""
    Filesystem defines the file systems to be created.

    Attributes
    ----------
    device : str, default is Undefined, required
        Device specifies the device name
    extraOpts : [str], default is Undefined, optional
        ExtraOpts defined extra options to add to the command for creating the file system.
    filesystem : str, default is Undefined, required
        Filesystem specifies the file system type.
    label : str, default is Undefined, required
        Label specifies the file system label to be used. If set to None, no label is used.
    overwrite : bool, default is Undefined, optional
        Overwrite defines whether or not to overwrite any existing filesystem.
        If true, any pre-existing file system will be destroyed. Use with Caution.
    partition : str, default is Undefined, optional
        Partition specifies the partition to use. The valid options are: "auto|any", "auto", "any", "none", and <NUM>, where NUM is the actual partition number.
    replaceFS : str, default is Undefined, optional
        ReplaceFS is a special directive, used for Microsoft Azure that instructs cloud-init to replace a file system of <FS_TYPE>.
        NOTE: unless you define a label, this requires the use of the 'any' partition directive.
    """


    device: str

    extraOpts?: [str]

    filesystem: str

    label: str

    overwrite?: bool

    partition?: str

    replaceFS?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecDiskSetupPartitionsItems0:
    r"""
    Partition defines how to create and layout a partition.

    Attributes
    ----------
    device : str, default is Undefined, required
        Device is the name of the device.
    layout : bool, default is Undefined, required
        Layout specifies the device layout.
        If it is true, a single partition will be created for the entire device.
        When layout is false, it means don't partition or ignore existing partitioning.
    overwrite : bool, default is Undefined, optional
        Overwrite describes whether to skip checks and create the partition if a partition or filesystem is found on the device.
        Use with caution. Default is 'false'.
    tableType : str, default is Undefined, optional
        TableType specifies the tupe of partition table. The following are supported:
        'mbr': default and setups a MS-DOS partition table
        'gpt': setups a GPT partition table
    """


    device: str

    layout: bool

    overwrite?: bool

    tableType?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0:
    r"""
    File defines the input for generating write_files in cloud-init.

    Attributes
    ----------
    content : str, default is Undefined, optional
        Content is the actual content of the file.
    contentFrom : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFrom, default is Undefined, optional
        content from
    encoding : str, default is Undefined, optional
        Encoding specifies the encoding of the file contents.
    owner : str, default is Undefined, optional
        Owner specifies the ownership of the file, e.g. "root:root".
    path : str, default is Undefined, required
        Path specifies the full path on disk where to store the file.
    permissions : str, default is Undefined, optional
        Permissions specifies the permissions to assign to the file, e.g. "0640".
    """


    content?: str

    contentFrom?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFrom

    encoding?: "base64" | "gzip" | "gzip+base64"

    owner?: str

    path: str

    permissions?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFrom:
    r"""
    ContentFrom is a referenced source of content to populate the file.

    Attributes
    ----------
    secret : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFromSecret, default is Undefined, required
        secret
    """


    secret: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFromSecret


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecFilesItems0ContentFromSecret:
    r"""
    Secret represents a secret that should populate this file.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key in the secret's data map for this value.
    name : str, default is Undefined, required
        Name of the secret in the KubeadmBootstrapConfig's namespace to use.
    """


    key: str

    name: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfiguration:
    r"""
    InitConfiguration along with ClusterConfiguration are the configurations necessary for the init command

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    bootstrapTokens : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationBootstrapTokensItems0], default is Undefined, optional
        BootstrapTokens is respected at `kubeadm init` time and describes a set of Bootstrap Tokens to create.
        This information IS NOT uploaded to the kubeadm cluster configmap, partly because of its sensitive nature
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    localAPIEndpoint : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationLocalAPIEndpoint, default is Undefined, optional
        local API endpoint
    nodeRegistration : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistration, default is Undefined, optional
        node registration
    """


    apiVersion?: str

    bootstrapTokens?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationBootstrapTokensItems0]

    kind?: str

    localAPIEndpoint?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationLocalAPIEndpoint

    nodeRegistration?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistration


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationBootstrapTokensItems0:
    r"""
    BootstrapToken describes one bootstrap token, stored as a Secret in the cluster.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description sets a human-friendly message why this token exists and what it's used
        for, so other administrators can know its purpose.
    expires : str, default is Undefined, optional
        Expires specifies the timestamp when this token expires. Defaults to being set
        dynamically at runtime based on the TTL. Expires and TTL are mutually exclusive.
    groups : [str], default is Undefined, optional
        Groups specifies the extra groups that this token will authenticate as when/if
        used for authentication
    token : str, default is Undefined, required
        Token is used for establishing bidirectional trust between nodes and control-planes.
        Used for joining nodes in the cluster.
    ttl : str, default is Undefined, optional
        TTL defines the time to live for this token. Defaults to 24h.
        Expires and TTL are mutually exclusive.
    usages : [str], default is Undefined, optional
        Usages describes the ways in which this token can be used. Can by default be used
        for establishing bidirectional trust, but that can be changed here.
    """


    description?: str

    expires?: str

    groups?: [str]

    token: str

    ttl?: str

    usages?: [str]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationLocalAPIEndpoint:
    r"""
    LocalAPIEndpoint represents the endpoint of the API server instance that's deployed on this control plane node
    In HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint in the sense that ControlPlaneEndpoint
    is the global endpoint for the cluster, which then loadbalances the requests to each individual API server. This
    configuration object lets you customize what IP/DNS name and port the local API server advertises it's accessible
    on. By default, kubeadm tries to auto-detect the IP of the default interface and use that, but in case that process
    fails you may set the desired value here.

    Attributes
    ----------
    advertiseAddress : str, default is Undefined, optional
        AdvertiseAddress sets the IP address for the API server to advertise.
    bindPort : int, default is Undefined, optional
        BindPort sets the secure port for the API Server to bind to.
        Defaults to 6443.
    """


    advertiseAddress?: str

    bindPort?: int


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistration:
    r"""
    NodeRegistration holds fields that relate to registering the new control-plane node to the cluster.
    When used in the context of control plane nodes, NodeRegistration should remain consistent
    across both InitConfiguration and JoinConfiguration

    Attributes
    ----------
    criSocket : str, default is Undefined, optional
        CRISocket is used to retrieve container runtime info. This information will be annotated to the Node API object, for later re-use
    ignorePreflightErrors : [str], default is Undefined, optional
        IgnorePreflightErrors provides a slice of pre-flight errors to be ignored when the current node is registered.
    kubeletExtraArgs : {str:str}, default is Undefined, optional
        KubeletExtraArgs passes through extra arguments to the kubelet. The arguments here are passed to the kubelet command line via the environment file
        kubeadm writes at runtime for the kubelet to source. This overrides the generic base-level configuration in the kubelet-config-1.X ConfigMap
        Flags have higher priority when parsing. These values are local and specific to the node kubeadm is executing on.
    name : str, default is Undefined, optional
        Name is the `.Metadata.Name` field of the Node API object that will be created in this `kubeadm init` or `kubeadm join` operation.
        This field is also used in the CommonName field of the kubelet's client certificate to the API server.
        Defaults to the hostname of the node if not provided.
    taints : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistrationTaintsItems0], default is Undefined, optional
        Taints specifies the taints the Node API object should be registered with. If this field is unset, i.e. nil, in the `kubeadm init` process
        it will be defaulted to []v1.Taint{'node-role.kubernetes.io/master=""'}. If you don't want to taint your control-plane node, set this field to an
        empty slice, i.e. `taints: {}` in the YAML file. This field is solely used for Node registration.
    """


    criSocket?: str

    ignorePreflightErrors?: [str]

    kubeletExtraArgs?: {str:str}

    name?: str

    taints?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistrationTaintsItems0]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecInitConfigurationNodeRegistrationTaintsItems0:
    r"""
    The node this Taint is attached to has the "effect" on
    any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods
        that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added.
        It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfiguration:
    r"""
    JoinConfiguration is the kubeadm configuration for the join command

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object.
        Servers should convert recognized schemas to the latest internal value, and
        may reject unrecognized values.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    caCertPath : str, default is Undefined, optional
        CACertPath is the path to the SSL certificate authority used to
        secure comunications between node and control-plane.
        Defaults to "/etc/kubernetes/pki/ca.crt".
        TODO: revisit when there is defaulting from k/k
    controlPlane : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlane, default is Undefined, optional
        control plane
    discovery : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscovery, default is Undefined, optional
        discovery
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents.
        Servers may infer this from the endpoint the client submits requests to.
        Cannot be updated.
        In CamelCase.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    nodeRegistration : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistration, default is Undefined, optional
        node registration
    """


    apiVersion?: str

    caCertPath?: str

    controlPlane?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlane

    discovery?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscovery

    kind?: str

    nodeRegistration?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistration


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlane:
    r"""
    ControlPlane defines the additional control plane instance to be deployed on the joining node.
    If nil, no additional control plane instance will be deployed.

    Attributes
    ----------
    localAPIEndpoint : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlaneLocalAPIEndpoint, default is Undefined, optional
        local API endpoint
    """


    localAPIEndpoint?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlaneLocalAPIEndpoint


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationControlPlaneLocalAPIEndpoint:
    r"""
    LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.

    Attributes
    ----------
    advertiseAddress : str, default is Undefined, optional
        AdvertiseAddress sets the IP address for the API server to advertise.
    bindPort : int, default is Undefined, optional
        BindPort sets the secure port for the API Server to bind to.
        Defaults to 6443.
    """


    advertiseAddress?: str

    bindPort?: int


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscovery:
    r"""
    Discovery specifies the options for the kubelet to use during the TLS Bootstrap process
    TODO: revisit when there is defaulting from k/k

    Attributes
    ----------
    bootstrapToken : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken, default is Undefined, optional
        bootstrap token
    file : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryFile, default is Undefined, optional
        file
    timeout : str, default is Undefined, optional
        Timeout modifies the discovery timeout
    tlsBootstrapToken : str, default is Undefined, optional
        TLSBootstrapToken is a token used for TLS bootstrapping.
        If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token, but can be overridden.
        If .File is set, this field **must be set** in case the KubeConfigFile does not contain any other authentication information
    """


    bootstrapToken?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken

    file?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryFile

    timeout?: str

    tlsBootstrapToken?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryBootstrapToken:
    r"""
    BootstrapToken is used to set the options for bootstrap token based discovery
    BootstrapToken and File are mutually exclusive

    Attributes
    ----------
    apiServerEndpoint : str, default is Undefined, optional
        APIServerEndpoint is an IP or domain name to the API server from which info will be fetched.
    caCertHashes : [str], default is Undefined, optional
        CACertHashes specifies a set of public key pins to verify
        when token-based discovery is used. The root CA found during discovery
        must match one of these values. Specifying an empty set disables root CA
        pinning, which can be unsafe. Each hash is specified as "<type>:<value>",
        where the only currently supported type is "sha256". This is a hex-encoded
        SHA-256 hash of the Subject Public Key Info (SPKI) object in DER-encoded
        ASN.1. These hashes can be calculated using, for example, OpenSSL:
        openssl x509 -pubkey -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null | openssl dgst -sha256 -hex
    token : str, default is Undefined, required
        Token is a token used to validate cluster information
        fetched from the control-plane.
    unsafeSkipCAVerification : bool, default is Undefined, optional
        UnsafeSkipCAVerification allows token-based discovery
        without CA verification via CACertHashes. This can weaken
        the security of kubeadm since other nodes can impersonate the control-plane.
    """


    apiServerEndpoint?: str

    caCertHashes?: [str]

    token: str

    unsafeSkipCAVerification?: bool


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationDiscoveryFile:
    r"""
    File is used to specify a file or URL to a kubeconfig file from which to load cluster information
    BootstrapToken and File are mutually exclusive

    Attributes
    ----------
    kubeConfigPath : str, default is Undefined, required
        KubeConfigPath is used to specify the actual file path or URL to the kubeconfig file from which to load cluster information
    """


    kubeConfigPath: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistration:
    r"""
    NodeRegistration holds fields that relate to registering the new control-plane node to the cluster.
    When used in the context of control plane nodes, NodeRegistration should remain consistent
    across both InitConfiguration and JoinConfiguration

    Attributes
    ----------
    criSocket : str, default is Undefined, optional
        CRISocket is used to retrieve container runtime info. This information will be annotated to the Node API object, for later re-use
    ignorePreflightErrors : [str], default is Undefined, optional
        IgnorePreflightErrors provides a slice of pre-flight errors to be ignored when the current node is registered.
    kubeletExtraArgs : {str:str}, default is Undefined, optional
        KubeletExtraArgs passes through extra arguments to the kubelet. The arguments here are passed to the kubelet command line via the environment file
        kubeadm writes at runtime for the kubelet to source. This overrides the generic base-level configuration in the kubelet-config-1.X ConfigMap
        Flags have higher priority when parsing. These values are local and specific to the node kubeadm is executing on.
    name : str, default is Undefined, optional
        Name is the `.Metadata.Name` field of the Node API object that will be created in this `kubeadm init` or `kubeadm join` operation.
        This field is also used in the CommonName field of the kubelet's client certificate to the API server.
        Defaults to the hostname of the node if not provided.
    taints : [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistrationTaintsItems0], default is Undefined, optional
        Taints specifies the taints the Node API object should be registered with. If this field is unset, i.e. nil, in the `kubeadm init` process
        it will be defaulted to []v1.Taint{'node-role.kubernetes.io/master=""'}. If you don't want to taint your control-plane node, set this field to an
        empty slice, i.e. `taints: {}` in the YAML file. This field is solely used for Node registration.
    """


    criSocket?: str

    ignorePreflightErrors?: [str]

    kubeletExtraArgs?: {str:str}

    name?: str

    taints?: [ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistrationTaintsItems0]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecJoinConfigurationNodeRegistrationTaintsItems0:
    r"""
    The node this Taint is attached to has the "effect" on
    any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods
        that do not tolerate the taint.
        Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added.
        It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecNtp:
    r"""
    NTP specifies NTP configuration

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled specifies whether NTP should be enabled
    servers : [str], default is Undefined, optional
        Servers specifies which NTP servers to use
    """


    enabled?: bool

    servers?: [str]


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecKubeadmConfigSpecUsersItems0:
    r"""
    User defines the input for a generated user in cloud-init.

    Attributes
    ----------
    gecos : str, default is Undefined, optional
        Gecos specifies the gecos to use for the user
    groups : str, default is Undefined, optional
        Groups specifies the additional groups for the user
    homeDir : str, default is Undefined, optional
        HomeDir specifies the home directory to use for the user
    inactive : bool, default is Undefined, optional
        Inactive specifies whether to mark the user as inactive
    lockPassword : bool, default is Undefined, optional
        LockPassword specifies if password login should be disabled
    name : str, default is Undefined, required
        Name specifies the user name
    passwd : str, default is Undefined, optional
        Passwd specifies a hashed password for the user
    primaryGroup : str, default is Undefined, optional
        PrimaryGroup specifies the primary group for the user
    shell : str, default is Undefined, optional
        Shell specifies the user's shell
    sshAuthorizedKeys : [str], default is Undefined, optional
        SSHAuthorizedKeys specifies a list of ssh authorized keys for the user
    sudo : str, default is Undefined, optional
        Sudo specifies a sudo role for the user
    """


    gecos?: str

    groups?: str

    homeDir?: str

    inactive?: bool

    lockPassword?: bool

    name: str

    passwd?: str

    primaryGroup?: str

    shell?: str

    sshAuthorizedKeys?: [str]

    sudo?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplate:
    r"""
    MachineTemplate contains information about how machines
    should be shaped when creating or updating a control plane.

    Attributes
    ----------
    infrastructureRef : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateInfrastructureRef, default is Undefined, required
        infrastructure ref
    metadata : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateMetadata, default is Undefined, optional
        metadata
    nodeDrainTimeout : str, default is Undefined, optional
        NodeDrainTimeout is the total amount of time that the controller will spend on draining a controlplane node
        The default value is 0, meaning that the node can be drained without any time limitations.
        NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
    """


    infrastructureRef: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateInfrastructureRef

    metadata?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateMetadata

    nodeDrainTimeout?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateInfrastructureRef:
    r"""
    InfrastructureRef is a required reference to a custom resource
    offered by an infrastructure provider.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
        TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecMachineTemplateMetadata:
    r"""
    Standard object's metadata.
    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: http://kubernetes.io/docs/user-guide/labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategy:
    r"""
    The RolloutStrategy to use to replace control plane machines with
    new ones.

    Attributes
    ----------
    rollingUpdate : ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategyRollingUpdate, default is Undefined, optional
        rolling update
    $type : str, default is Undefined, optional
        Type of rollout. Currently the only supported strategy is
        "RollingUpdate".
        Default is RollingUpdate.
    """


    rollingUpdate?: ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategyRollingUpdate

    $type?: str


schema ControlplaneClusterxK8sIoV1alpha4KubeadmControlPlaneTemplateSpecTemplateSpecRolloutStrategyRollingUpdate:
    r"""
    Rolling update config params. Present only if
    RolloutStrategyType = RollingUpdate.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of control planes that can be scheduled above or under the
        desired number of control planes.
        Value can be an absolute number 1 or 0.
        Defaults to 1.
        Example: when this is set to 1, the control plane can be scaled
        up immediately when the rolling update starts.
    """


    maxSurge?: int | str


