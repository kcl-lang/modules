"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TableReplica:
    r"""
    TableReplica is the Schema for the TableReplicas API. Provides a DynamoDB table replica resource

    Attributes
    ----------
    apiVersion : str, default is "dynamodb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TableReplica", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DynamodbAwsUpboundIoV1beta1TableReplicaSpec, default is Undefined, required
        spec
    status : DynamodbAwsUpboundIoV1beta1TableReplicaStatus, default is Undefined, optional
        status
    """


    apiVersion: "dynamodb.aws.upbound.io/v1beta1" = "dynamodb.aws.upbound.io/v1beta1"

    kind: "TableReplica" = "TableReplica"

    metadata?: v1.ObjectMeta

    spec: DynamodbAwsUpboundIoV1beta1TableReplicaSpec

    status?: DynamodbAwsUpboundIoV1beta1TableReplicaStatus


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpec:
    r"""
    TableReplicaSpec defines the desired state of TableReplica

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProvider, default is Undefined, required
        for provider
    initProvider : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProvider

    initProvider?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRef

    publishConnectionDetailsTo?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecWriteConnectionSecretToRef


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProvider:
    r"""
    dynamodb aws upbound io v1beta1 table replica spec for provider

    Attributes
    ----------
    deletionProtectionEnabled : bool, default is Undefined, optional
        Whether deletion protection is enabled (true) or disabled (false) on the table replica.
    globalTableArn : str, default is Undefined, optional
        ARN of the main or global table which this resource will replicate.
    globalTableArnRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRef, default is Undefined, optional
        global table arn ref
    globalTableArnSelector : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelector, default is Undefined, optional
        global table arn selector
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    kmsKeyArnRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the table replica. Default is false.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tableClassOverride : str, default is Undefined, optional
        Storage class of the table replica. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS. If not used, the table replica will use the same class as the global table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    deletionProtectionEnabled?: bool

    globalTableArn?: str

    globalTableArnRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRef

    globalTableArnSelector?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelector

    kmsKeyArn?: str

    kmsKeyArnRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelector

    pointInTimeRecovery?: bool

    region: str

    tableClassOverride?: str

    tags?: {str:str}


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRef:
    r"""
    Reference to a Table in dynamodb to populate globalTableArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelector:
    r"""
    Selector for a Table in dynamodb to populate globalTableArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelectorPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderGlobalTableArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelectorPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deletionProtectionEnabled : bool, default is Undefined, optional
        Whether deletion protection is enabled (true) or disabled (false) on the table replica.
    globalTableArn : str, default is Undefined, optional
        ARN of the main or global table which this resource will replicate.
    globalTableArnRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRef, default is Undefined, optional
        global table arn ref
    globalTableArnSelector : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelector, default is Undefined, optional
        global table arn selector
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    kmsKeyArnRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the table replica. Default is false.
    tableClassOverride : str, default is Undefined, optional
        Storage class of the table replica. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS. If not used, the table replica will use the same class as the global table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    deletionProtectionEnabled?: bool

    globalTableArn?: str

    globalTableArnRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRef

    globalTableArnSelector?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelector

    kmsKeyArn?: str

    kmsKeyArnRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelector

    pointInTimeRecovery?: bool

    tableClassOverride?: str

    tags?: {str:str}


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRef:
    r"""
    Reference to a Table in dynamodb to populate globalTableArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelector:
    r"""
    Selector for a Table in dynamodb to populate globalTableArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelectorPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderGlobalTableArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelectorPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRef

    metadata?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToMetadata

    name: str


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DynamodbAwsUpboundIoV1beta1TableReplicaSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DynamodbAwsUpboundIoV1beta1TableReplicaStatus:
    r"""
    TableReplicaStatus defines the observed state of TableReplica.

    Attributes
    ----------
    atProvider : DynamodbAwsUpboundIoV1beta1TableReplicaStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DynamodbAwsUpboundIoV1beta1TableReplicaStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DynamodbAwsUpboundIoV1beta1TableReplicaStatusAtProvider

    conditions?: [DynamodbAwsUpboundIoV1beta1TableReplicaStatusConditionsItems0]

    observedGeneration?: int


schema DynamodbAwsUpboundIoV1beta1TableReplicaStatusAtProvider:
    r"""
    dynamodb aws upbound io v1beta1 table replica status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the table replica.
    deletionProtectionEnabled : bool, default is Undefined, optional
        Whether deletion protection is enabled (true) or disabled (false) on the table replica.
    globalTableArn : str, default is Undefined, optional
        ARN of the main or global table which this resource will replicate.
    id : str, default is Undefined, optional
        Name of the table and region of the main global table joined with a semicolon (e.g., TableName:us-east-1).
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the table replica. Default is false.
    tableClassOverride : str, default is Undefined, optional
        Storage class of the table replica. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS. If not used, the table replica will use the same class as the global table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    deletionProtectionEnabled?: bool

    globalTableArn?: str

    id?: str

    kmsKeyArn?: str

    pointInTimeRecovery?: bool

    tableClassOverride?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema DynamodbAwsUpboundIoV1beta1TableReplicaStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


