"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BudgetAction:
    r"""
    BudgetAction is the Schema for the BudgetActions API. Provides a budget action resource.

    Attributes
    ----------
    apiVersion : str, default is "budgets.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BudgetAction", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BudgetsAwsUpboundIoV1beta2BudgetActionSpec, default is Undefined, required
        spec
    status : BudgetsAwsUpboundIoV1beta2BudgetActionStatus, default is Undefined, optional
        status
    """


    apiVersion: "budgets.aws.upbound.io/v1beta2" = "budgets.aws.upbound.io/v1beta2"

    kind: "BudgetAction" = "BudgetAction"

    metadata?: v1.ObjectMeta

    spec: BudgetsAwsUpboundIoV1beta2BudgetActionSpec

    status?: BudgetsAwsUpboundIoV1beta2BudgetActionStatus


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpec:
    r"""
    BudgetActionSpec defines the desired state of BudgetAction

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProvider, default is Undefined, required
        for provider
    initProvider : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProvider

    initProvider?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRef

    publishConnectionDetailsTo?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecWriteConnectionSecretToRef


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProvider:
    r"""
    budgets aws upbound io v1beta2 budget action spec for provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    actionThreshold : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderActionThreshold, default is Undefined, optional
        action threshold
    actionType : str, default is Undefined, optional
        The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are APPLY_IAM_POLICY, APPLY_SCP_POLICY, and RUN_SSM_DOCUMENTS.
    approvalModel : str, default is Undefined, optional
        This specifies if the action needs manual or automatic approval. Valid values are AUTOMATIC and MANUAL.
    budgetName : str, default is Undefined, optional
        The name of a budget.
    budgetNameRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRef, default is Undefined, optional
        budget name ref
    budgetNameSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelector, default is Undefined, optional
        budget name selector
    definition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinition, default is Undefined, optional
        definition
    executionRoleArn : str, default is Undefined, optional
        The role passed for action execution and reversion. Roles and actions must be in the same account.
    executionRoleArnRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    notificationType : str, default is Undefined, optional
        The type of a notification. Valid values are ACTUAL or FORECASTED.
    region : str, default is Undefined, required
        The Region to run the SSM document.
        Region is the region you'd like your resource to be created in.
    subscriber : [BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderSubscriberItems0], default is Undefined, optional
        A list of subscribers. See Subscriber.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accountId?: str

    actionThreshold?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderActionThreshold

    actionType?: str

    approvalModel?: str

    budgetName?: str

    budgetNameRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRef

    budgetNameSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelector

    definition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinition

    executionRoleArn?: str

    executionRoleArnRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRef

    executionRoleArnSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelector

    notificationType?: str

    region: str

    subscriber?: [BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderSubscriberItems0]

    tags?: {str:str}


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderActionThreshold:
    r"""
    The trigger threshold of the action. See Action Threshold.

    Attributes
    ----------
    actionThresholdType : str, default is Undefined, optional
        The type of threshold for a notification. Valid values are PERCENTAGE or ABSOLUTE_VALUE.
    actionThresholdValue : float, default is Undefined, optional
        The threshold of a notification.
    """


    actionThresholdType?: str

    actionThresholdValue?: float


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRef:
    r"""
    Reference to a Budget in budgets to populate budgetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelector:
    r"""
    Selector for a Budget in budgets to populate budgetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderBudgetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinition:
    r"""
    Specifies all of the type-specific parameters. See Definition.

    Attributes
    ----------
    iamActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinition, default is Undefined, optional
        iam action definition
    scpActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionScpActionDefinition, default is Undefined, optional
        scp action definition
    ssmActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionSsmActionDefinition, default is Undefined, optional
        ssm action definition
    """


    iamActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinition

    scpActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionScpActionDefinition

    ssmActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionSsmActionDefinition


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinition:
    r"""
    The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of groups to be attached. There must be at least one group.
    policyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the policy to be attached.
    policyArnRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRef, default is Undefined, optional
        policy arn ref
    policyArnSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelector, default is Undefined, optional
        policy arn selector
    roles : [str], default is Undefined, optional
        A list of roles to be attached. There must be at least one role.
    rolesRefs : [BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0], default is Undefined, optional
        References to Role in iam to populate roles.
    rolesSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelector, default is Undefined, optional
        roles selector
    users : [str], default is Undefined, optional
        A list of users to be attached. There must be at least one user.
    """


    groups?: [str]

    policyArn?: str

    policyArnRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRef

    policyArnSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelector

    roles?: [str]

    rolesRefs?: [BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0]

    rolesSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelector

    users?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRef:
    r"""
    Reference to a Policy in iam to populate policyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelector:
    r"""
    Selector for a Policy in iam to populate policyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0Policy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelector:
    r"""
    Selector for a list of Role in iam to populate roles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionIamActionDefinitionRolesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionScpActionDefinition:
    r"""
    The service control policies (SCPs) action definition details. See SCP Action Definition.

    Attributes
    ----------
    policyId : str, default is Undefined, optional
        The policy ID attached.
    targetIds : [str], default is Undefined, optional
        A list of target IDs.
    """


    policyId?: str

    targetIds?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderDefinitionSsmActionDefinition:
    r"""
    The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.

    Attributes
    ----------
    actionSubType : str, default is Undefined, optional
        The action subType. Valid values are STOP_EC2_INSTANCES or STOP_RDS_INSTANCES.
    instanceIds : [str], default is Undefined, optional
        The EC2 and RDS instance IDs.
    region : str, default is Undefined, required
        The Region to run the SSM document.
    """


    actionSubType?: str

    instanceIds?: [str]

    region: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecForProviderSubscriberItems0:
    r"""
    budgets aws upbound io v1beta2 budget action spec for provider subscriber items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The address that AWS sends budget notifications to, either an SNS topic or an email.
    subscriptionType : str, default is Undefined, optional
        The type of notification that AWS sends to a subscriber. Valid values are SNS or EMAIL.
    """


    address?: str

    subscriptionType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    actionThreshold : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderActionThreshold, default is Undefined, optional
        action threshold
    actionType : str, default is Undefined, optional
        The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are APPLY_IAM_POLICY, APPLY_SCP_POLICY, and RUN_SSM_DOCUMENTS.
    approvalModel : str, default is Undefined, optional
        This specifies if the action needs manual or automatic approval. Valid values are AUTOMATIC and MANUAL.
    budgetName : str, default is Undefined, optional
        The name of a budget.
    budgetNameRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRef, default is Undefined, optional
        budget name ref
    budgetNameSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelector, default is Undefined, optional
        budget name selector
    definition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinition, default is Undefined, optional
        definition
    executionRoleArn : str, default is Undefined, optional
        The role passed for action execution and reversion. Roles and actions must be in the same account.
    executionRoleArnRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    notificationType : str, default is Undefined, optional
        The type of a notification. Valid values are ACTUAL or FORECASTED.
    subscriber : [BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderSubscriberItems0], default is Undefined, optional
        A list of subscribers. See Subscriber.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accountId?: str

    actionThreshold?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderActionThreshold

    actionType?: str

    approvalModel?: str

    budgetName?: str

    budgetNameRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRef

    budgetNameSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelector

    definition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinition

    executionRoleArn?: str

    executionRoleArnRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRef

    executionRoleArnSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelector

    notificationType?: str

    subscriber?: [BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderSubscriberItems0]

    tags?: {str:str}


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderActionThreshold:
    r"""
    The trigger threshold of the action. See Action Threshold.

    Attributes
    ----------
    actionThresholdType : str, default is Undefined, optional
        The type of threshold for a notification. Valid values are PERCENTAGE or ABSOLUTE_VALUE.
    actionThresholdValue : float, default is Undefined, optional
        The threshold of a notification.
    """


    actionThresholdType?: str

    actionThresholdValue?: float


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRef:
    r"""
    Reference to a Budget in budgets to populate budgetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelector:
    r"""
    Selector for a Budget in budgets to populate budgetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderBudgetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinition:
    r"""
    Specifies all of the type-specific parameters. See Definition.

    Attributes
    ----------
    iamActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinition, default is Undefined, optional
        iam action definition
    scpActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionScpActionDefinition, default is Undefined, optional
        scp action definition
    ssmActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionSsmActionDefinition, default is Undefined, optional
        ssm action definition
    """


    iamActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinition

    scpActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionScpActionDefinition

    ssmActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionSsmActionDefinition


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinition:
    r"""
    The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of groups to be attached. There must be at least one group.
    policyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the policy to be attached.
    policyArnRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRef, default is Undefined, optional
        policy arn ref
    policyArnSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelector, default is Undefined, optional
        policy arn selector
    roles : [str], default is Undefined, optional
        A list of roles to be attached. There must be at least one role.
    rolesRefs : [BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0], default is Undefined, optional
        References to Role in iam to populate roles.
    rolesSelector : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelector, default is Undefined, optional
        roles selector
    users : [str], default is Undefined, optional
        A list of users to be attached. There must be at least one user.
    """


    groups?: [str]

    policyArn?: str

    policyArnRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRef

    policyArnSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelector

    roles?: [str]

    rolesRefs?: [BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0]

    rolesSelector?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelector

    users?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRef:
    r"""
    Reference to a Policy in iam to populate policyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelector:
    r"""
    Selector for a Policy in iam to populate policyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0Policy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelector:
    r"""
    Selector for a list of Role in iam to populate roles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionIamActionDefinitionRolesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionScpActionDefinition:
    r"""
    The service control policies (SCPs) action definition details. See SCP Action Definition.

    Attributes
    ----------
    policyId : str, default is Undefined, optional
        The policy ID attached.
    targetIds : [str], default is Undefined, optional
        A list of target IDs.
    """


    policyId?: str

    targetIds?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderDefinitionSsmActionDefinition:
    r"""
    The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.

    Attributes
    ----------
    actionSubType : str, default is Undefined, optional
        The action subType. Valid values are STOP_EC2_INSTANCES or STOP_RDS_INSTANCES.
    instanceIds : [str], default is Undefined, optional
        The EC2 and RDS instance IDs.
    """


    actionSubType?: str

    instanceIds?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelectorPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecInitProviderSubscriberItems0:
    r"""
    budgets aws upbound io v1beta2 budget action spec init provider subscriber items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The address that AWS sends budget notifications to, either an SNS topic or an email.
    subscriptionType : str, default is Undefined, optional
        The type of notification that AWS sends to a subscriber. Valid values are SNS or EMAIL.
    """


    address?: str

    subscriptionType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRef

    metadata?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToMetadata

    name: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatus:
    r"""
    BudgetActionStatus defines the observed state of BudgetAction.

    Attributes
    ----------
    atProvider : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BudgetsAwsUpboundIoV1beta2BudgetActionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProvider

    conditions?: [BudgetsAwsUpboundIoV1beta2BudgetActionStatusConditionsItems0]

    observedGeneration?: int


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProvider:
    r"""
    budgets aws upbound io v1beta2 budget action status at provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    actionId : str, default is Undefined, optional
        The id of the budget action.
    actionThreshold : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderActionThreshold, default is Undefined, optional
        action threshold
    actionType : str, default is Undefined, optional
        The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are APPLY_IAM_POLICY, APPLY_SCP_POLICY, and RUN_SSM_DOCUMENTS.
    approvalModel : str, default is Undefined, optional
        This specifies if the action needs manual or automatic approval. Valid values are AUTOMATIC and MANUAL.
    arn : str, default is Undefined, optional
        The ARN of the budget action.
    budgetName : str, default is Undefined, optional
        The name of a budget.
    definition : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinition, default is Undefined, optional
        definition
    executionRoleArn : str, default is Undefined, optional
        The role passed for action execution and reversion. Roles and actions must be in the same account.
    id : str, default is Undefined, optional
        ID of resource.
    notificationType : str, default is Undefined, optional
        The type of a notification. Valid values are ACTUAL or FORECASTED.
    status : str, default is Undefined, optional
        The status of the budget action.
    subscriber : [BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderSubscriberItems0], default is Undefined, optional
        A list of subscribers. See Subscriber.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    accountId?: str

    actionId?: str

    actionThreshold?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderActionThreshold

    actionType?: str

    approvalModel?: str

    arn?: str

    budgetName?: str

    definition?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinition

    executionRoleArn?: str

    id?: str

    notificationType?: str

    status?: str

    subscriber?: [BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderSubscriberItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderActionThreshold:
    r"""
    The trigger threshold of the action. See Action Threshold.

    Attributes
    ----------
    actionThresholdType : str, default is Undefined, optional
        The type of threshold for a notification. Valid values are PERCENTAGE or ABSOLUTE_VALUE.
    actionThresholdValue : float, default is Undefined, optional
        The threshold of a notification.
    """


    actionThresholdType?: str

    actionThresholdValue?: float


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinition:
    r"""
    Specifies all of the type-specific parameters. See Definition.

    Attributes
    ----------
    iamActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionIamActionDefinition, default is Undefined, optional
        iam action definition
    scpActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionScpActionDefinition, default is Undefined, optional
        scp action definition
    ssmActionDefinition : BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionSsmActionDefinition, default is Undefined, optional
        ssm action definition
    """


    iamActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionIamActionDefinition

    scpActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionScpActionDefinition

    ssmActionDefinition?: BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionSsmActionDefinition


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionIamActionDefinition:
    r"""
    The AWS Identity and Access Management (IAM) action definition details. See IAM Action Definition.

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of groups to be attached. There must be at least one group.
    policyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the policy to be attached.
    roles : [str], default is Undefined, optional
        A list of roles to be attached. There must be at least one role.
    users : [str], default is Undefined, optional
        A list of users to be attached. There must be at least one user.
    """


    groups?: [str]

    policyArn?: str

    roles?: [str]

    users?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionScpActionDefinition:
    r"""
    The service control policies (SCPs) action definition details. See SCP Action Definition.

    Attributes
    ----------
    policyId : str, default is Undefined, optional
        The policy ID attached.
    targetIds : [str], default is Undefined, optional
        A list of target IDs.
    """


    policyId?: str

    targetIds?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderDefinitionSsmActionDefinition:
    r"""
    The AWS Systems Manager (SSM) action definition details. See SSM Action Definition.

    Attributes
    ----------
    actionSubType : str, default is Undefined, optional
        The action subType. Valid values are STOP_EC2_INSTANCES or STOP_RDS_INSTANCES.
    instanceIds : [str], default is Undefined, optional
        The EC2 and RDS instance IDs.
    region : str, default is Undefined, optional
        The Region to run the SSM document.
    """


    actionSubType?: str

    instanceIds?: [str]

    region?: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusAtProviderSubscriberItems0:
    r"""
    budgets aws upbound io v1beta2 budget action status at provider subscriber items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The address that AWS sends budget notifications to, either an SNS topic or an email.
    subscriptionType : str, default is Undefined, optional
        The type of notification that AWS sends to a subscriber. Valid values are SNS or EMAIL.
    """


    address?: str

    subscriptionType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetActionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


