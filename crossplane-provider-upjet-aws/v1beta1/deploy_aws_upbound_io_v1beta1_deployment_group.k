"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DeploymentGroup:
    r"""
    DeploymentGroup is the Schema for the DeploymentGroups API. Provides a CodeDeploy deployment group.

    Attributes
    ----------
    apiVersion : str, default is "deploy.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DeploymentGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DeployAwsUpboundIoV1beta1DeploymentGroupSpec, default is Undefined, required
        spec
    status : DeployAwsUpboundIoV1beta1DeploymentGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "deploy.aws.upbound.io/v1beta1" = "deploy.aws.upbound.io/v1beta1"

    kind: "DeploymentGroup" = "DeploymentGroup"

    metadata?: v1.ObjectMeta

    spec: DeployAwsUpboundIoV1beta1DeploymentGroupSpec

    status?: DeployAwsUpboundIoV1beta1DeploymentGroupStatus


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpec:
    r"""
    DeploymentGroupSpec defines the desired state of DeploymentGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProvider

    initProvider?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecWriteConnectionSecretToRef


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProvider:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider

    Attributes
    ----------
    alarmConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAlarmConfigurationItems0], default is Undefined, optional
        Configuration block of alarms associated with the deployment group (documented below).
    appName : str, default is Undefined, optional
        The name of the application.
    appNameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRef, default is Undefined, optional
        app name ref
    appNameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelector, default is Undefined, optional
        app name selector
    autoRollbackConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAutoRollbackConfigurationItems0], default is Undefined, optional
        Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
    autoscalingGroups : [str], default is Undefined, optional
        Autoscaling groups associated with the deployment group.
    blueGreenDeploymentConfig : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0], default is Undefined, optional
        Configuration block of the blue/green deployment options for a deployment group (documented below).
    deploymentConfigName : str, default is Undefined, optional
        The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
    deploymentStyle : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderDeploymentStyleItems0], default is Undefined, optional
        Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    ec2TagSet : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0], default is Undefined, optional
        Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
    ecsService : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0], default is Undefined, optional
        Configuration block(s) of the ECS services for a deployment group (documented below).
    loadBalancerInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0], default is Undefined, optional
        Single configuration block of the load balancer to use in a blue/green deployment (documented below).
    onPremisesInstanceTagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderOnPremisesInstanceTagFilterItems0], default is Undefined, optional
        On premise tag filters associated with the group. See the AWS docs for details.
    outdatedInstancesStrategy : str, default is Undefined, optional
        Configuration block of Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision. Valid values are UPDATE and IGNORE. Defaults to UPDATE.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceRoleArn : str, default is Undefined, optional
        The service role ARN that allows deployments.
    serviceRoleArnRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    terminationHookEnabled : bool, default is Undefined, optional
        Indicates whether the deployment group was configured to have CodeDeploy install a termination hook into an Auto Scaling group.
    triggerConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0], default is Undefined, optional
        Configuration block(s) of the triggers for the deployment group (documented below).
    """


    alarmConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAlarmConfigurationItems0]

    appName?: str

    appNameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRef

    appNameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelector

    autoRollbackConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAutoRollbackConfigurationItems0]

    autoscalingGroups?: [str]

    blueGreenDeploymentConfig?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0]

    deploymentConfigName?: str

    deploymentStyle?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderDeploymentStyleItems0]

    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagFilterItems0]

    ec2TagSet?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0]

    ecsService?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0]

    loadBalancerInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0]

    onPremisesInstanceTagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderOnPremisesInstanceTagFilterItems0]

    outdatedInstancesStrategy?: str

    region: str

    serviceRoleArn?: str

    serviceRoleArnRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRef

    serviceRoleArnSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelector

    tags?: {str:str}

    terminationHookEnabled?: bool

    triggerConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAlarmConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider alarm configuration items0

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    ignorePollAlarmFailure : bool, default is Undefined, optional
        Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is false.
    """


    alarms?: [str]

    enabled?: bool

    ignorePollAlarmFailure?: bool


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRef:
    r"""
    Reference to a App in deploy to populate appName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelector:
    r"""
    Selector for a App in deploy to populate appName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAppNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderAutoRollbackConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider auto rollback configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    events : [str], default is Undefined, optional
        The event type or types that trigger a rollback. Supported types are DEPLOYMENT_FAILURE, DEPLOYMENT_STOP_ON_ALARM and DEPLOYMENT_STOP_ON_REQUEST.
    """


    enabled?: bool

    events?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider blue green deployment config items0

    Attributes
    ----------
    deploymentReadyOption : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0], default is Undefined, optional
        Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
    greenFleetProvisioningOption : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0], default is Undefined, optional
        Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
    terminateBlueInstancesOnDeploymentSuccess : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0], default is Undefined, optional
        Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
    """


    deploymentReadyOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0]

    greenFleetProvisioningOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0]

    terminateBlueInstancesOnDeploymentSuccess?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider blue green deployment config items0 deployment ready option items0

    Attributes
    ----------
    actionOnTimeout : str, default is Undefined, optional
        When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
    waitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for action_on_timeout.
    """


    actionOnTimeout?: str

    waitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider blue green deployment config items0 green fleet provisioning option items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    """


    action?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider blue green deployment config items0 terminate blue instances on deployment success items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    terminationWaitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
    """


    action?: str

    terminationWaitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderDeploymentStyleItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider deployment style items0

    Attributes
    ----------
    deploymentOption : str, default is Undefined, optional
        Indicates whether to route deployment traffic behind a load balancer. Valid Values are WITH_TRAFFIC_CONTROL or WITHOUT_TRAFFIC_CONTROL. Default is WITHOUT_TRAFFIC_CONTROL.
    deploymentType : str, default is Undefined, optional
        Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are IN_PLACE or BLUE_GREEN. Default is IN_PLACE.
    """


    deploymentOption?: str

    deploymentType?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider ec2 tag set items0

    Attributes
    ----------
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0Ec2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    """


    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0Ec2TagFilterItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEc2TagSetItems0Ec2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider ec2 tag set items0 ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider ecs service items0

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        The name of the ECS cluster.
    clusterNameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelector, default is Undefined, optional
        cluster name selector
    serviceName : str, default is Undefined, optional
        The name of the ECS service.
    serviceNameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRef, default is Undefined, optional
        service name ref
    serviceNameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelector, default is Undefined, optional
        service name selector
    """


    clusterName?: str

    clusterNameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRef

    clusterNameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelector

    serviceName?: str

    serviceNameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRef

    serviceNameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRef:
    r"""
    Reference to a Cluster in ecs to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelector:
    r"""
    Selector for a Cluster in ecs to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRef:
    r"""
    Reference to a Service in ecs to populate serviceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelector:
    r"""
    Selector for a Service in ecs to populate serviceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderEcsServiceItems0ServiceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0

    Attributes
    ----------
    elbInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0], default is Undefined, optional
        The Classic Elastic Load Balancer to use in a deployment. Conflicts with target_group_info and target_group_pair_info.
    targetGroupInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with elb_info and target_group_pair_info.
    targetGroupPairInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with elb_info and target_group_info.
    """


    elbInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0]

    targetGroupInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupInfoItems0]

    targetGroupPairInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 elb info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    nameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRef

    nameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRef:
    r"""
    Reference to a ELB in elb to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector:
    r"""
    Selector for a ELB in elb to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 target group info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    """


    name?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 target group pair info items0

    Attributes
    ----------
    prodTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0], default is Undefined, optional
        Configuration block for the production traffic route (documented below).
    targetGroup : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0], default is Undefined, optional
        Configuration blocks for a target group within a target group pair (documented below).
    testTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0], default is Undefined, optional
        Configuration block for the test traffic route (documented below).
    """


    prodTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0]

    targetGroup?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0]

    testTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 target group pair info items0 prod traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    listenerArnsRefs : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0], default is Undefined, optional
        References to LBListener in elbv2 to populate listenerArns.
    listenerArnsSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector, default is Undefined, optional
        listener arns selector
    """


    listenerArns?: [str]

    listenerArnsRefs?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0]

    listenerArnsSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector:
    r"""
    Selector for a list of LBListener in elbv2 to populate listenerArns.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 target group pair info items0 target group items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    nameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef

    nameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider load balancer info items0 target group pair info items0 test traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    """


    listenerArns?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderOnPremisesInstanceTagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider on premises instance tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec for provider trigger configuration items0

    Attributes
    ----------
    triggerEvents : [str], default is Undefined, optional
        The event type or types for which notifications are triggered. Some values that are supported: DeploymentStart, DeploymentSuccess, DeploymentFailure, DeploymentStop, DeploymentRollback, InstanceStart, InstanceSuccess, InstanceFailure.  See the CodeDeploy documentation for all possible values.
    triggerName : str, default is Undefined, optional
        The name of the notification trigger.
    triggerTargetArn : str, default is Undefined, optional
        The ARN of the SNS topic through which notifications are sent.
    triggerTargetArnRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRef, default is Undefined, optional
        trigger target arn ref
    triggerTargetArnSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelector, default is Undefined, optional
        trigger target arn selector
    """


    triggerEvents?: [str]

    triggerName?: str

    triggerTargetArn?: str

    triggerTargetArnRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRef

    triggerTargetArnSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRef:
    r"""
    Reference to a Topic in sns to populate triggerTargetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelector:
    r"""
    Selector for a Topic in sns to populate triggerTargetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecForProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alarmConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAlarmConfigurationItems0], default is Undefined, optional
        Configuration block of alarms associated with the deployment group (documented below).
    autoRollbackConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAutoRollbackConfigurationItems0], default is Undefined, optional
        Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
    autoscalingGroups : [str], default is Undefined, optional
        Autoscaling groups associated with the deployment group.
    blueGreenDeploymentConfig : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0], default is Undefined, optional
        Configuration block of the blue/green deployment options for a deployment group (documented below).
    deploymentConfigName : str, default is Undefined, optional
        The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
    deploymentStyle : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderDeploymentStyleItems0], default is Undefined, optional
        Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    ec2TagSet : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0], default is Undefined, optional
        Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
    ecsService : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0], default is Undefined, optional
        Configuration block(s) of the ECS services for a deployment group (documented below).
    loadBalancerInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0], default is Undefined, optional
        Single configuration block of the load balancer to use in a blue/green deployment (documented below).
    onPremisesInstanceTagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderOnPremisesInstanceTagFilterItems0], default is Undefined, optional
        On premise tag filters associated with the group. See the AWS docs for details.
    outdatedInstancesStrategy : str, default is Undefined, optional
        Configuration block of Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision. Valid values are UPDATE and IGNORE. Defaults to UPDATE.
    serviceRoleArn : str, default is Undefined, optional
        The service role ARN that allows deployments.
    serviceRoleArnRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    terminationHookEnabled : bool, default is Undefined, optional
        Indicates whether the deployment group was configured to have CodeDeploy install a termination hook into an Auto Scaling group.
    triggerConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0], default is Undefined, optional
        Configuration block(s) of the triggers for the deployment group (documented below).
    """


    alarmConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAlarmConfigurationItems0]

    autoRollbackConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAutoRollbackConfigurationItems0]

    autoscalingGroups?: [str]

    blueGreenDeploymentConfig?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0]

    deploymentConfigName?: str

    deploymentStyle?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderDeploymentStyleItems0]

    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagFilterItems0]

    ec2TagSet?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0]

    ecsService?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0]

    loadBalancerInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0]

    onPremisesInstanceTagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderOnPremisesInstanceTagFilterItems0]

    outdatedInstancesStrategy?: str

    serviceRoleArn?: str

    serviceRoleArnRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRef

    serviceRoleArnSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelector

    tags?: {str:str}

    terminationHookEnabled?: bool

    triggerConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAlarmConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider alarm configuration items0

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    ignorePollAlarmFailure : bool, default is Undefined, optional
        Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is false.
    """


    alarms?: [str]

    enabled?: bool

    ignorePollAlarmFailure?: bool


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderAutoRollbackConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider auto rollback configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    events : [str], default is Undefined, optional
        The event type or types that trigger a rollback. Supported types are DEPLOYMENT_FAILURE, DEPLOYMENT_STOP_ON_ALARM and DEPLOYMENT_STOP_ON_REQUEST.
    """


    enabled?: bool

    events?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider blue green deployment config items0

    Attributes
    ----------
    deploymentReadyOption : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0], default is Undefined, optional
        Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
    greenFleetProvisioningOption : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0], default is Undefined, optional
        Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
    terminateBlueInstancesOnDeploymentSuccess : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0], default is Undefined, optional
        Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
    """


    deploymentReadyOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0]

    greenFleetProvisioningOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0]

    terminateBlueInstancesOnDeploymentSuccess?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider blue green deployment config items0 deployment ready option items0

    Attributes
    ----------
    actionOnTimeout : str, default is Undefined, optional
        When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
    waitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for action_on_timeout.
    """


    actionOnTimeout?: str

    waitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider blue green deployment config items0 green fleet provisioning option items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    """


    action?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider blue green deployment config items0 terminate blue instances on deployment success items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    terminationWaitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
    """


    action?: str

    terminationWaitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderDeploymentStyleItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider deployment style items0

    Attributes
    ----------
    deploymentOption : str, default is Undefined, optional
        Indicates whether to route deployment traffic behind a load balancer. Valid Values are WITH_TRAFFIC_CONTROL or WITHOUT_TRAFFIC_CONTROL. Default is WITHOUT_TRAFFIC_CONTROL.
    deploymentType : str, default is Undefined, optional
        Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are IN_PLACE or BLUE_GREEN. Default is IN_PLACE.
    """


    deploymentOption?: str

    deploymentType?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider ec2 tag set items0

    Attributes
    ----------
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0Ec2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    """


    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0Ec2TagFilterItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEc2TagSetItems0Ec2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider ec2 tag set items0 ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider ecs service items0

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        The name of the ECS cluster.
    clusterNameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelector, default is Undefined, optional
        cluster name selector
    serviceName : str, default is Undefined, optional
        The name of the ECS service.
    serviceNameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRef, default is Undefined, optional
        service name ref
    serviceNameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelector, default is Undefined, optional
        service name selector
    """


    clusterName?: str

    clusterNameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRef

    clusterNameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelector

    serviceName?: str

    serviceNameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRef

    serviceNameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRef:
    r"""
    Reference to a Cluster in ecs to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelector:
    r"""
    Selector for a Cluster in ecs to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRef:
    r"""
    Reference to a Service in ecs to populate serviceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelector:
    r"""
    Selector for a Service in ecs to populate serviceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderEcsServiceItems0ServiceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0

    Attributes
    ----------
    elbInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0], default is Undefined, optional
        The Classic Elastic Load Balancer to use in a deployment. Conflicts with target_group_info and target_group_pair_info.
    targetGroupInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with elb_info and target_group_pair_info.
    targetGroupPairInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with elb_info and target_group_info.
    """


    elbInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0]

    targetGroupInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupInfoItems0]

    targetGroupPairInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 elb info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    nameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRef

    nameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRef:
    r"""
    Reference to a ELB in elb to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelector:
    r"""
    Selector for a ELB in elb to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0ElbInfoItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 target group info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    """


    name?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 target group pair info items0

    Attributes
    ----------
    prodTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0], default is Undefined, optional
        Configuration block for the production traffic route (documented below).
    targetGroup : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0], default is Undefined, optional
        Configuration blocks for a target group within a target group pair (documented below).
    testTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0], default is Undefined, optional
        Configuration block for the test traffic route (documented below).
    """


    prodTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0]

    targetGroup?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0]

    testTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 target group pair info items0 prod traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    listenerArnsRefs : [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0], default is Undefined, optional
        References to LBListener in elbv2 to populate listenerArns.
    listenerArnsSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector, default is Undefined, optional
        listener arns selector
    """


    listenerArns?: [str]

    listenerArnsRefs?: [DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0]

    listenerArnsSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelector:
    r"""
    Selector for a list of LBListener in elbv2 to populate listenerArns.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0ListenerArnsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 target group pair info items0 target group items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    nameRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef, default is Undefined, optional
        name ref
    nameSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef

    nameSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0NameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider load balancer info items0 target group pair info items0 test traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    """


    listenerArns?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderOnPremisesInstanceTagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider on premises instance tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group spec init provider trigger configuration items0

    Attributes
    ----------
    triggerEvents : [str], default is Undefined, optional
        The event type or types for which notifications are triggered. Some values that are supported: DeploymentStart, DeploymentSuccess, DeploymentFailure, DeploymentStop, DeploymentRollback, InstanceStart, InstanceSuccess, InstanceFailure.  See the CodeDeploy documentation for all possible values.
    triggerName : str, default is Undefined, optional
        The name of the notification trigger.
    triggerTargetArn : str, default is Undefined, optional
        The ARN of the SNS topic through which notifications are sent.
    triggerTargetArnRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRef, default is Undefined, optional
        trigger target arn ref
    triggerTargetArnSelector : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelector, default is Undefined, optional
        trigger target arn selector
    """


    triggerEvents?: [str]

    triggerName?: str

    triggerTargetArn?: str

    triggerTargetArnRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRef

    triggerTargetArnSelector?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelector


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRef:
    r"""
    Reference to a Topic in sns to populate triggerTargetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelector:
    r"""
    Selector for a Topic in sns to populate triggerTargetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecInitProviderTriggerConfigurationItems0TriggerTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatus:
    r"""
    DeploymentGroupStatus defines the observed state of DeploymentGroup.

    Attributes
    ----------
    atProvider : DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProvider

    conditions?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusConditionsItems0]

    observedGeneration?: int


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProvider:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider

    Attributes
    ----------
    alarmConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAlarmConfigurationItems0], default is Undefined, optional
        Configuration block of alarms associated with the deployment group (documented below).
    appName : str, default is Undefined, optional
        The name of the application.
    arn : str, default is Undefined, optional
        The ARN of the CodeDeploy deployment group.
    autoRollbackConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAutoRollbackConfigurationItems0], default is Undefined, optional
        Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
    autoscalingGroups : [str], default is Undefined, optional
        Autoscaling groups associated with the deployment group.
    blueGreenDeploymentConfig : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0], default is Undefined, optional
        Configuration block of the blue/green deployment options for a deployment group (documented below).
    computePlatform : str, default is Undefined, optional
        The destination platform type for the deployment.
    deploymentConfigName : str, default is Undefined, optional
        The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
    deploymentGroupId : str, default is Undefined, optional
        The ID of the CodeDeploy deployment group.
    deploymentStyle : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderDeploymentStyleItems0], default is Undefined, optional
        Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    ec2TagSet : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0], default is Undefined, optional
        Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
    ecsService : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEcsServiceItems0], default is Undefined, optional
        Configuration block(s) of the ECS services for a deployment group (documented below).
    id : str, default is Undefined, optional
        Application name and deployment group name.
    loadBalancerInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0], default is Undefined, optional
        Single configuration block of the load balancer to use in a blue/green deployment (documented below).
    onPremisesInstanceTagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderOnPremisesInstanceTagFilterItems0], default is Undefined, optional
        On premise tag filters associated with the group. See the AWS docs for details.
    outdatedInstancesStrategy : str, default is Undefined, optional
        Configuration block of Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision. Valid values are UPDATE and IGNORE. Defaults to UPDATE.
    serviceRoleArn : str, default is Undefined, optional
        The service role ARN that allows deployments.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    terminationHookEnabled : bool, default is Undefined, optional
        Indicates whether the deployment group was configured to have CodeDeploy install a termination hook into an Auto Scaling group.
    triggerConfiguration : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderTriggerConfigurationItems0], default is Undefined, optional
        Configuration block(s) of the triggers for the deployment group (documented below).
    """


    alarmConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAlarmConfigurationItems0]

    appName?: str

    arn?: str

    autoRollbackConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAutoRollbackConfigurationItems0]

    autoscalingGroups?: [str]

    blueGreenDeploymentConfig?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0]

    computePlatform?: str

    deploymentConfigName?: str

    deploymentGroupId?: str

    deploymentStyle?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderDeploymentStyleItems0]

    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagFilterItems0]

    ec2TagSet?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0]

    ecsService?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEcsServiceItems0]

    id?: str

    loadBalancerInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0]

    onPremisesInstanceTagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderOnPremisesInstanceTagFilterItems0]

    outdatedInstancesStrategy?: str

    serviceRoleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    terminationHookEnabled?: bool

    triggerConfiguration?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderTriggerConfigurationItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAlarmConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider alarm configuration items0

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        A list of alarms configured for the deployment group. A maximum of 10 alarms can be added to a deployment group.
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    ignorePollAlarmFailure : bool, default is Undefined, optional
        Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is false.
    """


    alarms?: [str]

    enabled?: bool

    ignorePollAlarmFailure?: bool


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderAutoRollbackConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider auto rollback configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
    events : [str], default is Undefined, optional
        The event type or types that trigger a rollback. Supported types are DEPLOYMENT_FAILURE, DEPLOYMENT_STOP_ON_ALARM and DEPLOYMENT_STOP_ON_REQUEST.
    """


    enabled?: bool

    events?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider blue green deployment config items0

    Attributes
    ----------
    deploymentReadyOption : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0], default is Undefined, optional
        Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
    greenFleetProvisioningOption : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0], default is Undefined, optional
        Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
    terminateBlueInstancesOnDeploymentSuccess : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0], default is Undefined, optional
        Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
    """


    deploymentReadyOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0]

    greenFleetProvisioningOption?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0]

    terminateBlueInstancesOnDeploymentSuccess?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0DeploymentReadyOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider blue green deployment config items0 deployment ready option items0

    Attributes
    ----------
    actionOnTimeout : str, default is Undefined, optional
        When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
    waitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for action_on_timeout.
    """


    actionOnTimeout?: str

    waitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0GreenFleetProvisioningOptionItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider blue green deployment config items0 green fleet provisioning option items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    """


    action?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderBlueGreenDeploymentConfigItems0TerminateBlueInstancesOnDeploymentSuccessItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider blue green deployment config items0 terminate blue instances on deployment success items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The method used to add instances to a replacement environment.
    terminationWaitTimeInMinutes : float, default is Undefined, optional
        The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
    """


    action?: str

    terminationWaitTimeInMinutes?: float


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderDeploymentStyleItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider deployment style items0

    Attributes
    ----------
    deploymentOption : str, default is Undefined, optional
        Indicates whether to route deployment traffic behind a load balancer. Valid Values are WITH_TRAFFIC_CONTROL or WITHOUT_TRAFFIC_CONTROL. Default is WITHOUT_TRAFFIC_CONTROL.
    deploymentType : str, default is Undefined, optional
        Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are IN_PLACE or BLUE_GREEN. Default is IN_PLACE.
    """


    deploymentOption?: str

    deploymentType?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider ec2 tag set items0

    Attributes
    ----------
    ec2TagFilter : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0Ec2TagFilterItems0], default is Undefined, optional
        Tag filters associated with the deployment group. See the AWS docs for details.
    """


    ec2TagFilter?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0Ec2TagFilterItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEc2TagSetItems0Ec2TagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider ec2 tag set items0 ec2 tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderEcsServiceItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider ecs service items0

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        The name of the ECS cluster.
    serviceName : str, default is Undefined, optional
        The name of the ECS service.
    """


    clusterName?: str

    serviceName?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0

    Attributes
    ----------
    elbInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0ElbInfoItems0], default is Undefined, optional
        The Classic Elastic Load Balancer to use in a deployment. Conflicts with target_group_info and target_group_pair_info.
    targetGroupInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with elb_info and target_group_pair_info.
    targetGroupPairInfo : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0], default is Undefined, optional
        The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with elb_info and target_group_info.
    """


    elbInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0ElbInfoItems0]

    targetGroupInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupInfoItems0]

    targetGroupPairInfo?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0ElbInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 elb info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    """


    name?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 target group info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    """


    name?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 target group pair info items0

    Attributes
    ----------
    prodTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0], default is Undefined, optional
        Configuration block for the production traffic route (documented below).
    targetGroup : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0], default is Undefined, optional
        Configuration blocks for a target group within a target group pair (documented below).
    testTrafficRoute : [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0], default is Undefined, optional
        Configuration block for the test traffic route (documented below).
    """


    prodTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0]

    targetGroup?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0]

    testTrafficRoute?: [DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0ProdTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 target group pair info items0 prod traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    """


    listenerArns?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TargetGroupItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 target group pair info items0 target group items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
    """


    name?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderLoadBalancerInfoItems0TargetGroupPairInfoItems0TestTrafficRouteItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider load balancer info items0 target group pair info items0 test traffic route items0

    Attributes
    ----------
    listenerArns : [str], default is Undefined, optional
        List of Amazon Resource Names (ARNs) of the load balancer listeners.
    """


    listenerArns?: [str]


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderOnPremisesInstanceTagFilterItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider on premises instance tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the tag filter.
    $type : str, default is Undefined, optional
        The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
    value : str, default is Undefined, optional
        The value of the tag filter.
    """


    key?: str

    $type?: str

    value?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusAtProviderTriggerConfigurationItems0:
    r"""
    deploy aws upbound io v1beta1 deployment group status at provider trigger configuration items0

    Attributes
    ----------
    triggerEvents : [str], default is Undefined, optional
        The event type or types for which notifications are triggered. Some values that are supported: DeploymentStart, DeploymentSuccess, DeploymentFailure, DeploymentStop, DeploymentRollback, InstanceStart, InstanceSuccess, InstanceFailure.  See the CodeDeploy documentation for all possible values.
    triggerName : str, default is Undefined, optional
        The name of the notification trigger.
    triggerTargetArn : str, default is Undefined, optional
        The ARN of the SNS topic through which notifications are sent.
    """


    triggerEvents?: [str]

    triggerName?: str

    triggerTargetArn?: str


schema DeployAwsUpboundIoV1beta1DeploymentGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


