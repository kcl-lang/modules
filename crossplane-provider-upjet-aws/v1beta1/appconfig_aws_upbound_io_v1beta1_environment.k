"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Environment:
    r"""
    Environment is the Schema for the Environments API. Provides an AppConfig Environment resource.

    Attributes
    ----------
    apiVersion : str, default is "appconfig.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Environment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppconfigAwsUpboundIoV1beta1EnvironmentSpec, default is Undefined, required
        spec
    status : AppconfigAwsUpboundIoV1beta1EnvironmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "appconfig.aws.upbound.io/v1beta1" = "appconfig.aws.upbound.io/v1beta1"

    kind: "Environment" = "Environment"

    metadata?: v1.ObjectMeta

    spec: AppconfigAwsUpboundIoV1beta1EnvironmentSpec

    status?: AppconfigAwsUpboundIoV1beta1EnvironmentStatus


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpec:
    r"""
    EnvironmentSpec defines the desired state of Environment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProvider

    initProvider?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef

    publishConnectionDetailsTo?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProvider:
    r"""
    appconfig aws upbound io v1beta1 environment spec for provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        AppConfig application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    description : str, default is Undefined, optional
        Description of the environment. Can be at most 1024 characters.
    monitor : [AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0], default is Undefined, optional
        Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.
    name : str, default is Undefined, optional
        Name for the environment. Must be between 1 and 64 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelector

    description?: str

    monitor?: [AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0]

    name?: str

    region: str

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0:
    r"""
    appconfig aws upbound io v1beta1 environment spec for provider monitor items0

    Attributes
    ----------
    alarmArn : str, default is Undefined, optional
        ARN of the Amazon CloudWatch alarm.
    alarmArnRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRef, default is Undefined, optional
        alarm arn ref
    alarmArnSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelector, default is Undefined, optional
        alarm arn selector
    alarmRoleArn : str, default is Undefined, optional
        ARN of an IAM role for AWS AppConfig to monitor alarm_arn.
    alarmRoleArnRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRef, default is Undefined, optional
        alarm role arn ref
    alarmRoleArnSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelector, default is Undefined, optional
        alarm role arn selector
    """


    alarmArn?: str

    alarmArnRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRef

    alarmArnSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelector

    alarmRoleArn?: str

    alarmRoleArnRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRef

    alarmRoleArnSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelector


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRef:
    r"""
    Reference to a MetricAlarm in cloudwatch to populate alarmArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelector:
    r"""
    Selector for a MetricAlarm in cloudwatch to populate alarmArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRef:
    r"""
    Reference to a Role in iam to populate alarmRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelector:
    r"""
    Selector for a Role in iam to populate alarmRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecForProviderMonitorItems0AlarmRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        AppConfig application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    description : str, default is Undefined, optional
        Description of the environment. Can be at most 1024 characters.
    monitor : [AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0], default is Undefined, optional
        Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.
    name : str, default is Undefined, optional
        Name for the environment. Must be between 1 and 64 characters in length.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelector

    description?: str

    monitor?: [AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0]

    name?: str

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0:
    r"""
    appconfig aws upbound io v1beta1 environment spec init provider monitor items0

    Attributes
    ----------
    alarmArn : str, default is Undefined, optional
        ARN of the Amazon CloudWatch alarm.
    alarmArnRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRef, default is Undefined, optional
        alarm arn ref
    alarmArnSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelector, default is Undefined, optional
        alarm arn selector
    alarmRoleArn : str, default is Undefined, optional
        ARN of an IAM role for AWS AppConfig to monitor alarm_arn.
    alarmRoleArnRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRef, default is Undefined, optional
        alarm role arn ref
    alarmRoleArnSelector : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelector, default is Undefined, optional
        alarm role arn selector
    """


    alarmArn?: str

    alarmArnRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRef

    alarmArnSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelector

    alarmRoleArn?: str

    alarmRoleArnRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRef

    alarmRoleArnSelector?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelector


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRef:
    r"""
    Reference to a MetricAlarm in cloudwatch to populate alarmArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelector:
    r"""
    Selector for a MetricAlarm in cloudwatch to populate alarmArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRef:
    r"""
    Reference to a Role in iam to populate alarmRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelector:
    r"""
    Selector for a Role in iam to populate alarmRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecInitProviderMonitorItems0AlarmRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef

    metadata?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata

    name: str


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppconfigAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1EnvironmentStatus:
    r"""
    EnvironmentStatus defines the observed state of Environment.

    Attributes
    ----------
    atProvider : AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppconfigAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProvider

    conditions?: [AppconfigAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0]

    observedGeneration?: int


schema AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProvider:
    r"""
    appconfig aws upbound io v1beta1 environment status at provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        AppConfig application ID. Must be between 4 and 7 characters in length.
    arn : str, default is Undefined, optional
        ARN of the AppConfig Environment.
    description : str, default is Undefined, optional
        Description of the environment. Can be at most 1024 characters.
    environmentId : str, default is Undefined, optional
        AppConfig environment ID.
    id : str, default is Undefined, optional
        (Deprecated) AppConfig environment ID and application ID separated by a colon (:).
    monitor : [AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProviderMonitorItems0], default is Undefined, optional
        Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.
    name : str, default is Undefined, optional
        Name for the environment. Must be between 1 and 64 characters in length.
    state : str, default is Undefined, optional
        State of the environment. Possible values are READY_FOR_DEPLOYMENT, DEPLOYING, ROLLING_BACK
        or ROLLED_BACK.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    applicationId?: str

    arn?: str

    description?: str

    environmentId?: str

    id?: str

    monitor?: [AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProviderMonitorItems0]

    name?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppconfigAwsUpboundIoV1beta1EnvironmentStatusAtProviderMonitorItems0:
    r"""
    appconfig aws upbound io v1beta1 environment status at provider monitor items0

    Attributes
    ----------
    alarmArn : str, default is Undefined, optional
        ARN of the Amazon CloudWatch alarm.
    alarmRoleArn : str, default is Undefined, optional
        ARN of an IAM role for AWS AppConfig to monitor alarm_arn.
    """


    alarmArn?: str

    alarmRoleArn?: str


schema AppconfigAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


