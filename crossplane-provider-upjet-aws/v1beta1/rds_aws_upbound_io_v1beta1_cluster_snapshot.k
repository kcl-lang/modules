"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterSnapshot:
    r"""
    ClusterSnapshot is the Schema for the ClusterSnapshots API. Manages an RDS database cluster snapshot.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterSnapshot", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ClusterSnapshotSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ClusterSnapshotStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "ClusterSnapshot" = "ClusterSnapshot"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1ClusterSnapshotSpec

    status?: RdsAwsUpboundIoV1beta1ClusterSnapshotStatus


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpec:
    r"""
    ClusterSnapshotSpec defines the desired state of ClusterSnapshot

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProvider:
    r"""
    rds aws upbound io v1beta1 cluster snapshot spec for provider

    Attributes
    ----------
    dbClusterIdentifier : str, default is Undefined, optional
        The DB Cluster Identifier from which to take the snapshot.
    dbClusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRef, default is Undefined, optional
        db cluster identifier ref
    dbClusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelector, default is Undefined, optional
        db cluster identifier selector
    dbClusterSnapshotIdentifier : str, default is Undefined, optional
        The Identifier for the snapshot.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sharedAccounts : [str], default is Undefined, optional
        List of AWS Account IDs to share the snapshot with. Use all to make the snapshot public.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    dbClusterIdentifier?: str

    dbClusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRef

    dbClusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelector

    dbClusterSnapshotIdentifier?: str

    region: str

    sharedAccounts?: [str]

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate dbClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate dbClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecForProviderDbClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    dbClusterIdentifier : str, default is Undefined, optional
        The DB Cluster Identifier from which to take the snapshot.
    dbClusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRef, default is Undefined, optional
        db cluster identifier ref
    dbClusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelector, default is Undefined, optional
        db cluster identifier selector
    dbClusterSnapshotIdentifier : str, default is Undefined, optional
        The Identifier for the snapshot.
    sharedAccounts : [str], default is Undefined, optional
        List of AWS Account IDs to share the snapshot with. Use all to make the snapshot public.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    dbClusterIdentifier?: str

    dbClusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRef

    dbClusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelector

    dbClusterSnapshotIdentifier?: str

    sharedAccounts?: [str]

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate dbClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate dbClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecInitProviderDbClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1ClusterSnapshotSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ClusterSnapshotStatus:
    r"""
    ClusterSnapshotStatus defines the observed state of ClusterSnapshot.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ClusterSnapshotStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ClusterSnapshotStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1ClusterSnapshotStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1ClusterSnapshotStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1ClusterSnapshotStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 cluster snapshot status at provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        Allocated storage size in gigabytes (GB).
    availabilityZones : [str], default is Undefined, optional
        List of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.
    dbClusterIdentifier : str, default is Undefined, optional
        The DB Cluster Identifier from which to take the snapshot.
    dbClusterSnapshotArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the DB Cluster Snapshot.
    dbClusterSnapshotIdentifier : str, default is Undefined, optional
        The Identifier for the snapshot.
    engine : str, default is Undefined, optional
        Name of the database engine.
    engineVersion : str, default is Undefined, optional
        Version of the database engine for this DB cluster snapshot.
    id : str, default is Undefined, optional
        id
    kmsKeyId : str, default is Undefined, optional
        If storage_encrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.
    licenseModel : str, default is Undefined, optional
        License model information for the restored DB cluster.
    port : float, default is Undefined, optional
        Port that the DB cluster was listening on at the time of the snapshot.
    sharedAccounts : [str], default is Undefined, optional
        List of AWS Account IDs to share the snapshot with. Use all to make the snapshot public.
    snapshotType : str, default is Undefined, optional
        snapshot type
    sourceDbClusterSnapshotArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the DB Cluster Snapshot.
    status : str, default is Undefined, optional
        The status of this DB Cluster Snapshot.
    storageEncrypted : bool, default is Undefined, optional
        Whether the DB cluster snapshot is encrypted.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcId : str, default is Undefined, optional
        The VPC ID associated with the DB cluster snapshot.
    """


    allocatedStorage?: float

    availabilityZones?: [str]

    dbClusterIdentifier?: str

    dbClusterSnapshotArn?: str

    dbClusterSnapshotIdentifier?: str

    engine?: str

    engineVersion?: str

    id?: str

    kmsKeyId?: str

    licenseModel?: str

    port?: float

    sharedAccounts?: [str]

    snapshotType?: str

    sourceDbClusterSnapshotArn?: str

    status?: str

    storageEncrypted?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcId?: str


schema RdsAwsUpboundIoV1beta1ClusterSnapshotStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


