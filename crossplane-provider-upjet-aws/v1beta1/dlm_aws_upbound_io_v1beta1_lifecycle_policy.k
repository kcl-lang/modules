"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LifecyclePolicy:
    r"""
    LifecyclePolicy is the Schema for the LifecyclePolicys API. Provides a Data Lifecycle Manager (DLM) lifecycle policy for managing snapshots.

    Attributes
    ----------
    apiVersion : str, default is "dlm.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LifecyclePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DlmAwsUpboundIoV1beta1LifecyclePolicySpec, default is Undefined, required
        spec
    status : DlmAwsUpboundIoV1beta1LifecyclePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "dlm.aws.upbound.io/v1beta1" = "dlm.aws.upbound.io/v1beta1"

    kind: "LifecyclePolicy" = "LifecyclePolicy"

    metadata?: v1.ObjectMeta

    spec: DlmAwsUpboundIoV1beta1LifecyclePolicySpec

    status?: DlmAwsUpboundIoV1beta1LifecyclePolicyStatus


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpec:
    r"""
    LifecyclePolicySpec defines the desired state of LifecyclePolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProvider

    initProvider?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRef

    publishConnectionDetailsTo?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecWriteConnectionSecretToRef


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProvider:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the DLM lifecycle policy.
    executionRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that is able to be assumed by the DLM service.
    executionRoleArnRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    policyDetails : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0], default is Undefined, optional
        See the policy_details configuration block. Max of 1.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    state : str, default is Undefined, optional
        Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    executionRoleArn?: str

    executionRoleArnRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRef

    executionRoleArnSelector?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelector

    policyDetails?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0]

    region: str

    state?: str

    tags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelectorPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0

    Attributes
    ----------
    action : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0], default is Undefined, optional
        The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.
    eventSource : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0], default is Undefined, optional
        The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    policyType : str, default is Undefined, optional
        The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.
    resourceLocations : [str], default is Undefined, optional
        The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If you specify OUTPOST, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account. Valid values are CLOUD and OUTPOST.
    resourceTypes : [str], default is Undefined, optional
        A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.
    schedule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0], default is Undefined, optional
        See the schedule configuration block.
    targetTags : {str:str}, default is Undefined, optional
        A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted.
    """


    action?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0]

    eventSource?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0]

    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ParametersItems0]

    policyType?: str

    resourceLocations?: [str]

    resourceTypes?: [str]

    schedule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0]

    targetTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 action items0

    Attributes
    ----------
    crossRegionCopy : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0], default is Undefined, optional
        The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    """


    crossRegionCopy?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0]

    name?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 action items0 cross region copy items0

    Attributes
    ----------
    encryptionConfiguration : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0], default is Undefined, optional
        The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    encryptionConfiguration?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0]

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 action items0 cross region copy items0 encryption configuration items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    """


    cmkArn?: str

    encrypted?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 action items0 cross region copy items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 event source items0

    Attributes
    ----------
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    $type : str, default is Undefined, optional
        The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.
    """


    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0ParametersItems0]

    $type?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0EventSourceItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 event source items0 parameters items0

    Attributes
    ----------
    descriptionRegex : str, default is Undefined, optional
        The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
    eventType : str, default is Undefined, optional
        The type of event. Currently, only shareSnapshot events are supported.
    snapshotOwner : [str], default is Undefined, optional
        The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
    """


    descriptionRegex?: str

    eventType?: str

    snapshotOwner?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 parameters items0

    Attributes
    ----------
    excludeBootVolume : bool, default is Undefined, optional
        Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.
    noReboot : bool, default is Undefined, optional
        Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).
    """


    excludeBootVolume?: bool

    noReboot?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0

    Attributes
    ----------
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    createRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0], default is Undefined, optional
        See the create_rule block. Max of 1 per schedule.
    crossRegionCopyRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0], default is Undefined, optional
        See the cross_region_copy_rule block. Max of 3 per schedule.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    fastRestoreRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0], default is Undefined, optional
        See the fast_restore_rule block. Max of 1 per schedule.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    shareRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0], default is Undefined, optional
        See the share_rule block. Max of 1 per schedule.
    tagsToAdd : {str:str}, default is Undefined, optional
        A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
    variableTags : {str:str}, default is Undefined, optional
        A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.
    """


    copyTags?: bool

    createRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0]

    crossRegionCopyRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0]

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0]

    fastRestoreRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0]

    name?: str

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0]

    shareRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0]

    tagsToAdd?: {str:str}

    variableTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 create rule items0

    Attributes
    ----------
    cronExpression : str, default is Undefined, optional
        The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    location : str, default is Undefined, optional
        Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.
    times : [str], default is Undefined, optional
        A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.
    """


    cronExpression?: str

    interval?: float

    intervalUnit?: str

    location?: str

    times?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 cross region copy rule items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    cmkArnRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef, default is Undefined, optional
        cmk arn ref
    cmkArnSelector : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector, default is Undefined, optional
        cmk arn selector
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    cmkArn?: str

    cmkArnRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef

    cmkArnSelector?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector

    copyTags?: bool

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0]

    encrypted?: bool

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef:
    r"""
    Reference to a Key in kms to populate cmkArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector:
    r"""
    Selector for a Key in kms to populate cmkArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 cross region copy rule items0 deprecate rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 cross region copy rule items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 deprecate rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 fast restore rule items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        The Availability Zones in which to enable fast snapshot restore.
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    availabilityZones?: [str]

    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 retain rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecForProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec for provider policy details items0 schedule items0 share rule items0

    Attributes
    ----------
    targetAccounts : [str], default is Undefined, optional
        The IDs of the AWS accounts with which to share the snapshots.
    unshareInterval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    unshareIntervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    targetAccounts?: [str]

    unshareInterval?: float

    unshareIntervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the DLM lifecycle policy.
    executionRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that is able to be assumed by the DLM service.
    executionRoleArnRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    policyDetails : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0], default is Undefined, optional
        See the policy_details configuration block. Max of 1.
    state : str, default is Undefined, optional
        Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    executionRoleArn?: str

    executionRoleArnRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRef

    executionRoleArnSelector?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelector

    policyDetails?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0]

    state?: str

    tags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelectorPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0

    Attributes
    ----------
    action : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0], default is Undefined, optional
        The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.
    eventSource : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0], default is Undefined, optional
        The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    policyType : str, default is Undefined, optional
        The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.
    resourceLocations : [str], default is Undefined, optional
        The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If you specify OUTPOST, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account. Valid values are CLOUD and OUTPOST.
    resourceTypes : [str], default is Undefined, optional
        A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.
    schedule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0], default is Undefined, optional
        See the schedule configuration block.
    targetTags : {str:str}, default is Undefined, optional
        A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted.
    """


    action?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0]

    eventSource?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0]

    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ParametersItems0]

    policyType?: str

    resourceLocations?: [str]

    resourceTypes?: [str]

    schedule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0]

    targetTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 action items0

    Attributes
    ----------
    crossRegionCopy : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0], default is Undefined, optional
        The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    """


    crossRegionCopy?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0]

    name?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 action items0 cross region copy items0

    Attributes
    ----------
    encryptionConfiguration : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0], default is Undefined, optional
        The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    encryptionConfiguration?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0]

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 action items0 cross region copy items0 encryption configuration items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    """


    cmkArn?: str

    encrypted?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 action items0 cross region copy items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 event source items0

    Attributes
    ----------
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    $type : str, default is Undefined, optional
        The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.
    """


    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0ParametersItems0]

    $type?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0EventSourceItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 event source items0 parameters items0

    Attributes
    ----------
    descriptionRegex : str, default is Undefined, optional
        The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
    eventType : str, default is Undefined, optional
        The type of event. Currently, only shareSnapshot events are supported.
    snapshotOwner : [str], default is Undefined, optional
        The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
    """


    descriptionRegex?: str

    eventType?: str

    snapshotOwner?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 parameters items0

    Attributes
    ----------
    excludeBootVolume : bool, default is Undefined, optional
        Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.
    noReboot : bool, default is Undefined, optional
        Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).
    """


    excludeBootVolume?: bool

    noReboot?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0

    Attributes
    ----------
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    createRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0], default is Undefined, optional
        See the create_rule block. Max of 1 per schedule.
    crossRegionCopyRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0], default is Undefined, optional
        See the cross_region_copy_rule block. Max of 3 per schedule.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    fastRestoreRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0], default is Undefined, optional
        See the fast_restore_rule block. Max of 1 per schedule.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    shareRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0], default is Undefined, optional
        See the share_rule block. Max of 1 per schedule.
    tagsToAdd : {str:str}, default is Undefined, optional
        A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
    variableTags : {str:str}, default is Undefined, optional
        A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.
    """


    copyTags?: bool

    createRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0]

    crossRegionCopyRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0]

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0]

    fastRestoreRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0]

    name?: str

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0]

    shareRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0]

    tagsToAdd?: {str:str}

    variableTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 create rule items0

    Attributes
    ----------
    cronExpression : str, default is Undefined, optional
        The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    location : str, default is Undefined, optional
        Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.
    times : [str], default is Undefined, optional
        A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.
    """


    cronExpression?: str

    interval?: float

    intervalUnit?: str

    location?: str

    times?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 cross region copy rule items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    cmkArnRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef, default is Undefined, optional
        cmk arn ref
    cmkArnSelector : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector, default is Undefined, optional
        cmk arn selector
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    cmkArn?: str

    cmkArnRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef

    cmkArnSelector?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector

    copyTags?: bool

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0]

    encrypted?: bool

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRef:
    r"""
    Reference to a Key in kms to populate cmkArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelector:
    r"""
    Selector for a Key in kms to populate cmkArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0CmkArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 cross region copy rule items0 deprecate rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 cross region copy rule items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 deprecate rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 fast restore rule items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        The Availability Zones in which to enable fast snapshot restore.
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    availabilityZones?: [str]

    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 retain rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecInitProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy spec init provider policy details items0 schedule items0 share rule items0

    Attributes
    ----------
    targetAccounts : [str], default is Undefined, optional
        The IDs of the AWS accounts with which to share the snapshots.
    unshareInterval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    unshareIntervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    targetAccounts?: [str]

    unshareInterval?: float

    unshareIntervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRef

    metadata?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToMetadata

    name: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatus:
    r"""
    LifecyclePolicyStatus defines the observed state of LifecyclePolicy.

    Attributes
    ----------
    atProvider : DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProvider

    conditions?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusConditionsItems0]

    observedGeneration?: int


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProvider:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
    description : str, default is Undefined, optional
        A description for the DLM lifecycle policy.
    executionRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that is able to be assumed by the DLM service.
    id : str, default is Undefined, optional
        Identifier of the DLM Lifecycle Policy.
    policyDetails : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0], default is Undefined, optional
        See the policy_details configuration block. Max of 1.
    state : str, default is Undefined, optional
        Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    description?: str

    executionRoleArn?: str

    id?: str

    policyDetails?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0]

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0

    Attributes
    ----------
    action : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0], default is Undefined, optional
        The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.
    eventSource : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0], default is Undefined, optional
        The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    policyType : str, default is Undefined, optional
        The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.
    resourceLocations : [str], default is Undefined, optional
        The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If you specify OUTPOST, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account. Valid values are CLOUD and OUTPOST.
    resourceTypes : [str], default is Undefined, optional
        A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.
    schedule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0], default is Undefined, optional
        See the schedule configuration block.
    targetTags : {str:str}, default is Undefined, optional
        A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted.
    """


    action?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0]

    eventSource?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0]

    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ParametersItems0]

    policyType?: str

    resourceLocations?: [str]

    resourceTypes?: [str]

    schedule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0]

    targetTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 action items0

    Attributes
    ----------
    crossRegionCopy : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0], default is Undefined, optional
        The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    """


    crossRegionCopy?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0]

    name?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 action items0 cross region copy items0

    Attributes
    ----------
    encryptionConfiguration : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0], default is Undefined, optional
        The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    encryptionConfiguration?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0]

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0EncryptionConfigurationItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 action items0 cross region copy items0 encryption configuration items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    """


    cmkArn?: str

    encrypted?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ActionItems0CrossRegionCopyItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 action items0 cross region copy items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 event source items0

    Attributes
    ----------
    parameters : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0ParametersItems0], default is Undefined, optional
        A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.
    $type : str, default is Undefined, optional
        The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.
    """


    parameters?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0ParametersItems0]

    $type?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0EventSourceItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 event source items0 parameters items0

    Attributes
    ----------
    descriptionRegex : str, default is Undefined, optional
        The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
    eventType : str, default is Undefined, optional
        The type of event. Currently, only shareSnapshot events are supported.
    snapshotOwner : [str], default is Undefined, optional
        The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
    """


    descriptionRegex?: str

    eventType?: str

    snapshotOwner?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ParametersItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 parameters items0

    Attributes
    ----------
    excludeBootVolume : bool, default is Undefined, optional
        Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.
    noReboot : bool, default is Undefined, optional
        Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).
    """


    excludeBootVolume?: bool

    noReboot?: bool


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0

    Attributes
    ----------
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    createRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0], default is Undefined, optional
        See the create_rule block. Max of 1 per schedule.
    crossRegionCopyRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0], default is Undefined, optional
        See the cross_region_copy_rule block. Max of 3 per schedule.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    fastRestoreRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0], default is Undefined, optional
        See the fast_restore_rule block. Max of 1 per schedule.
    name : str, default is Undefined, optional
        A descriptive name for the action.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    shareRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0], default is Undefined, optional
        See the share_rule block. Max of 1 per schedule.
    tagsToAdd : {str:str}, default is Undefined, optional
        A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
    variableTags : {str:str}, default is Undefined, optional
        A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.
    """


    copyTags?: bool

    createRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0]

    crossRegionCopyRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0]

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0]

    fastRestoreRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0]

    name?: str

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0]

    shareRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0]

    tagsToAdd?: {str:str}

    variableTags?: {str:str}


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CreateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 create rule items0

    Attributes
    ----------
    cronExpression : str, default is Undefined, optional
        The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    location : str, default is Undefined, optional
        Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.
    times : [str], default is Undefined, optional
        A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.
    """


    cronExpression?: str

    interval?: float

    intervalUnit?: str

    location?: str

    times?: [str]


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 cross region copy rule items0

    Attributes
    ----------
    cmkArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.
    copyTags : bool, default is Undefined, optional
        Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
    deprecateRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0], default is Undefined, optional
        See the deprecate_rule block. Max of 1 per schedule.
    encrypted : bool, default is Undefined, optional
        To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.
    retainRule : [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0], default is Undefined, optional
        Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.
    target : str, default is Undefined, optional
        The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.
    """


    cmkArn?: str

    copyTags?: bool

    deprecateRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0]

    encrypted?: bool

    retainRule?: [DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0]

    target?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 cross region copy rule items0 deprecate rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0CrossRegionCopyRuleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 cross region copy rule items0 retain rule items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0DeprecateRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 deprecate rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0FastRestoreRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 fast restore rule items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        The Availability Zones in which to enable fast snapshot restore.
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    availabilityZones?: [str]

    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0RetainRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 retain rule items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.
    interval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    intervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    count?: float

    interval?: float

    intervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusAtProviderPolicyDetailsItems0ScheduleItems0ShareRuleItems0:
    r"""
    dlm aws upbound io v1beta1 lifecycle policy status at provider policy details items0 schedule items0 share rule items0

    Attributes
    ----------
    targetAccounts : [str], default is Undefined, optional
        The IDs of the AWS accounts with which to share the snapshots.
    unshareInterval : float, default is Undefined, optional
        How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.
    unshareIntervalUnit : str, default is Undefined, optional
        The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.
    """


    targetAccounts?: [str]

    unshareInterval?: float

    unshareIntervalUnit?: str


schema DlmAwsUpboundIoV1beta1LifecyclePolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


