"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Directory:
    r"""
    Directory is the Schema for the Directorys API. Provides a WorkSpaces directory in AWS WorkSpaces Service.

    Attributes
    ----------
    apiVersion : str, default is "workspaces.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Directory", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : WorkspacesAwsUpboundIoV1beta1DirectorySpec, default is Undefined, required
        spec
    status : WorkspacesAwsUpboundIoV1beta1DirectoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "workspaces.aws.upbound.io/v1beta1" = "workspaces.aws.upbound.io/v1beta1"

    kind: "Directory" = "Directory"

    metadata?: v1.ObjectMeta

    spec: WorkspacesAwsUpboundIoV1beta1DirectorySpec

    status?: WorkspacesAwsUpboundIoV1beta1DirectoryStatus


schema WorkspacesAwsUpboundIoV1beta1DirectorySpec:
    r"""
    DirectorySpec defines the desired state of Directory

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProvider, default is Undefined, required
        for provider
    initProvider : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProvider

    initProvider?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRef

    publishConnectionDetailsTo?: WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProvider:
    r"""
    workspaces aws upbound io v1beta1 directory spec for provider

    Attributes
    ----------
    directoryId : str, default is Undefined, optional
        The directory identifier for registration in WorkSpaces service.
    directoryIdRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRef, default is Undefined, optional
        directory Id ref
    directoryIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelector, default is Undefined, optional
        directory Id selector
    ipGroupIds : [str], default is Undefined, optional
        The identifiers of the IP access control groups associated with the directory.
    ipGroupIdsRefs : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0], default is Undefined, optional
        References to IPGroup in workspaces to populate ipGroupIds.
    ipGroupIdsSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelector, default is Undefined, optional
        ip group ids selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    samlProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSamlPropertiesItems0], default is Undefined, optional
        –  Configuration of SAML authentication integration. Defined below.
    selfServicePermissions : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSelfServicePermissionsItems0], default is Undefined, optional
        service capabilities. Defined below.
    subnetIdRefs : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets where the directory resides.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workspaceAccessProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceAccessPropertiesItems0], default is Undefined, optional
        –  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
    workspaceCreationProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0], default is Undefined, optional
        –  Default properties that are used for creating WorkSpaces. Defined below.
    """


    directoryId?: str

    directoryIdRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRef

    directoryIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelector

    ipGroupIds?: [str]

    ipGroupIdsRefs?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0]

    ipGroupIdsSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelector

    region: str

    samlProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSamlPropertiesItems0]

    selfServicePermissions?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSelfServicePermissionsItems0]

    subnetIdRefs?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0]

    subnetIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    workspaceAccessProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceAccessPropertiesItems0]

    workspaceCreationProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0]


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate directoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate directoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0Policy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelector:
    r"""
    Selector for a list of IPGroup in workspaces to populate ipGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderIPGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSamlPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec for provider saml properties items0

    Attributes
    ----------
    relayStateParameterName : str, default is Undefined, optional
        The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.
    status : str, default is Undefined, optional
        Status of SAML 2.0 authentication. Default DISABLED.
    userAccessUrl : str, default is Undefined, optional
        The SAML 2.0 identity provider (IdP) user access URL.
    """


    relayStateParameterName?: str

    status?: str

    userAccessUrl?: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSelfServicePermissionsItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec for provider self service permissions items0

    Attributes
    ----------
    changeComputeType : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.
    increaseVolumeSize : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.
    rebuildWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.
    restartWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can restart their workspace. Default true.
    switchRunningMode : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.
    """


    changeComputeType?: bool

    increaseVolumeSize?: bool

    rebuildWorkspace?: bool

    restartWorkspace?: bool

    switchRunningMode?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0Policy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceAccessPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec for provider workspace access properties items0

    Attributes
    ----------
    deviceTypeAndroid : str, default is Undefined, optional
        –  Indicates whether users can use Android devices to access their WorkSpaces.
    deviceTypeChromeos : str, default is Undefined, optional
        –  Indicates whether users can use Chromebooks to access their WorkSpaces.
    deviceTypeIos : str, default is Undefined, optional
        –  Indicates whether users can use iOS devices to access their WorkSpaces.
    deviceTypeLinux : str, default is Undefined, optional
        –  Indicates whether users can use Linux clients to access their WorkSpaces.
    deviceTypeOsx : str, default is Undefined, optional
        –  Indicates whether users can use macOS clients to access their WorkSpaces.
    deviceTypeWeb : str, default is Undefined, optional
        –  Indicates whether users can access their WorkSpaces through a web browser.
    deviceTypeWindows : str, default is Undefined, optional
        –  Indicates whether users can use Windows clients to access their WorkSpaces.
    deviceTypeZeroclient : str, default is Undefined, optional
        –  Indicates whether users can use zero client devices to access their WorkSpaces.
    """


    deviceTypeAndroid?: str

    deviceTypeChromeos?: str

    deviceTypeIos?: str

    deviceTypeLinux?: str

    deviceTypeOsx?: str

    deviceTypeWeb?: str

    deviceTypeWindows?: str

    deviceTypeZeroclient?: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec for provider workspace creation properties items0

    Attributes
    ----------
    customSecurityGroupId : str, default is Undefined, optional
        –  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
    customSecurityGroupIdRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef, default is Undefined, optional
        custom security group Id ref
    customSecurityGroupIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector, default is Undefined, optional
        custom security group Id selector
    defaultOu : str, default is Undefined, optional
        –  The default organizational unit (OU) for your WorkSpace directories. Should conform "OU=<value>,DC=<value>,...,DC=<value>" pattern.
    enableInternetAccess : bool, default is Undefined, optional
        –  Indicates whether internet access is enabled for your WorkSpaces.
    enableMaintenanceMode : bool, default is Undefined, optional
        –  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..
    userEnabledAsLocalAdministrator : bool, default is Undefined, optional
        –  Indicates whether users are local administrators of their WorkSpaces.
    """


    customSecurityGroupId?: str

    customSecurityGroupIdRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef

    customSecurityGroupIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector

    defaultOu?: str

    enableInternetAccess?: bool

    enableMaintenanceMode?: bool

    userEnabledAsLocalAdministrator?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef:
    r"""
    Reference to a SecurityGroup in ec2 to populate customSecurityGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector:
    r"""
    Selector for a SecurityGroup in ec2 to populate customSecurityGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecForProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    directoryId : str, default is Undefined, optional
        The directory identifier for registration in WorkSpaces service.
    directoryIdRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRef, default is Undefined, optional
        directory Id ref
    directoryIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelector, default is Undefined, optional
        directory Id selector
    ipGroupIds : [str], default is Undefined, optional
        The identifiers of the IP access control groups associated with the directory.
    ipGroupIdsRefs : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0], default is Undefined, optional
        References to IPGroup in workspaces to populate ipGroupIds.
    ipGroupIdsSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelector, default is Undefined, optional
        ip group ids selector
    samlProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSamlPropertiesItems0], default is Undefined, optional
        –  Configuration of SAML authentication integration. Defined below.
    selfServicePermissions : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSelfServicePermissionsItems0], default is Undefined, optional
        service capabilities. Defined below.
    subnetIdRefs : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets where the directory resides.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workspaceAccessProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceAccessPropertiesItems0], default is Undefined, optional
        –  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
    workspaceCreationProperties : [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0], default is Undefined, optional
        –  Default properties that are used for creating WorkSpaces. Defined below.
    """


    directoryId?: str

    directoryIdRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRef

    directoryIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelector

    ipGroupIds?: [str]

    ipGroupIdsRefs?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0]

    ipGroupIdsSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelector

    samlProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSamlPropertiesItems0]

    selfServicePermissions?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSelfServicePermissionsItems0]

    subnetIdRefs?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0]

    subnetIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    workspaceAccessProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceAccessPropertiesItems0]

    workspaceCreationProperties?: [WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0]


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate directoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate directoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0Policy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelector:
    r"""
    Selector for a list of IPGroup in workspaces to populate ipGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderIPGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSamlPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec init provider saml properties items0

    Attributes
    ----------
    relayStateParameterName : str, default is Undefined, optional
        The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.
    status : str, default is Undefined, optional
        Status of SAML 2.0 authentication. Default DISABLED.
    userAccessUrl : str, default is Undefined, optional
        The SAML 2.0 identity provider (IdP) user access URL.
    """


    relayStateParameterName?: str

    status?: str

    userAccessUrl?: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSelfServicePermissionsItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec init provider self service permissions items0

    Attributes
    ----------
    changeComputeType : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.
    increaseVolumeSize : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.
    rebuildWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.
    restartWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can restart their workspace. Default true.
    switchRunningMode : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.
    """


    changeComputeType?: bool

    increaseVolumeSize?: bool

    rebuildWorkspace?: bool

    restartWorkspace?: bool

    switchRunningMode?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0Policy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceAccessPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec init provider workspace access properties items0

    Attributes
    ----------
    deviceTypeAndroid : str, default is Undefined, optional
        –  Indicates whether users can use Android devices to access their WorkSpaces.
    deviceTypeChromeos : str, default is Undefined, optional
        –  Indicates whether users can use Chromebooks to access their WorkSpaces.
    deviceTypeIos : str, default is Undefined, optional
        –  Indicates whether users can use iOS devices to access their WorkSpaces.
    deviceTypeLinux : str, default is Undefined, optional
        –  Indicates whether users can use Linux clients to access their WorkSpaces.
    deviceTypeOsx : str, default is Undefined, optional
        –  Indicates whether users can use macOS clients to access their WorkSpaces.
    deviceTypeWeb : str, default is Undefined, optional
        –  Indicates whether users can access their WorkSpaces through a web browser.
    deviceTypeWindows : str, default is Undefined, optional
        –  Indicates whether users can use Windows clients to access their WorkSpaces.
    deviceTypeZeroclient : str, default is Undefined, optional
        –  Indicates whether users can use zero client devices to access their WorkSpaces.
    """


    deviceTypeAndroid?: str

    deviceTypeChromeos?: str

    deviceTypeIos?: str

    deviceTypeLinux?: str

    deviceTypeOsx?: str

    deviceTypeWeb?: str

    deviceTypeWindows?: str

    deviceTypeZeroclient?: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory spec init provider workspace creation properties items0

    Attributes
    ----------
    customSecurityGroupId : str, default is Undefined, optional
        –  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
    customSecurityGroupIdRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef, default is Undefined, optional
        custom security group Id ref
    customSecurityGroupIdSelector : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector, default is Undefined, optional
        custom security group Id selector
    defaultOu : str, default is Undefined, optional
        –  The default organizational unit (OU) for your WorkSpace directories. Should conform "OU=<value>,DC=<value>,...,DC=<value>" pattern.
    enableInternetAccess : bool, default is Undefined, optional
        –  Indicates whether internet access is enabled for your WorkSpaces.
    enableMaintenanceMode : bool, default is Undefined, optional
        –  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..
    userEnabledAsLocalAdministrator : bool, default is Undefined, optional
        –  Indicates whether users are local administrators of their WorkSpaces.
    """


    customSecurityGroupId?: str

    customSecurityGroupIdRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef

    customSecurityGroupIdSelector?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector

    defaultOu?: str

    enableInternetAccess?: bool

    enableMaintenanceMode?: bool

    userEnabledAsLocalAdministrator?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRef:
    r"""
    Reference to a SecurityGroup in ec2 to populate customSecurityGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelector:
    r"""
    Selector for a SecurityGroup in ec2 to populate customSecurityGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecInitProviderWorkspaceCreationPropertiesItems0CustomSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef

    metadata?: WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata

    name: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema WorkspacesAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatus:
    r"""
    DirectoryStatus defines the observed state of Directory.

    Attributes
    ----------
    atProvider : WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [WorkspacesAwsUpboundIoV1beta1DirectoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProvider

    conditions?: [WorkspacesAwsUpboundIoV1beta1DirectoryStatusConditionsItems0]

    observedGeneration?: int


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProvider:
    r"""
    workspaces aws upbound io v1beta1 directory status at provider

    Attributes
    ----------
    alias : str, default is Undefined, optional
        The directory alias.
    customerUserName : str, default is Undefined, optional
        The user name for the service account.
    directoryId : str, default is Undefined, optional
        The directory identifier for registration in WorkSpaces service.
    directoryName : str, default is Undefined, optional
        The name of the directory.
    directoryType : str, default is Undefined, optional
        The directory type.
    dnsIpAddresses : [str], default is Undefined, optional
        The IP addresses of the DNS servers for the directory.
    iamRoleId : str, default is Undefined, optional
        The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
    id : str, default is Undefined, optional
        The WorkSpaces directory identifier.
    ipGroupIds : [str], default is Undefined, optional
        The identifiers of the IP access control groups associated with the directory.
    registrationCode : str, default is Undefined, optional
        The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
    samlProperties : [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSamlPropertiesItems0], default is Undefined, optional
        –  Configuration of SAML authentication integration. Defined below.
    selfServicePermissions : [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSelfServicePermissionsItems0], default is Undefined, optional
        service capabilities. Defined below.
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets where the directory resides.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    workspaceAccessProperties : [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceAccessPropertiesItems0], default is Undefined, optional
        –  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
    workspaceCreationProperties : [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceCreationPropertiesItems0], default is Undefined, optional
        –  Default properties that are used for creating WorkSpaces. Defined below.
    workspaceSecurityGroupId : str, default is Undefined, optional
        The identifier of the security group that is assigned to new WorkSpaces.
    """


    alias?: str

    customerUserName?: str

    directoryId?: str

    directoryName?: str

    directoryType?: str

    dnsIpAddresses?: [str]

    iamRoleId?: str

    id?: str

    ipGroupIds?: [str]

    registrationCode?: str

    samlProperties?: [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSamlPropertiesItems0]

    selfServicePermissions?: [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSelfServicePermissionsItems0]

    subnetIds?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    workspaceAccessProperties?: [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceAccessPropertiesItems0]

    workspaceCreationProperties?: [WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceCreationPropertiesItems0]

    workspaceSecurityGroupId?: str


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSamlPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory status at provider saml properties items0

    Attributes
    ----------
    relayStateParameterName : str, default is Undefined, optional
        The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.
    status : str, default is Undefined, optional
        Status of SAML 2.0 authentication. Default DISABLED.
    userAccessUrl : str, default is Undefined, optional
        The SAML 2.0 identity provider (IdP) user access URL.
    """


    relayStateParameterName?: str

    status?: str

    userAccessUrl?: str


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderSelfServicePermissionsItems0:
    r"""
    workspaces aws upbound io v1beta1 directory status at provider self service permissions items0

    Attributes
    ----------
    changeComputeType : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.
    increaseVolumeSize : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.
    rebuildWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.
    restartWorkspace : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can restart their workspace. Default true.
    switchRunningMode : bool, default is Undefined, optional
        –  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.
    """


    changeComputeType?: bool

    increaseVolumeSize?: bool

    rebuildWorkspace?: bool

    restartWorkspace?: bool

    switchRunningMode?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceAccessPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory status at provider workspace access properties items0

    Attributes
    ----------
    deviceTypeAndroid : str, default is Undefined, optional
        –  Indicates whether users can use Android devices to access their WorkSpaces.
    deviceTypeChromeos : str, default is Undefined, optional
        –  Indicates whether users can use Chromebooks to access their WorkSpaces.
    deviceTypeIos : str, default is Undefined, optional
        –  Indicates whether users can use iOS devices to access their WorkSpaces.
    deviceTypeLinux : str, default is Undefined, optional
        –  Indicates whether users can use Linux clients to access their WorkSpaces.
    deviceTypeOsx : str, default is Undefined, optional
        –  Indicates whether users can use macOS clients to access their WorkSpaces.
    deviceTypeWeb : str, default is Undefined, optional
        –  Indicates whether users can access their WorkSpaces through a web browser.
    deviceTypeWindows : str, default is Undefined, optional
        –  Indicates whether users can use Windows clients to access their WorkSpaces.
    deviceTypeZeroclient : str, default is Undefined, optional
        –  Indicates whether users can use zero client devices to access their WorkSpaces.
    """


    deviceTypeAndroid?: str

    deviceTypeChromeos?: str

    deviceTypeIos?: str

    deviceTypeLinux?: str

    deviceTypeOsx?: str

    deviceTypeWeb?: str

    deviceTypeWindows?: str

    deviceTypeZeroclient?: str


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusAtProviderWorkspaceCreationPropertiesItems0:
    r"""
    workspaces aws upbound io v1beta1 directory status at provider workspace creation properties items0

    Attributes
    ----------
    customSecurityGroupId : str, default is Undefined, optional
        –  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
    defaultOu : str, default is Undefined, optional
        –  The default organizational unit (OU) for your WorkSpace directories. Should conform "OU=<value>,DC=<value>,...,DC=<value>" pattern.
    enableInternetAccess : bool, default is Undefined, optional
        –  Indicates whether internet access is enabled for your WorkSpaces.
    enableMaintenanceMode : bool, default is Undefined, optional
        –  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..
    userEnabledAsLocalAdministrator : bool, default is Undefined, optional
        –  Indicates whether users are local administrators of their WorkSpaces.
    """


    customSecurityGroupId?: str

    defaultOu?: str

    enableInternetAccess?: bool

    enableMaintenanceMode?: bool

    userEnabledAsLocalAdministrator?: bool


schema WorkspacesAwsUpboundIoV1beta1DirectoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


