"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Selection:
    r"""
    Selection is the Schema for the Selections API. Manages selection conditions for AWS Backup plan resources.

    Attributes
    ----------
    apiVersion : str, default is "backup.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Selection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BackupAwsUpboundIoV1beta1SelectionSpec, default is Undefined, required
        spec
    status : BackupAwsUpboundIoV1beta1SelectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "backup.aws.upbound.io/v1beta1" = "backup.aws.upbound.io/v1beta1"

    kind: "Selection" = "Selection"

    metadata?: v1.ObjectMeta

    spec: BackupAwsUpboundIoV1beta1SelectionSpec

    status?: BackupAwsUpboundIoV1beta1SelectionStatus


schema BackupAwsUpboundIoV1beta1SelectionSpec:
    r"""
    SelectionSpec defines the desired state of Selection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BackupAwsUpboundIoV1beta1SelectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : BackupAwsUpboundIoV1beta1SelectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BackupAwsUpboundIoV1beta1SelectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BackupAwsUpboundIoV1beta1SelectionSpecForProvider

    initProvider?: BackupAwsUpboundIoV1beta1SelectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRef

    publishConnectionDetailsTo?: BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BackupAwsUpboundIoV1beta1SelectionSpecWriteConnectionSecretToRef


schema BackupAwsUpboundIoV1beta1SelectionSpecForProvider:
    r"""
    backup aws upbound io v1beta1 selection spec for provider

    Attributes
    ----------
    condition : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0], default is Undefined, optional
        A list of conditions that you define to assign resources to your backup plans using tags.
    iamRoleArn : str, default is Undefined, optional
        The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
    iamRoleArnRef : BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    name : str, default is Undefined, optional
        The display name of a resource selection document.
    notResources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
    notResourcesRefs : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0], default is Undefined, optional
        References to Instance in rds to populate notResources.
    notResourcesSelector : BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelector, default is Undefined, optional
        not resources selector
    planId : str, default is Undefined, optional
        The backup plan ID to be associated with the selection of resources.
    planIdRef : BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRef, default is Undefined, optional
        plan Id ref
    planIdSelector : BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelector, default is Undefined, optional
        plan Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
    resourcesRefs : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0], default is Undefined, optional
        References to Instance in rds to populate resources.
    resourcesSelector : BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelector, default is Undefined, optional
        resources selector
    selectionTag : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderSelectionTagItems0], default is Undefined, optional
        Tag-based conditions used to specify a set of resources to assign to a backup plan.
    """


    condition?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0]

    iamRoleArn?: str

    iamRoleArnRef?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRef

    iamRoleArnSelector?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelector

    name?: str

    notResources?: [str]

    notResourcesRefs?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0]

    notResourcesSelector?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelector

    planId?: str

    planIdRef?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRef

    planIdSelector?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelector

    region: str

    resources?: [str]

    resourcesRefs?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0]

    resourcesSelector?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelector

    selectionTag?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderSelectionTagItems0]


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider condition items0

    Attributes
    ----------
    stringEquals : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringEqualsItems0], default is Undefined, optional
        string equals
    stringLike : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringLikeItems0], default is Undefined, optional
        string like
    stringNotEquals : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotEqualsItems0], default is Undefined, optional
        string not equals
    stringNotLike : [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotLikeItems0], default is Undefined, optional
        string not like
    """


    stringEquals?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringEqualsItems0]

    stringLike?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringLikeItems0]

    stringNotEquals?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotEqualsItems0]

    stringNotLike?: [BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotLikeItems0]


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider condition items0 string equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider condition items0 string like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider condition items0 string not equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderConditionItems0StringNotLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider condition items0 string not like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0Policy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelector:
    r"""
    Selector for a list of Instance in rds to populate notResources.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderNotResourcesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRef:
    r"""
    Reference to a Plan in backup to populate planId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelector:
    r"""
    Selector for a Plan in backup to populate planId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderPlanIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0Policy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelector:
    r"""
    Selector for a list of Instance in rds to populate resources.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderResourcesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecForProviderSelectionTagItems0:
    r"""
    backup aws upbound io v1beta1 selection spec for provider selection tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    $type : str, default is Undefined, optional
        An operation, such as StringEquals, that is applied to a key-value pair used to filter resources in a selection.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    $type?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    condition : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0], default is Undefined, optional
        A list of conditions that you define to assign resources to your backup plans using tags.
    iamRoleArn : str, default is Undefined, optional
        The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
    iamRoleArnRef : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    name : str, default is Undefined, optional
        The display name of a resource selection document.
    notResources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
    notResourcesRefs : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0], default is Undefined, optional
        References to Instance in rds to populate notResources.
    notResourcesSelector : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelector, default is Undefined, optional
        not resources selector
    planId : str, default is Undefined, optional
        The backup plan ID to be associated with the selection of resources.
    planIdRef : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRef, default is Undefined, optional
        plan Id ref
    planIdSelector : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelector, default is Undefined, optional
        plan Id selector
    resources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
    resourcesRefs : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0], default is Undefined, optional
        References to Instance in rds to populate resources.
    resourcesSelector : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelector, default is Undefined, optional
        resources selector
    selectionTag : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderSelectionTagItems0], default is Undefined, optional
        Tag-based conditions used to specify a set of resources to assign to a backup plan.
    """


    condition?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0]

    iamRoleArn?: str

    iamRoleArnRef?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRef

    iamRoleArnSelector?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelector

    name?: str

    notResources?: [str]

    notResourcesRefs?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0]

    notResourcesSelector?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelector

    planId?: str

    planIdRef?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRef

    planIdSelector?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelector

    resources?: [str]

    resourcesRefs?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0]

    resourcesSelector?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelector

    selectionTag?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderSelectionTagItems0]


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider condition items0

    Attributes
    ----------
    stringEquals : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringEqualsItems0], default is Undefined, optional
        string equals
    stringLike : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringLikeItems0], default is Undefined, optional
        string like
    stringNotEquals : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotEqualsItems0], default is Undefined, optional
        string not equals
    stringNotLike : [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotLikeItems0], default is Undefined, optional
        string not like
    """


    stringEquals?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringEqualsItems0]

    stringLike?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringLikeItems0]

    stringNotEquals?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotEqualsItems0]

    stringNotLike?: [BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotLikeItems0]


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider condition items0 string equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider condition items0 string like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider condition items0 string not equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderConditionItems0StringNotLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider condition items0 string not like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0Policy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelector:
    r"""
    Selector for a list of Instance in rds to populate notResources.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderNotResourcesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRef:
    r"""
    Reference to a Plan in backup to populate planId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelector:
    r"""
    Selector for a Plan in backup to populate planId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderPlanIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0Policy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelector:
    r"""
    Selector for a list of Instance in rds to populate resources.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelectorPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderResourcesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecInitProviderSelectionTagItems0:
    r"""
    backup aws upbound io v1beta1 selection spec init provider selection tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    $type : str, default is Undefined, optional
        An operation, such as StringEquals, that is applied to a key-value pair used to filter resources in a selection.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    $type?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRef

    metadata?: BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToMetadata

    name: str


schema BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRefPolicy


schema BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1SelectionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BackupAwsUpboundIoV1beta1SelectionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BackupAwsUpboundIoV1beta1SelectionStatus:
    r"""
    SelectionStatus defines the observed state of Selection.

    Attributes
    ----------
    atProvider : BackupAwsUpboundIoV1beta1SelectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BackupAwsUpboundIoV1beta1SelectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BackupAwsUpboundIoV1beta1SelectionStatusAtProvider

    conditions?: [BackupAwsUpboundIoV1beta1SelectionStatusConditionsItems0]

    observedGeneration?: int


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProvider:
    r"""
    backup aws upbound io v1beta1 selection status at provider

    Attributes
    ----------
    condition : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0], default is Undefined, optional
        A list of conditions that you define to assign resources to your backup plans using tags.
    iamRoleArn : str, default is Undefined, optional
        The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the AWS Backup Developer Guide for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
    id : str, default is Undefined, optional
        Backup Selection identifier
    name : str, default is Undefined, optional
        The display name of a resource selection document.
    notResources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
    planId : str, default is Undefined, optional
        The backup plan ID to be associated with the selection of resources.
    resources : [str], default is Undefined, optional
        An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
    selectionTag : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderSelectionTagItems0], default is Undefined, optional
        Tag-based conditions used to specify a set of resources to assign to a backup plan.
    """


    condition?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0]

    iamRoleArn?: str

    id?: str

    name?: str

    notResources?: [str]

    planId?: str

    resources?: [str]

    selectionTag?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderSelectionTagItems0]


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider condition items0

    Attributes
    ----------
    stringEquals : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringEqualsItems0], default is Undefined, optional
        string equals
    stringLike : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringLikeItems0], default is Undefined, optional
        string like
    stringNotEquals : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotEqualsItems0], default is Undefined, optional
        string not equals
    stringNotLike : [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotLikeItems0], default is Undefined, optional
        string not like
    """


    stringEquals?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringEqualsItems0]

    stringLike?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringLikeItems0]

    stringNotEquals?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotEqualsItems0]

    stringNotLike?: [BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotLikeItems0]


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider condition items0 string equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider condition items0 string like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotEqualsItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider condition items0 string not equals items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderConditionItems0StringNotLikeItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider condition items0 string not like items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionStatusAtProviderSelectionTagItems0:
    r"""
    backup aws upbound io v1beta1 selection status at provider selection tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key in a key-value pair.
    $type : str, default is Undefined, optional
        An operation, such as StringEquals, that is applied to a key-value pair used to filter resources in a selection.
    value : str, default is Undefined, optional
        The value in a key-value pair.
    """


    key?: str

    $type?: str

    value?: str


schema BackupAwsUpboundIoV1beta1SelectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


