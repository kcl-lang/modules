"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema HealthCheck:
    r"""
    HealthCheck is the Schema for the HealthChecks API. Provides a Route53 health check.

    Attributes
    ----------
    apiVersion : str, default is "route53.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HealthCheck", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53AwsUpboundIoV1beta1HealthCheckSpec, default is Undefined, required
        spec
    status : Route53AwsUpboundIoV1beta1HealthCheckStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53.aws.upbound.io/v1beta1" = "route53.aws.upbound.io/v1beta1"

    kind: "HealthCheck" = "HealthCheck"

    metadata?: v1.ObjectMeta

    spec: Route53AwsUpboundIoV1beta1HealthCheckSpec

    status?: Route53AwsUpboundIoV1beta1HealthCheckStatus


schema Route53AwsUpboundIoV1beta1HealthCheckSpec:
    r"""
    HealthCheckSpec defines the desired state of HealthCheck

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Route53AwsUpboundIoV1beta1HealthCheckSpecForProvider, default is Undefined, required
        for provider
    initProvider : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53AwsUpboundIoV1beta1HealthCheckSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53AwsUpboundIoV1beta1HealthCheckSpecForProvider

    initProvider?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRef

    publishConnectionDetailsTo?: Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53AwsUpboundIoV1beta1HealthCheckSpecWriteConnectionSecretToRef


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProvider:
    r"""
    route53 aws upbound io v1beta1 health check spec for provider

    Attributes
    ----------
    childHealthThreshold : float, default is Undefined, optional
        The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
    childHealthchecks : [str], default is Undefined, optional
        For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
    childHealthchecksRefs : [Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0], default is Undefined, optional
        References to HealthCheck in route53 to populate childHealthchecks.
    childHealthchecksSelector : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelector, default is Undefined, optional
        child healthchecks selector
    cloudwatchAlarmName : str, default is Undefined, optional
        The name of the CloudWatch alarm.
    cloudwatchAlarmNameRef : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRef, default is Undefined, optional
        cloudwatch alarm name ref
    cloudwatchAlarmNameSelector : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelector, default is Undefined, optional
        cloudwatch alarm name selector
    cloudwatchAlarmRegion : str, default is Undefined, optional
        The CloudWatchRegion that the CloudWatch alarm was created in.
    disabled : bool, default is Undefined, optional
        A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
    enableSni : bool, default is Undefined, optional
        A boolean value that indicates whether Route53 should send the fqdn to the endpoint when performing the health check. This defaults to AWS' defaults: when the type is "HTTPS" enable_sni defaults to true, when type is anything else enable_sni defaults to false.
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks that an endpoint must pass or fail.
    fqdn : str, default is Undefined, optional
        The fully qualified domain name of the endpoint to be checked. If a value is set for ip_address, the value set for fqdn will be passed in the Host header.
    insufficientDataHealthStatus : str, default is Undefined, optional
        The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are Healthy , Unhealthy and LastKnownStatus.
    invertHealthcheck : bool, default is Undefined, optional
        A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint to be checked.
    measureLatency : bool, default is Undefined, optional
        A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
    port : float, default is Undefined, optional
        The port of the endpoint to be checked.
    referenceName : str, default is Undefined, optional
        This is a reference name used in Caller Reference
        (helpful for identifying single health_check set amongst others)
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    regions : [str], default is Undefined, optional
        A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
    requestInterval : float, default is Undefined, optional
        The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
    resourcePath : str, default is Undefined, optional
        The path that you want Amazon Route 53 to request when performing health checks.
    routingControlArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is RECOVERY_CONTROL
    searchString : str, default is Undefined, optional
        String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with HTTP_STR_MATCH and HTTPS_STR_MATCH.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The protocol to use when performing health checks. Valid values are HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, TCP, CALCULATED, CLOUDWATCH_METRIC and RECOVERY_CONTROL.
    """


    childHealthThreshold?: float

    childHealthchecks?: [str]

    childHealthchecksRefs?: [Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0]

    childHealthchecksSelector?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelector

    cloudwatchAlarmName?: str

    cloudwatchAlarmNameRef?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRef

    cloudwatchAlarmNameSelector?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelector

    cloudwatchAlarmRegion?: str

    disabled?: bool

    enableSni?: bool

    failureThreshold?: float

    fqdn?: str

    insufficientDataHealthStatus?: str

    invertHealthcheck?: bool

    ipAddress?: str

    measureLatency?: bool

    port?: float

    referenceName?: str

    region: str

    regions?: [str]

    requestInterval?: float

    resourcePath?: str

    routingControlArn?: str

    searchString?: str

    tags?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0Policy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelector:
    r"""
    Selector for a list of HealthCheck in route53 to populate childHealthchecks.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelectorPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderChildHealthchecksSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRef:
    r"""
    Reference to a MetricAlarm in cloudwatch to populate cloudwatchAlarmName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRefPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelector:
    r"""
    Selector for a MetricAlarm in cloudwatch to populate cloudwatchAlarmName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelectorPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecForProviderCloudwatchAlarmNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    childHealthThreshold : float, default is Undefined, optional
        The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
    childHealthchecks : [str], default is Undefined, optional
        For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
    childHealthchecksRefs : [Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0], default is Undefined, optional
        References to HealthCheck in route53 to populate childHealthchecks.
    childHealthchecksSelector : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelector, default is Undefined, optional
        child healthchecks selector
    cloudwatchAlarmName : str, default is Undefined, optional
        The name of the CloudWatch alarm.
    cloudwatchAlarmNameRef : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRef, default is Undefined, optional
        cloudwatch alarm name ref
    cloudwatchAlarmNameSelector : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelector, default is Undefined, optional
        cloudwatch alarm name selector
    cloudwatchAlarmRegion : str, default is Undefined, optional
        The CloudWatchRegion that the CloudWatch alarm was created in.
    disabled : bool, default is Undefined, optional
        A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
    enableSni : bool, default is Undefined, optional
        A boolean value that indicates whether Route53 should send the fqdn to the endpoint when performing the health check. This defaults to AWS' defaults: when the type is "HTTPS" enable_sni defaults to true, when type is anything else enable_sni defaults to false.
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks that an endpoint must pass or fail.
    fqdn : str, default is Undefined, optional
        The fully qualified domain name of the endpoint to be checked. If a value is set for ip_address, the value set for fqdn will be passed in the Host header.
    insufficientDataHealthStatus : str, default is Undefined, optional
        The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are Healthy , Unhealthy and LastKnownStatus.
    invertHealthcheck : bool, default is Undefined, optional
        A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint to be checked.
    measureLatency : bool, default is Undefined, optional
        A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
    port : float, default is Undefined, optional
        The port of the endpoint to be checked.
    referenceName : str, default is Undefined, optional
        This is a reference name used in Caller Reference
        (helpful for identifying single health_check set amongst others)
    regions : [str], default is Undefined, optional
        A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
    requestInterval : float, default is Undefined, optional
        The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
    resourcePath : str, default is Undefined, optional
        The path that you want Amazon Route 53 to request when performing health checks.
    routingControlArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is RECOVERY_CONTROL
    searchString : str, default is Undefined, optional
        String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with HTTP_STR_MATCH and HTTPS_STR_MATCH.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The protocol to use when performing health checks. Valid values are HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, TCP, CALCULATED, CLOUDWATCH_METRIC and RECOVERY_CONTROL.
    """


    childHealthThreshold?: float

    childHealthchecks?: [str]

    childHealthchecksRefs?: [Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0]

    childHealthchecksSelector?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelector

    cloudwatchAlarmName?: str

    cloudwatchAlarmNameRef?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRef

    cloudwatchAlarmNameSelector?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelector

    cloudwatchAlarmRegion?: str

    disabled?: bool

    enableSni?: bool

    failureThreshold?: float

    fqdn?: str

    insufficientDataHealthStatus?: str

    invertHealthcheck?: bool

    ipAddress?: str

    measureLatency?: bool

    port?: float

    referenceName?: str

    regions?: [str]

    requestInterval?: float

    resourcePath?: str

    routingControlArn?: str

    searchString?: str

    tags?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0Policy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelector:
    r"""
    Selector for a list of HealthCheck in route53 to populate childHealthchecks.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelectorPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderChildHealthchecksSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRef:
    r"""
    Reference to a MetricAlarm in cloudwatch to populate cloudwatchAlarmName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRefPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelector:
    r"""
    Selector for a MetricAlarm in cloudwatch to populate cloudwatchAlarmName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelectorPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecInitProviderCloudwatchAlarmNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRefPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1HealthCheckSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1HealthCheckSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53AwsUpboundIoV1beta1HealthCheckStatus:
    r"""
    HealthCheckStatus defines the observed state of HealthCheck.

    Attributes
    ----------
    atProvider : Route53AwsUpboundIoV1beta1HealthCheckStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53AwsUpboundIoV1beta1HealthCheckStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Route53AwsUpboundIoV1beta1HealthCheckStatusAtProvider

    conditions?: [Route53AwsUpboundIoV1beta1HealthCheckStatusConditionsItems0]

    observedGeneration?: int


schema Route53AwsUpboundIoV1beta1HealthCheckStatusAtProvider:
    r"""
    route53 aws upbound io v1beta1 health check status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Health Check.
    childHealthThreshold : float, default is Undefined, optional
        The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive
    childHealthchecks : [str], default is Undefined, optional
        For a specified parent health check, a list of HealthCheckId values for the associated child health checks.
    cloudwatchAlarmName : str, default is Undefined, optional
        The name of the CloudWatch alarm.
    cloudwatchAlarmRegion : str, default is Undefined, optional
        The CloudWatchRegion that the CloudWatch alarm was created in.
    disabled : bool, default is Undefined, optional
        A boolean value that stops Route 53 from performing health checks. When set to true, Route 53 will do the following depending on the type of health check:
    enableSni : bool, default is Undefined, optional
        A boolean value that indicates whether Route53 should send the fqdn to the endpoint when performing the health check. This defaults to AWS' defaults: when the type is "HTTPS" enable_sni defaults to true, when type is anything else enable_sni defaults to false.
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks that an endpoint must pass or fail.
    fqdn : str, default is Undefined, optional
        The fully qualified domain name of the endpoint to be checked. If a value is set for ip_address, the value set for fqdn will be passed in the Host header.
    id : str, default is Undefined, optional
        The id of the health check
    insufficientDataHealthStatus : str, default is Undefined, optional
        The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are Healthy , Unhealthy and LastKnownStatus.
    invertHealthcheck : bool, default is Undefined, optional
        A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint to be checked.
    measureLatency : bool, default is Undefined, optional
        A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.
    port : float, default is Undefined, optional
        The port of the endpoint to be checked.
    referenceName : str, default is Undefined, optional
        This is a reference name used in Caller Reference
        (helpful for identifying single health_check set amongst others)
    regions : [str], default is Undefined, optional
        A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.
    requestInterval : float, default is Undefined, optional
        The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.
    resourcePath : str, default is Undefined, optional
        The path that you want Amazon Route 53 to request when performing health checks.
    routingControlArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control. This is used when health check type is RECOVERY_CONTROL
    searchString : str, default is Undefined, optional
        String searched in the first 5120 bytes of the response body for check to be considered healthy. Only valid with HTTP_STR_MATCH and HTTPS_STR_MATCH.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        The protocol to use when performing health checks. Valid values are HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, TCP, CALCULATED, CLOUDWATCH_METRIC and RECOVERY_CONTROL.
    """


    arn?: str

    childHealthThreshold?: float

    childHealthchecks?: [str]

    cloudwatchAlarmName?: str

    cloudwatchAlarmRegion?: str

    disabled?: bool

    enableSni?: bool

    failureThreshold?: float

    fqdn?: str

    id?: str

    insufficientDataHealthStatus?: str

    invertHealthcheck?: bool

    ipAddress?: str

    measureLatency?: bool

    port?: float

    referenceName?: str

    regions?: [str]

    requestInterval?: float

    resourcePath?: str

    routingControlArn?: str

    searchString?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1HealthCheckStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


