"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualNode:
    r"""
    VirtualNode is the Schema for the VirtualNodes API. Provides an AWS App Mesh virtual node resource.

    Attributes
    ----------
    apiVersion : str, default is "appmesh.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualNode", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppmeshAwsUpboundIoV1beta1VirtualNodeSpec, default is Undefined, required
        spec
    status : AppmeshAwsUpboundIoV1beta1VirtualNodeStatus, default is Undefined, optional
        status
    """


    apiVersion: "appmesh.aws.upbound.io/v1beta1" = "appmesh.aws.upbound.io/v1beta1"

    kind: "VirtualNode" = "VirtualNode"

    metadata?: v1.ObjectMeta

    spec: AppmeshAwsUpboundIoV1beta1VirtualNodeSpec

    status?: AppmeshAwsUpboundIoV1beta1VirtualNodeStatus


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpec:
    r"""
    VirtualNodeSpec defines the desired state of VirtualNode

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProvider

    initProvider?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRef

    publishConnectionDetailsTo?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecWriteConnectionSecretToRef


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProvider:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    spec : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0], default is Undefined, optional
        Virtual node specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelector

    meshOwner?: str

    name?: str

    region: str

    spec?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0]

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0], default is Undefined, optional
        Defaults for backends.
    listener : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0], default is Undefined, optional
        Inbound and outbound access logging information for the virtual node.
    serviceDiscovery : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0], default is Undefined, optional
        Service discovery information for the virtual node.
    """


    backend?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0]

    backendDefaults?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0]

    listener?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0]

    logging?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0]

    serviceDiscovery?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0

    Attributes
    ----------
    virtualService : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0], default is Undefined, optional
        Virtual service to use as a backend for a virtual node.
    """


    virtualService?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0]

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0

    Attributes
    ----------
    connectionPool : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0], default is Undefined, optional
        Connection pool information for the listener.
    healthCheck : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0HealthCheckItems0], default is Undefined, optional
        Health check information for the listener.
    outlierDetection : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0], default is Undefined, optional
        Outlier detection information for the listener.
    portMapping : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0PortMappingItems0], default is Undefined, optional
        Port mapping information for the listener.
    timeout : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0], default is Undefined, optional
        Timeouts for different protocols.
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    connectionPool?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0]

    healthCheck?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0HealthCheckItems0]

    outlierDetection?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0]

    portMapping?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0PortMappingItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0]

    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 connection pool items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 connection pool items0 grpc items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 connection pool items0 HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 connection pool items0 http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 connection pool items0 TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0HealthCheckItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 health check items0

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 outlier detection items0

    Attributes
    ----------
    baseEjectionDuration : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0], default is Undefined, optional
        Base amount of time for which a host is ejected.
    interval : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0]

    interval?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 outlier detection items0 base ejection duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 outlier detection items0 interval items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0PortMappingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 port mapping items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0]

    mode?: str

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 certificate items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 certificate items0 acm items0

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 grpc items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 grpc items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 grpc items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 HTTP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 HTTP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 HTTP items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 http2 items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 http2 items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 http2 items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 TCP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 listener items0 timeout items0 TCP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 logging items0

    Attributes
    ----------
    accessLog : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0], default is Undefined, optional
        Access log configuration for a virtual node.
    """


    accessLog?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 logging items0 access log items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0], default is Undefined, optional
        Local file certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 logging items0 access log items0 file items0

    Attributes
    ----------
    format : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0], default is Undefined, optional
        The specified format for the logs.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0]

    path?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 logging items0 access log items0 file items0 format items0

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 logging items0 access log items0 file items0 format items0 JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 service discovery items0

    Attributes
    ----------
    awsCloudMap : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0], default is Undefined, optional
        Any AWS Cloud Map information for the virtual node.
    dns : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0DNSItems0], default is Undefined, optional
        DNS service name for the virtual node.
    """


    awsCloudMap?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0]

    dns?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0DNSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 service discovery items0 aws cloud map items0

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    namespaceNameRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef, default is Undefined, optional
        namespace name ref
    namespaceNameSelector : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector, default is Undefined, optional
        namespace name selector
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    namespaceNameRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef

    namespaceNameSelector?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef:
    r"""
    Reference to a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector:
    r"""
    Selector for a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecForProviderSpecItems0ServiceDiscoveryItems0DNSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec for provider spec items0 service discovery items0 DNS items0

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    spec : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0], default is Undefined, optional
        Virtual node specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelector

    meshOwner?: str

    name?: str

    spec?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0]

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0], default is Undefined, optional
        Defaults for backends.
    listener : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0], default is Undefined, optional
        Inbound and outbound access logging information for the virtual node.
    serviceDiscovery : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0], default is Undefined, optional
        Service discovery information for the virtual node.
    """


    backend?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0]

    backendDefaults?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0]

    listener?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0]

    logging?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0]

    serviceDiscovery?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0

    Attributes
    ----------
    virtualService : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0], default is Undefined, optional
        Virtual service to use as a backend for a virtual node.
    """


    virtualService?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0]

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0

    Attributes
    ----------
    connectionPool : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0], default is Undefined, optional
        Connection pool information for the listener.
    healthCheck : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0HealthCheckItems0], default is Undefined, optional
        Health check information for the listener.
    outlierDetection : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0], default is Undefined, optional
        Outlier detection information for the listener.
    portMapping : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0PortMappingItems0], default is Undefined, optional
        Port mapping information for the listener.
    timeout : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0], default is Undefined, optional
        Timeouts for different protocols.
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    connectionPool?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0]

    healthCheck?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0HealthCheckItems0]

    outlierDetection?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0]

    portMapping?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0PortMappingItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0]

    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 connection pool items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 connection pool items0 grpc items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 connection pool items0 HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 connection pool items0 http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 connection pool items0 TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0HealthCheckItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 health check items0

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 outlier detection items0

    Attributes
    ----------
    baseEjectionDuration : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0], default is Undefined, optional
        Base amount of time for which a host is ejected.
    interval : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0]

    interval?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 outlier detection items0 base ejection duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 outlier detection items0 interval items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0PortMappingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 port mapping items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0]

    mode?: str

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 certificate items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 certificate items0 acm items0

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 grpc items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 grpc items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 grpc items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 HTTP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 HTTP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 HTTP items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 http2 items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 http2 items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 http2 items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 TCP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 listener items0 timeout items0 TCP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 logging items0

    Attributes
    ----------
    accessLog : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0], default is Undefined, optional
        Access log configuration for a virtual node.
    """


    accessLog?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 logging items0 access log items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0], default is Undefined, optional
        Local file certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 logging items0 access log items0 file items0

    Attributes
    ----------
    format : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0], default is Undefined, optional
        The specified format for the logs.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0]

    path?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 logging items0 access log items0 file items0 format items0

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 logging items0 access log items0 file items0 format items0 JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 service discovery items0

    Attributes
    ----------
    awsCloudMap : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0], default is Undefined, optional
        Any AWS Cloud Map information for the virtual node.
    dns : [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0DNSItems0], default is Undefined, optional
        DNS service name for the virtual node.
    """


    awsCloudMap?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0]

    dns?: [AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0DNSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 service discovery items0 aws cloud map items0

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    namespaceNameRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef, default is Undefined, optional
        namespace name ref
    namespaceNameSelector : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector, default is Undefined, optional
        namespace name selector
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    namespaceNameRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef

    namespaceNameSelector?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRef:
    r"""
    Reference to a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelector:
    r"""
    Selector for a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0NamespaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecInitProviderSpecItems0ServiceDiscoveryItems0DNSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node spec init provider spec items0 service discovery items0 DNS items0

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRef

    metadata?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToMetadata

    name: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatus:
    r"""
    VirtualNodeStatus defines the observed state of VirtualNode.

    Attributes
    ----------
    atProvider : AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProvider

    conditions?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusConditionsItems0]

    observedGeneration?: int


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProvider:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the virtual node.
    createdDate : str, default is Undefined, optional
        Creation date of the virtual node.
    id : str, default is Undefined, optional
        ID of the virtual node.
    lastUpdatedDate : str, default is Undefined, optional
        Last update date of the virtual node.
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    resourceOwner : str, default is Undefined, optional
        Resource owner's AWS account ID.
    spec : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0], default is Undefined, optional
        Virtual node specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    createdDate?: str

    id?: str

    lastUpdatedDate?: str

    meshName?: str

    meshOwner?: str

    name?: str

    resourceOwner?: str

    spec?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0], default is Undefined, optional
        Defaults for backends.
    listener : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0], default is Undefined, optional
        Inbound and outbound access logging information for the virtual node.
    serviceDiscovery : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0], default is Undefined, optional
        Service discovery information for the virtual node.
    """


    backend?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0]

    backendDefaults?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0]

    listener?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0]

    logging?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0]

    serviceDiscovery?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendDefaultsItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend defaults items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0

    Attributes
    ----------
    virtualService : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0], default is Undefined, optional
        Virtual service to use as a backend for a virtual node.
    """


    virtualService?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0

    Attributes
    ----------
    clientPolicy : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0], default is Undefined, optional
        Client policy for the backend.
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0]

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0

    Attributes
    ----------
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0]

    enforce?: bool

    ports?: [float]

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 acm items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0BackendItems0VirtualServiceItems0ClientPolicyItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 backend items0 virtual service items0 client policy items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0

    Attributes
    ----------
    connectionPool : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0], default is Undefined, optional
        Connection pool information for the listener.
    healthCheck : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0HealthCheckItems0], default is Undefined, optional
        Health check information for the listener.
    outlierDetection : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0], default is Undefined, optional
        Outlier detection information for the listener.
    portMapping : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0PortMappingItems0], default is Undefined, optional
        Port mapping information for the listener.
    timeout : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0], default is Undefined, optional
        Timeouts for different protocols.
    tls : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0], default is Undefined, optional
        Transport Layer Security (TLS) client policy.
    """


    connectionPool?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0]

    healthCheck?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0HealthCheckItems0]

    outlierDetection?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0]

    portMapping?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0PortMappingItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0]

    tls?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 connection pool items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 connection pool items0 grpc items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 connection pool items0 HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 connection pool items0 http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0ConnectionPoolItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 connection pool items0 TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0HealthCheckItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 health check items0

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 outlier detection items0

    Attributes
    ----------
    baseEjectionDuration : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0], default is Undefined, optional
        Base amount of time for which a host is ejected.
    interval : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0]

    interval?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0BaseEjectionDurationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 outlier detection items0 base ejection duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0OutlierDetectionItems0IntervalItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 outlier detection items0 interval items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0PortMappingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 port mapping items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0

    Attributes
    ----------
    certificate : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0], default is Undefined, optional
        Virtual node's client's Transport Layer Security (TLS) certificate.
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0], default is Undefined, optional
        TLS validation context.
    """


    certificate?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0]

    mode?: str

    validation?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 certificate items0

    Attributes
    ----------
    acm : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0], default is Undefined, optional
        TLS validation context trust for an AWS Certificate Manager (ACM) certificate.
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    acm?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0]

    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0AcmItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 certificate items0 acm items0

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 certificate items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0CertificateItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 certificate items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0

    Attributes
    ----------
    subjectAlternativeNames : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        SANs for a TLS validation context.
    trust : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0], default is Undefined, optional
        TLS validation context trust.
    """


    subjectAlternativeNames?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0]

    trust?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0], default is Undefined, optional
        Criteria for determining a SAN's match.
    """


    match?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0SubjectAlternativeNamesItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0 subject alternative names items0 match items0

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0 trust items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0], default is Undefined, optional
        Local file certificate.
    sds : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0], default is Undefined, optional
        A Secret Discovery Service certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0]

    sds?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0 trust items0 file items0

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TLSItems0ValidationItems0TrustItems0SdsItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 TLS items0 validation items0 trust items0 sds items0

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0

    Attributes
    ----------
    grpc : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0], default is Undefined, optional
        Connection pool information for gRPC listeners.
    http : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0]

    http?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 grpc items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 grpc items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0GrpcItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 grpc items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 HTTP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 HTTP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0HTTPItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 HTTP items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 http2 items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 http2 items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0Http2Items0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 http2 items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 TCP items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ListenerItems0TimeoutItems0TCPItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 listener items0 timeout items0 TCP items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 logging items0

    Attributes
    ----------
    accessLog : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0], default is Undefined, optional
        Access log configuration for a virtual node.
    """


    accessLog?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 logging items0 access log items0

    Attributes
    ----------
    file : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0], default is Undefined, optional
        Local file certificate.
    """


    file?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 logging items0 access log items0 file items0

    Attributes
    ----------
    format : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0], default is Undefined, optional
        The specified format for the logs.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0]

    path?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 logging items0 access log items0 file items0 format items0

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0LoggingItems0AccessLogItems0FileItems0FormatItems0JSONItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 logging items0 access log items0 file items0 format items0 JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 service discovery items0

    Attributes
    ----------
    awsCloudMap : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0], default is Undefined, optional
        Any AWS Cloud Map information for the virtual node.
    dns : [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0DNSItems0], default is Undefined, optional
        DNS service name for the virtual node.
    """


    awsCloudMap?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0]

    dns?: [AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0DNSItems0]


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0AwsCloudMapItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 service discovery items0 aws cloud map items0

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusAtProviderSpecItems0ServiceDiscoveryItems0DNSItems0:
    r"""
    appmesh aws upbound io v1beta1 virtual node status at provider spec items0 service discovery items0 DNS items0

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta1VirtualNodeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


