"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FunctionURL:
    r"""
    FunctionURL is the Schema for the FunctionURLs API. Provides a Lambda function URL resource.

    Attributes
    ----------
    apiVersion : str, default is "lambda.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FunctionURL", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaAwsUpboundIoV1beta1FunctionURLSpec, default is Undefined, required
        spec
    status : LambdaAwsUpboundIoV1beta1FunctionURLStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.aws.upbound.io/v1beta1" = "lambda.aws.upbound.io/v1beta1"

    kind: "FunctionURL" = "FunctionURL"

    metadata?: v1.ObjectMeta

    spec: LambdaAwsUpboundIoV1beta1FunctionURLSpec

    status?: LambdaAwsUpboundIoV1beta1FunctionURLStatus


schema LambdaAwsUpboundIoV1beta1FunctionURLSpec:
    r"""
    FunctionURLSpec defines the desired state of FunctionURL

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LambdaAwsUpboundIoV1beta1FunctionURLSpecForProvider, default is Undefined, required
        for provider
    initProvider : LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LambdaAwsUpboundIoV1beta1FunctionURLSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LambdaAwsUpboundIoV1beta1FunctionURLSpecForProvider

    initProvider?: LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRef

    publishConnectionDetailsTo?: LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LambdaAwsUpboundIoV1beta1FunctionURLSpecWriteConnectionSecretToRef


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProvider:
    r"""
    lambda aws upbound io v1beta1 function URL spec for provider

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        The type of authentication that the function URL uses. Set to "AWS_IAM" to restrict access to authenticated IAM users only. Set to "NONE" to bypass IAM authentication and create a public endpoint. See the AWS documentation for more details.
    cors : [LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderCorsItems0], default is Undefined, optional
        The cross-origin resource sharing (CORS) settings for the function URL. Documented below.
    functionName : str, default is Undefined, optional
        The name (or ARN) of the Lambda function.
    functionNameRef : LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRef, default is Undefined, optional
        function name ref
    functionNameSelector : LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelector, default is Undefined, optional
        function name selector
    invokeMode : str, default is Undefined, optional
        Determines how the Lambda function responds to an invocation. Valid values are BUFFERED (default) and RESPONSE_STREAM. See more in Configuring a Lambda function to stream responses.
    qualifier : str, default is Undefined, optional
        The alias name or "$LATEST".
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    authorizationType?: str

    cors?: [LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderCorsItems0]

    functionName?: str

    functionNameRef?: LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRef

    functionNameSelector?: LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelector

    invokeMode?: str

    qualifier?: str

    region: str


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderCorsItems0:
    r"""
    lambda aws upbound io v1beta1 function URL spec for provider cors items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether to allow cookies or other credentials in requests to the function URL. The default is false.
    allowHeaders : [str], default is Undefined, optional
        The HTTP headers that origins can include in requests to the function URL. For example: ["date", "keep-alive", "x-custom-header"].
    allowMethods : [str], default is Undefined, optional
        The HTTP methods that are allowed when calling the function URL. For example: ["GET", "POST", "DELETE"], or the wildcard character (["*"]).
    allowOrigins : [str], default is Undefined, optional
        The origins that can access the function URL. You can list any number of specific origins (or the wildcard character ("*")), separated by a comma. For example: ["https://www.example.com", "http://localhost:60905"].
    exposeHeaders : [str], default is Undefined, optional
        The HTTP headers in your function response that you want to expose to origins that call the function URL.
    maxAge : float, default is Undefined, optional
        The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to 0, which means that the browser doesn't cache results. The maximum value is 86400.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRef:
    r"""
    Reference to a Function in lambda to populate functionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRefPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelector:
    r"""
    Selector for a Function in lambda to populate functionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelectorPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecForProviderFunctionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        The type of authentication that the function URL uses. Set to "AWS_IAM" to restrict access to authenticated IAM users only. Set to "NONE" to bypass IAM authentication and create a public endpoint. See the AWS documentation for more details.
    cors : [LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderCorsItems0], default is Undefined, optional
        The cross-origin resource sharing (CORS) settings for the function URL. Documented below.
    functionName : str, default is Undefined, optional
        The name (or ARN) of the Lambda function.
    functionNameRef : LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRef, default is Undefined, optional
        function name ref
    functionNameSelector : LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelector, default is Undefined, optional
        function name selector
    invokeMode : str, default is Undefined, optional
        Determines how the Lambda function responds to an invocation. Valid values are BUFFERED (default) and RESPONSE_STREAM. See more in Configuring a Lambda function to stream responses.
    qualifier : str, default is Undefined, optional
        The alias name or "$LATEST".
    """


    authorizationType?: str

    cors?: [LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderCorsItems0]

    functionName?: str

    functionNameRef?: LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRef

    functionNameSelector?: LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelector

    invokeMode?: str

    qualifier?: str


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderCorsItems0:
    r"""
    lambda aws upbound io v1beta1 function URL spec init provider cors items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether to allow cookies or other credentials in requests to the function URL. The default is false.
    allowHeaders : [str], default is Undefined, optional
        The HTTP headers that origins can include in requests to the function URL. For example: ["date", "keep-alive", "x-custom-header"].
    allowMethods : [str], default is Undefined, optional
        The HTTP methods that are allowed when calling the function URL. For example: ["GET", "POST", "DELETE"], or the wildcard character (["*"]).
    allowOrigins : [str], default is Undefined, optional
        The origins that can access the function URL. You can list any number of specific origins (or the wildcard character ("*")), separated by a comma. For example: ["https://www.example.com", "http://localhost:60905"].
    exposeHeaders : [str], default is Undefined, optional
        The HTTP headers in your function response that you want to expose to origins that call the function URL.
    maxAge : float, default is Undefined, optional
        The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to 0, which means that the browser doesn't cache results. The maximum value is 86400.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRef:
    r"""
    Reference to a Function in lambda to populate functionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRefPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelector:
    r"""
    Selector for a Function in lambda to populate functionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelectorPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecInitProviderFunctionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRefPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRef

    metadata?: LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToMetadata

    name: str


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRefPolicy


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LambdaAwsUpboundIoV1beta1FunctionURLSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LambdaAwsUpboundIoV1beta1FunctionURLStatus:
    r"""
    FunctionURLStatus defines the observed state of FunctionURL.

    Attributes
    ----------
    atProvider : LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LambdaAwsUpboundIoV1beta1FunctionURLStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProvider

    conditions?: [LambdaAwsUpboundIoV1beta1FunctionURLStatusConditionsItems0]

    observedGeneration?: int


schema LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProvider:
    r"""
    lambda aws upbound io v1beta1 function URL status at provider

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        The type of authentication that the function URL uses. Set to "AWS_IAM" to restrict access to authenticated IAM users only. Set to "NONE" to bypass IAM authentication and create a public endpoint. See the AWS documentation for more details.
    cors : [LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProviderCorsItems0], default is Undefined, optional
        The cross-origin resource sharing (CORS) settings for the function URL. Documented below.
    functionArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the function.
    functionName : str, default is Undefined, optional
        The name (or ARN) of the Lambda function.
    functionUrl : str, default is Undefined, optional
        The HTTP URL endpoint for the function in the format https://<url_id>.lambda-url.<region>.on.aws/.
    id : str, default is Undefined, optional
        id
    invokeMode : str, default is Undefined, optional
        Determines how the Lambda function responds to an invocation. Valid values are BUFFERED (default) and RESPONSE_STREAM. See more in Configuring a Lambda function to stream responses.
    qualifier : str, default is Undefined, optional
        The alias name or "$LATEST".
    urlId : str, default is Undefined, optional
        A generated ID for the endpoint.
    """


    authorizationType?: str

    cors?: [LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProviderCorsItems0]

    functionArn?: str

    functionName?: str

    functionUrl?: str

    id?: str

    invokeMode?: str

    qualifier?: str

    urlId?: str


schema LambdaAwsUpboundIoV1beta1FunctionURLStatusAtProviderCorsItems0:
    r"""
    lambda aws upbound io v1beta1 function URL status at provider cors items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether to allow cookies or other credentials in requests to the function URL. The default is false.
    allowHeaders : [str], default is Undefined, optional
        The HTTP headers that origins can include in requests to the function URL. For example: ["date", "keep-alive", "x-custom-header"].
    allowMethods : [str], default is Undefined, optional
        The HTTP methods that are allowed when calling the function URL. For example: ["GET", "POST", "DELETE"], or the wildcard character (["*"]).
    allowOrigins : [str], default is Undefined, optional
        The origins that can access the function URL. You can list any number of specific origins (or the wildcard character ("*")), separated by a comma. For example: ["https://www.example.com", "http://localhost:60905"].
    exposeHeaders : [str], default is Undefined, optional
        The HTTP headers in your function response that you want to expose to origins that call the function URL.
    maxAge : float, default is Undefined, optional
        The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to 0, which means that the browser doesn't cache results. The maximum value is 86400.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema LambdaAwsUpboundIoV1beta1FunctionURLStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


