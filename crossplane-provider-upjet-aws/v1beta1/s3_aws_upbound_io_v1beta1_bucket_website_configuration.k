"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BucketWebsiteConfiguration:
    r"""
    BucketWebsiteConfiguration is the Schema for the BucketWebsiteConfigurations API. Provides an S3 bucket website configuration resource.

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BucketWebsiteConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "BucketWebsiteConfiguration" = "BucketWebsiteConfiguration"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpec

    status?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatus


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpec:
    r"""
    BucketWebsiteConfigurationSpec defines the desired state of BucketWebsiteConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProvider:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket.
    bucketRef : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    errorDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderErrorDocumentItems0], default is Undefined, optional
        Name of the error document for the website. See below.
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    indexDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderIndexDocumentItems0], default is Undefined, optional
        Name of the index document for the website. See below.
    redirectAllRequestsTo : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRedirectAllRequestsToItems0], default is Undefined, optional
        Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with error_document, index_document, and routing_rule.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    routingRule : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0], default is Undefined, optional
        List of rules that define when a redirect is applied and the redirect behavior. See below.
    routingRules : str, default is Undefined, optional
        JSON array containing routing rules
        describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values ("") as seen in the example above.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelector

    errorDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderErrorDocumentItems0]

    expectedBucketOwner?: str

    indexDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderIndexDocumentItems0]

    redirectAllRequestsTo?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRedirectAllRequestsToItems0]

    region: str

    routingRule?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0]

    routingRules?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderErrorDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider error document items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Object key name to use when a 4XX class error occurs.
    """


    key?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderIndexDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider index document items0

    Attributes
    ----------
    suffix : str, default is Undefined, optional
        Suffix that is appended to a request that is for a directory on the website endpoint.
        For example, if the suffix is index.html and you make a request to samplebucket/images/, the data that is returned will be for the object with the key name images/index.html.
        The suffix must not be empty and must not include a slash character.
    """


    suffix?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRedirectAllRequestsToItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider redirect all requests to items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    """


    hostName?: str

    $protocol?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider routing rule items0

    Attributes
    ----------
    condition : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0ConditionItems0], default is Undefined, optional
        Configuration block for describing a condition that must be met for the specified redirect to apply. See below.
    redirect : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0RedirectItems0], default is Undefined, optional
        Configuration block for redirect information. See below.
    """


    condition?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0ConditionItems0]

    redirect?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0RedirectItems0]


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0ConditionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider routing rule items0 condition items0

    Attributes
    ----------
    httpErrorCodeReturnedEquals : str, default is Undefined, optional
        HTTP error code when the redirect is applied. If specified with key_prefix_equals, then both must be true for the redirect to be applied.
    keyPrefixEquals : str, default is Undefined, optional
        Object key name prefix when the redirect is applied. If specified with http_error_code_returned_equals, then both must be true for the redirect to be applied.
    """


    httpErrorCodeReturnedEquals?: str

    keyPrefixEquals?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecForProviderRoutingRuleItems0RedirectItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec for provider routing rule items0 redirect items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    httpRedirectCode : str, default is Undefined, optional
        HTTP redirect code to use on the response.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    replaceKeyPrefixWith : str, default is Undefined, optional
        Object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with key_prefix_equals set to docs/ and in the redirect set replace_key_prefix_with to /documents.
    replaceKeyWith : str, default is Undefined, optional
        Specific object key to use in the redirect request. For example, redirect request to error.html.
    """


    hostName?: str

    httpRedirectCode?: str

    $protocol?: str

    replaceKeyPrefixWith?: str

    replaceKeyWith?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket.
    bucketRef : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    errorDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderErrorDocumentItems0], default is Undefined, optional
        Name of the error document for the website. See below.
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    indexDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderIndexDocumentItems0], default is Undefined, optional
        Name of the index document for the website. See below.
    redirectAllRequestsTo : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRedirectAllRequestsToItems0], default is Undefined, optional
        Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with error_document, index_document, and routing_rule.
    routingRule : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0], default is Undefined, optional
        List of rules that define when a redirect is applied and the redirect behavior. See below.
    routingRules : str, default is Undefined, optional
        JSON array containing routing rules
        describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values ("") as seen in the example above.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelector

    errorDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderErrorDocumentItems0]

    expectedBucketOwner?: str

    indexDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderIndexDocumentItems0]

    redirectAllRequestsTo?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRedirectAllRequestsToItems0]

    routingRule?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0]

    routingRules?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderErrorDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider error document items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Object key name to use when a 4XX class error occurs.
    """


    key?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderIndexDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider index document items0

    Attributes
    ----------
    suffix : str, default is Undefined, optional
        Suffix that is appended to a request that is for a directory on the website endpoint.
        For example, if the suffix is index.html and you make a request to samplebucket/images/, the data that is returned will be for the object with the key name images/index.html.
        The suffix must not be empty and must not include a slash character.
    """


    suffix?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRedirectAllRequestsToItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider redirect all requests to items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    """


    hostName?: str

    $protocol?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider routing rule items0

    Attributes
    ----------
    condition : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0ConditionItems0], default is Undefined, optional
        Configuration block for describing a condition that must be met for the specified redirect to apply. See below.
    redirect : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0RedirectItems0], default is Undefined, optional
        Configuration block for redirect information. See below.
    """


    condition?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0ConditionItems0]

    redirect?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0RedirectItems0]


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0ConditionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider routing rule items0 condition items0

    Attributes
    ----------
    httpErrorCodeReturnedEquals : str, default is Undefined, optional
        HTTP error code when the redirect is applied. If specified with key_prefix_equals, then both must be true for the redirect to be applied.
    keyPrefixEquals : str, default is Undefined, optional
        Object key name prefix when the redirect is applied. If specified with http_error_code_returned_equals, then both must be true for the redirect to be applied.
    """


    httpErrorCodeReturnedEquals?: str

    keyPrefixEquals?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecInitProviderRoutingRuleItems0RedirectItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration spec init provider routing rule items0 redirect items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    httpRedirectCode : str, default is Undefined, optional
        HTTP redirect code to use on the response.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    replaceKeyPrefixWith : str, default is Undefined, optional
        Object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with key_prefix_equals set to docs/ and in the redirect set replace_key_prefix_with to /documents.
    replaceKeyWith : str, default is Undefined, optional
        Specific object key to use in the redirect request. For example, redirect request to error.html.
    """


    hostName?: str

    httpRedirectCode?: str

    $protocol?: str

    replaceKeyPrefixWith?: str

    replaceKeyWith?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatus:
    r"""
    BucketWebsiteConfigurationStatus defines the observed state of BucketWebsiteConfiguration.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket.
    errorDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderErrorDocumentItems0], default is Undefined, optional
        Name of the error document for the website. See below.
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    id : str, default is Undefined, optional
        The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.
    indexDocument : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderIndexDocumentItems0], default is Undefined, optional
        Name of the index document for the website. See below.
    redirectAllRequestsTo : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRedirectAllRequestsToItems0], default is Undefined, optional
        Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with error_document, index_document, and routing_rule.
    routingRule : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0], default is Undefined, optional
        List of rules that define when a redirect is applied and the redirect behavior. See below.
    routingRules : str, default is Undefined, optional
        JSON array containing routing rules
        describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values ("") as seen in the example above.
    websiteDomain : str, default is Undefined, optional
        Domain of the website endpoint. This is used to create Route 53 alias records.
    websiteEndpoint : str, default is Undefined, optional
        Website endpoint.
    """


    bucket?: str

    errorDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderErrorDocumentItems0]

    expectedBucketOwner?: str

    id?: str

    indexDocument?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderIndexDocumentItems0]

    redirectAllRequestsTo?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRedirectAllRequestsToItems0]

    routingRule?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0]

    routingRules?: str

    websiteDomain?: str

    websiteEndpoint?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderErrorDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider error document items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Object key name to use when a 4XX class error occurs.
    """


    key?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderIndexDocumentItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider index document items0

    Attributes
    ----------
    suffix : str, default is Undefined, optional
        Suffix that is appended to a request that is for a directory on the website endpoint.
        For example, if the suffix is index.html and you make a request to samplebucket/images/, the data that is returned will be for the object with the key name images/index.html.
        The suffix must not be empty and must not include a slash character.
    """


    suffix?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRedirectAllRequestsToItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider redirect all requests to items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    """


    hostName?: str

    $protocol?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider routing rule items0

    Attributes
    ----------
    condition : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0ConditionItems0], default is Undefined, optional
        Configuration block for describing a condition that must be met for the specified redirect to apply. See below.
    redirect : [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0RedirectItems0], default is Undefined, optional
        Configuration block for redirect information. See below.
    """


    condition?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0ConditionItems0]

    redirect?: [S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0RedirectItems0]


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0ConditionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider routing rule items0 condition items0

    Attributes
    ----------
    httpErrorCodeReturnedEquals : str, default is Undefined, optional
        HTTP error code when the redirect is applied. If specified with key_prefix_equals, then both must be true for the redirect to be applied.
    keyPrefixEquals : str, default is Undefined, optional
        Object key name prefix when the redirect is applied. If specified with http_error_code_returned_equals, then both must be true for the redirect to be applied.
    """


    httpErrorCodeReturnedEquals?: str

    keyPrefixEquals?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusAtProviderRoutingRuleItems0RedirectItems0:
    r"""
    s3 aws upbound io v1beta1 bucket website configuration status at provider routing rule items0 redirect items0

    Attributes
    ----------
    hostName : str, default is Undefined, optional
        Name of the host where requests are redirected.
    httpRedirectCode : str, default is Undefined, optional
        HTTP redirect code to use on the response.
    $protocol : str, default is Undefined, optional
        Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: http, https.
    replaceKeyPrefixWith : str, default is Undefined, optional
        Object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with key_prefix_equals set to docs/ and in the redirect set replace_key_prefix_with to /documents.
    replaceKeyWith : str, default is Undefined, optional
        Specific object key to use in the redirect request. For example, redirect request to error.html.
    """


    hostName?: str

    httpRedirectCode?: str

    $protocol?: str

    replaceKeyPrefixWith?: str

    replaceKeyWith?: str


schema S3AwsUpboundIoV1beta1BucketWebsiteConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


