"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema JobQueue:
    r"""
    JobQueue is the Schema for the JobQueues API. Provides a Batch Job Queue resource.

    Attributes
    ----------
    apiVersion : str, default is "batch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "JobQueue", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BatchAwsUpboundIoV1beta1JobQueueSpec, default is Undefined, required
        spec
    status : BatchAwsUpboundIoV1beta1JobQueueStatus, default is Undefined, optional
        status
    """


    apiVersion: "batch.aws.upbound.io/v1beta1" = "batch.aws.upbound.io/v1beta1"

    kind: "JobQueue" = "JobQueue"

    metadata?: v1.ObjectMeta

    spec: BatchAwsUpboundIoV1beta1JobQueueSpec

    status?: BatchAwsUpboundIoV1beta1JobQueueStatus


schema BatchAwsUpboundIoV1beta1JobQueueSpec:
    r"""
    JobQueueSpec defines the desired state of JobQueue

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BatchAwsUpboundIoV1beta1JobQueueSpecForProvider, default is Undefined, required
        for provider
    initProvider : BatchAwsUpboundIoV1beta1JobQueueSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BatchAwsUpboundIoV1beta1JobQueueSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BatchAwsUpboundIoV1beta1JobQueueSpecForProvider

    initProvider?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRef

    publishConnectionDetailsTo?: BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BatchAwsUpboundIoV1beta1JobQueueSpecWriteConnectionSecretToRef


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProvider:
    r"""
    batch aws upbound io v1beta1 job queue spec for provider

    Attributes
    ----------
    computeEnvironmentOrder : [BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0], default is Undefined, optional
        The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the VALID state before you can associate them with a job queue. You can associate up to three compute environments with a job queue.
    computeEnvironments : [str], default is Undefined, optional
        (Deprecated)  This parameter is deprecated, please use compute_environment_order instead. List of compute environment ARNs mapped to a job queue. The position of the compute environments in the list will dictate the order. When importing a AWS Batch Job Queue, the parameter compute_environments will always be used over compute_environment_order. Please adjust your HCL accordingly.
    jobStateTimeLimitAction : [BatchAwsUpboundIoV1beta1JobQueueSpecForProviderJobStateTimeLimitActionItems0], default is Undefined, optional
        The set of job state time limit actions mapped to a job queue. Specifies an action that AWS Batch will take after the job has remained at the head of the queue in the specified state for longer than the specified time.
    priority : float, default is Undefined, optional
        The priority of the job queue. Job queues with a higher priority
        are evaluated first when associated with the same compute environment.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    schedulingPolicyArn : str, default is Undefined, optional
        The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
    schedulingPolicyArnRef : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRef, default is Undefined, optional
        scheduling policy arn ref
    schedulingPolicyArnSelector : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelector, default is Undefined, optional
        scheduling policy arn selector
    state : str, default is Undefined, optional
        The state of the job queue. Must be one of: ENABLED or DISABLED
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    computeEnvironmentOrder?: [BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0]

    computeEnvironments?: [str]

    jobStateTimeLimitAction?: [BatchAwsUpboundIoV1beta1JobQueueSpecForProviderJobStateTimeLimitActionItems0]

    priority?: float

    region: str

    schedulingPolicyArn?: str

    schedulingPolicyArnRef?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRef

    schedulingPolicyArnSelector?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelector

    state?: str

    tags?: {str:str}


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0:
    r"""
    batch aws upbound io v1beta1 job queue spec for provider compute environment order items0

    Attributes
    ----------
    computeEnvironment : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the compute environment.
    computeEnvironmentRef : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef, default is Undefined, optional
        compute environment ref
    computeEnvironmentSelector : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector, default is Undefined, optional
        compute environment selector
    order : float, default is Undefined, optional
        The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
    """


    computeEnvironment?: str

    computeEnvironmentRef?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef

    computeEnvironmentSelector?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector

    order?: float


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef:
    r"""
    Reference to a ComputeEnvironment in batch to populate computeEnvironment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector:
    r"""
    Selector for a ComputeEnvironment in batch to populate computeEnvironment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderJobStateTimeLimitActionItems0:
    r"""
    batch aws upbound io v1beta1 job queue spec for provider job state time limit action items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action to take when a job is at the head of the job queue in the specified state for the specified period of time. Valid values include "CANCEL"
    maxTimeSeconds : float, default is Undefined, optional
        The approximate amount of time, in seconds, that must pass with the job in the specified state before the action is taken. Valid values include integers between 600 & 86400
    reason : str, default is Undefined, optional
        The reason to log for the action being taken.
    state : str, default is Undefined, optional
        The state of the job needed to trigger the action. Valid values include "RUNNABLE".
    """


    action?: str

    maxTimeSeconds?: float

    reason?: str

    state?: str


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRef:
    r"""
    Reference to a SchedulingPolicy in batch to populate schedulingPolicyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelector:
    r"""
    Selector for a SchedulingPolicy in batch to populate schedulingPolicyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelectorPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecForProviderSchedulingPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    computeEnvironmentOrder : [BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0], default is Undefined, optional
        The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the VALID state before you can associate them with a job queue. You can associate up to three compute environments with a job queue.
    computeEnvironments : [str], default is Undefined, optional
        (Deprecated)  This parameter is deprecated, please use compute_environment_order instead. List of compute environment ARNs mapped to a job queue. The position of the compute environments in the list will dictate the order. When importing a AWS Batch Job Queue, the parameter compute_environments will always be used over compute_environment_order. Please adjust your HCL accordingly.
    jobStateTimeLimitAction : [BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderJobStateTimeLimitActionItems0], default is Undefined, optional
        The set of job state time limit actions mapped to a job queue. Specifies an action that AWS Batch will take after the job has remained at the head of the queue in the specified state for longer than the specified time.
    priority : float, default is Undefined, optional
        The priority of the job queue. Job queues with a higher priority
        are evaluated first when associated with the same compute environment.
    schedulingPolicyArn : str, default is Undefined, optional
        The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
    schedulingPolicyArnRef : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRef, default is Undefined, optional
        scheduling policy arn ref
    schedulingPolicyArnSelector : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelector, default is Undefined, optional
        scheduling policy arn selector
    state : str, default is Undefined, optional
        The state of the job queue. Must be one of: ENABLED or DISABLED
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    computeEnvironmentOrder?: [BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0]

    computeEnvironments?: [str]

    jobStateTimeLimitAction?: [BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderJobStateTimeLimitActionItems0]

    priority?: float

    schedulingPolicyArn?: str

    schedulingPolicyArnRef?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRef

    schedulingPolicyArnSelector?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelector

    state?: str

    tags?: {str:str}


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0:
    r"""
    batch aws upbound io v1beta1 job queue spec init provider compute environment order items0

    Attributes
    ----------
    computeEnvironment : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the compute environment.
    computeEnvironmentRef : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef, default is Undefined, optional
        compute environment ref
    computeEnvironmentSelector : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector, default is Undefined, optional
        compute environment selector
    order : float, default is Undefined, optional
        The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
    """


    computeEnvironment?: str

    computeEnvironmentRef?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef

    computeEnvironmentSelector?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector

    order?: float


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRef:
    r"""
    Reference to a ComputeEnvironment in batch to populate computeEnvironment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelector:
    r"""
    Selector for a ComputeEnvironment in batch to populate computeEnvironment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderComputeEnvironmentOrderItems0ComputeEnvironmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderJobStateTimeLimitActionItems0:
    r"""
    batch aws upbound io v1beta1 job queue spec init provider job state time limit action items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action to take when a job is at the head of the job queue in the specified state for the specified period of time. Valid values include "CANCEL"
    maxTimeSeconds : float, default is Undefined, optional
        The approximate amount of time, in seconds, that must pass with the job in the specified state before the action is taken. Valid values include integers between 600 & 86400
    reason : str, default is Undefined, optional
        The reason to log for the action being taken.
    state : str, default is Undefined, optional
        The state of the job needed to trigger the action. Valid values include "RUNNABLE".
    """


    action?: str

    maxTimeSeconds?: float

    reason?: str

    state?: str


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRef:
    r"""
    Reference to a SchedulingPolicy in batch to populate schedulingPolicyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelector:
    r"""
    Selector for a SchedulingPolicy in batch to populate schedulingPolicyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelectorPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecInitProviderSchedulingPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRef

    metadata?: BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToMetadata

    name: str


schema BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRefPolicy


schema BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1JobQueueSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta1JobQueueSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BatchAwsUpboundIoV1beta1JobQueueStatus:
    r"""
    JobQueueStatus defines the observed state of JobQueue.

    Attributes
    ----------
    atProvider : BatchAwsUpboundIoV1beta1JobQueueStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BatchAwsUpboundIoV1beta1JobQueueStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BatchAwsUpboundIoV1beta1JobQueueStatusAtProvider

    conditions?: [BatchAwsUpboundIoV1beta1JobQueueStatusConditionsItems0]

    observedGeneration?: int


schema BatchAwsUpboundIoV1beta1JobQueueStatusAtProvider:
    r"""
    batch aws upbound io v1beta1 job queue status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name of the job queue.
    computeEnvironmentOrder : [BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderComputeEnvironmentOrderItems0], default is Undefined, optional
        The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment runs a specific job. Compute environments must be in the VALID state before you can associate them with a job queue. You can associate up to three compute environments with a job queue.
    computeEnvironments : [str], default is Undefined, optional
        (Deprecated)  This parameter is deprecated, please use compute_environment_order instead. List of compute environment ARNs mapped to a job queue. The position of the compute environments in the list will dictate the order. When importing a AWS Batch Job Queue, the parameter compute_environments will always be used over compute_environment_order. Please adjust your HCL accordingly.
    id : str, default is Undefined, optional
        id
    jobStateTimeLimitAction : [BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderJobStateTimeLimitActionItems0], default is Undefined, optional
        The set of job state time limit actions mapped to a job queue. Specifies an action that AWS Batch will take after the job has remained at the head of the queue in the specified state for longer than the specified time.
    priority : float, default is Undefined, optional
        The priority of the job queue. Job queues with a higher priority
        are evaluated first when associated with the same compute environment.
    schedulingPolicyArn : str, default is Undefined, optional
        The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
    state : str, default is Undefined, optional
        The state of the job queue. Must be one of: ENABLED or DISABLED
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    computeEnvironmentOrder?: [BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderComputeEnvironmentOrderItems0]

    computeEnvironments?: [str]

    id?: str

    jobStateTimeLimitAction?: [BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderJobStateTimeLimitActionItems0]

    priority?: float

    schedulingPolicyArn?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderComputeEnvironmentOrderItems0:
    r"""
    batch aws upbound io v1beta1 job queue status at provider compute environment order items0

    Attributes
    ----------
    computeEnvironment : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the compute environment.
    order : float, default is Undefined, optional
        The order of the compute environment. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.
    """


    computeEnvironment?: str

    order?: float


schema BatchAwsUpboundIoV1beta1JobQueueStatusAtProviderJobStateTimeLimitActionItems0:
    r"""
    batch aws upbound io v1beta1 job queue status at provider job state time limit action items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action to take when a job is at the head of the job queue in the specified state for the specified period of time. Valid values include "CANCEL"
    maxTimeSeconds : float, default is Undefined, optional
        The approximate amount of time, in seconds, that must pass with the job in the specified state before the action is taken. Valid values include integers between 600 & 86400
    reason : str, default is Undefined, optional
        The reason to log for the action being taken.
    state : str, default is Undefined, optional
        The state of the job needed to trigger the action. Valid values include "RUNNABLE".
    """


    action?: str

    maxTimeSeconds?: float

    reason?: str

    state?: str


schema BatchAwsUpboundIoV1beta1JobQueueStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


