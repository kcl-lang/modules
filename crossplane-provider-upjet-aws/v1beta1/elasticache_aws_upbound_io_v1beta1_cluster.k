"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Provides an ElastiCache Cluster resource.

    Attributes
    ----------
    apiVersion : str, default is "elasticache.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticacheAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : ElasticacheAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticache.aws.upbound.io/v1beta1" = "elasticache.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: ElasticacheAwsUpboundIoV1beta1ClusterSpec

    status?: ElasticacheAwsUpboundIoV1beta1ClusterStatus


schema ElasticacheAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    elasticache aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Whether any database modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon ElastiCache Documentation for more information..
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine type "redis" and if the engine version is 6 or higher.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use preferred_availability_zones instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
    azMode : str, default is Undefined, optional
        Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are single-az or cross-az, default is single-az. If you want to choose cross-az, num_cache_nodes must be greater than 1.
    engine : str, default is Undefined, optional
        –  Name of the cache engine to be used for this cache cluster. Valid values are memcached and redis.
    engineVersion : str, default is Undefined, optional
        –  Version number of the cache engine to be used.
        If not set, defaults to the latest version.
        See Describe Cache Engine Versions in the AWS Documentation for supported versions.
        When engine is redis and the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below. Cannot be provided with replication_group_id.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final cluster snapshot. If omitted, no final snapshot will be made.
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC).
        The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. IPv6 is supported with Redis engine 6.2 onword or Memcached version 1.6.6 for all Nitro system instances. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        create the resource.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic.
    numCacheNodes : float, default is Undefined, optional
        –  The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
    outpostMode : str, default is Undefined, optional
        Specify the outpost mode that will apply to the cache cluster creation. Valid values are "single-outpost" and "cross-outpost", however AWS currently only supports "single-outpost" mode.
    parameterGroupName : str, default is Undefined, optional
        –  The name of the parameter group to associate with this cache cluster.
    parameterGroupNameRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRef, default is Undefined, optional
        parameter group name ref
    parameterGroupNameSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelector, default is Undefined, optional
        parameter group name selector
    port : float, default is Undefined, optional
        create the resource.
    preferredAvailabilityZones : [str], default is Undefined, optional
        List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of num_cache_nodes. If you want all the nodes in the same Availability Zone, use availability_zone instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
    preferredOutpostArn : str, default is Undefined, optional
        The outpost ARN in which the cache cluster will be created.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationGroupId : str, default is Undefined, optional
        ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
    replicationGroupIdRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRef, default is Undefined, optional
        replication group Id ref
    replicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelector, default is Undefined, optional
        replication group Id selector
    securityGroupIdRefs : [ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated with the cache cluster. Cannot be provided with replication_group_id.
    snapshotArns : [str], default is Undefined, optional
        element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing snapshot_arns forces a new resource.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        create the resource. Cannot be provided with replication_group_id.
    subnetGroupNameRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Enable encryption in-transit. Supported only with Memcached versions 1.6.12 and later, running in a VPC. See the ElastiCache in-transit encryption documentation for more details.
    """


    applyImmediately?: bool

    autoMinorVersionUpgrade?: str

    availabilityZone?: str

    azMode?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    ipDiscovery?: str

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheNodes?: float

    outpostMode?: str

    parameterGroupName?: str

    parameterGroupNameRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRef

    parameterGroupNameSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelector

    port?: float

    preferredAvailabilityZones?: [str]

    preferredOutpostArn?: str

    region: str

    replicationGroupId?: str

    replicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRef

    replicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelector

    securityGroupIdRefs?: [ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    subnetGroupNameRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef

    subnetGroupNameSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector

    tags?: {str:str}

    transitEncryptionEnabled?: bool


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta1 cluster spec for provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in elasticache to populate parameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in elasticache to populate parameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRef:
    r"""
    Reference to a ReplicationGroup in elasticache to populate replicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelector:
    r"""
    Selector for a ReplicationGroup in elasticache to populate replicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Whether any database modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon ElastiCache Documentation for more information..
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine type "redis" and if the engine version is 6 or higher.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use preferred_availability_zones instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
    azMode : str, default is Undefined, optional
        Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are single-az or cross-az, default is single-az. If you want to choose cross-az, num_cache_nodes must be greater than 1.
    engine : str, default is Undefined, optional
        –  Name of the cache engine to be used for this cache cluster. Valid values are memcached and redis.
    engineVersion : str, default is Undefined, optional
        –  Version number of the cache engine to be used.
        If not set, defaults to the latest version.
        See Describe Cache Engine Versions in the AWS Documentation for supported versions.
        When engine is redis and the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below. Cannot be provided with replication_group_id.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final cluster snapshot. If omitted, no final snapshot will be made.
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC).
        The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. IPv6 is supported with Redis engine 6.2 onword or Memcached version 1.6.6 for all Nitro system instances. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        create the resource.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic.
    numCacheNodes : float, default is Undefined, optional
        –  The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
    outpostMode : str, default is Undefined, optional
        Specify the outpost mode that will apply to the cache cluster creation. Valid values are "single-outpost" and "cross-outpost", however AWS currently only supports "single-outpost" mode.
    parameterGroupName : str, default is Undefined, optional
        –  The name of the parameter group to associate with this cache cluster.
    parameterGroupNameRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRef, default is Undefined, optional
        parameter group name ref
    parameterGroupNameSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelector, default is Undefined, optional
        parameter group name selector
    port : float, default is Undefined, optional
        create the resource.
    preferredAvailabilityZones : [str], default is Undefined, optional
        List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of num_cache_nodes. If you want all the nodes in the same Availability Zone, use availability_zone instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
    preferredOutpostArn : str, default is Undefined, optional
        The outpost ARN in which the cache cluster will be created.
    replicationGroupId : str, default is Undefined, optional
        ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
    replicationGroupIdRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRef, default is Undefined, optional
        replication group Id ref
    replicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelector, default is Undefined, optional
        replication group Id selector
    securityGroupIdRefs : [ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated with the cache cluster. Cannot be provided with replication_group_id.
    snapshotArns : [str], default is Undefined, optional
        element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing snapshot_arns forces a new resource.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        create the resource. Cannot be provided with replication_group_id.
    subnetGroupNameRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Enable encryption in-transit. Supported only with Memcached versions 1.6.12 and later, running in a VPC. See the ElastiCache in-transit encryption documentation for more details.
    """


    applyImmediately?: bool

    autoMinorVersionUpgrade?: str

    availabilityZone?: str

    azMode?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    ipDiscovery?: str

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheNodes?: float

    outpostMode?: str

    parameterGroupName?: str

    parameterGroupNameRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRef

    parameterGroupNameSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelector

    port?: float

    preferredAvailabilityZones?: [str]

    preferredOutpostArn?: str

    replicationGroupId?: str

    replicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRef

    replicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelector

    securityGroupIdRefs?: [ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    subnetGroupNameRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef

    subnetGroupNameSelector?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector

    tags?: {str:str}

    transitEncryptionEnabled?: bool


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta1 cluster spec init provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in elasticache to populate parameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in elasticache to populate parameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRef:
    r"""
    Reference to a ReplicationGroup in elasticache to populate replicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelector:
    r"""
    Selector for a ReplicationGroup in elasticache to populate replicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticacheAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticacheAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [ElasticacheAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    elasticache aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Whether any database modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon ElastiCache Documentation for more information..
    arn : str, default is Undefined, optional
        The ARN of the created ElastiCache Cluster.
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine type "redis" and if the engine version is 6 or higher.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use preferred_availability_zones instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
    azMode : str, default is Undefined, optional
        Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are single-az or cross-az, default is single-az. If you want to choose cross-az, num_cache_nodes must be greater than 1.
    cacheNodes : [ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderCacheNodesItems0], default is Undefined, optional
        List of node objects including id, address, port and availability_zone.
    clusterAddress : str, default is Undefined, optional
        (Memcached only) DNS name of the cache cluster without the port appended.
    configurationEndpoint : str, default is Undefined, optional
        (Memcached only) Configuration endpoint to allow host discovery.
    engine : str, default is Undefined, optional
        –  Name of the cache engine to be used for this cache cluster. Valid values are memcached and redis.
    engineVersion : str, default is Undefined, optional
        –  Version number of the cache engine to be used.
        If not set, defaults to the latest version.
        See Describe Cache Engine Versions in the AWS Documentation for supported versions.
        When engine is redis and the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below. Cannot be provided with replication_group_id.
    engineVersionActual : str, default is Undefined, optional
        Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final cluster snapshot. If omitted, no final snapshot will be made.
    id : str, default is Undefined, optional
        id
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC).
        The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. IPv6 is supported with Redis engine 6.2 onword or Memcached version 1.6.6 for all Nitro system instances. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        create the resource.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic.
    numCacheNodes : float, default is Undefined, optional
        –  The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
    outpostMode : str, default is Undefined, optional
        Specify the outpost mode that will apply to the cache cluster creation. Valid values are "single-outpost" and "cross-outpost", however AWS currently only supports "single-outpost" mode.
    parameterGroupName : str, default is Undefined, optional
        –  The name of the parameter group to associate with this cache cluster.
    port : float, default is Undefined, optional
        create the resource.
    preferredAvailabilityZones : [str], default is Undefined, optional
        List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of num_cache_nodes. If you want all the nodes in the same Availability Zone, use availability_zone instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
    preferredOutpostArn : str, default is Undefined, optional
        The outpost ARN in which the cache cluster will be created.
    replicationGroupId : str, default is Undefined, optional
        ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated with the cache cluster. Cannot be provided with replication_group_id.
    snapshotArns : [str], default is Undefined, optional
        element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing snapshot_arns forces a new resource.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        create the resource. Cannot be provided with replication_group_id.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Enable encryption in-transit. Supported only with Memcached versions 1.6.12 and later, running in a VPC. See the ElastiCache in-transit encryption documentation for more details.
    """


    applyImmediately?: bool

    arn?: str

    autoMinorVersionUpgrade?: str

    availabilityZone?: str

    azMode?: str

    cacheNodes?: [ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderCacheNodesItems0]

    clusterAddress?: str

    configurationEndpoint?: str

    engine?: str

    engineVersion?: str

    engineVersionActual?: str

    finalSnapshotIdentifier?: str

    id?: str

    ipDiscovery?: str

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheNodes?: float

    outpostMode?: str

    parameterGroupName?: str

    port?: float

    preferredAvailabilityZones?: [str]

    preferredOutpostArn?: str

    replicationGroupId?: str

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    transitEncryptionEnabled?: bool


schema ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderCacheNodesItems0:
    r"""
    elasticache aws upbound io v1beta1 cluster status at provider cache nodes items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        address
    availabilityZone : str, default is Undefined, optional
        Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use preferred_availability_zones instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
    id : str, default is Undefined, optional
        id
    outpostArn : str, default is Undefined, optional
        The ARN of the created ElastiCache Cluster.
    port : float, default is Undefined, optional
        create the resource.
    """


    address?: str

    availabilityZone?: str

    id?: str

    outpostArn?: str

    port?: float


schema ElasticacheAwsUpboundIoV1beta1ClusterStatusAtProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta1 cluster status at provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


