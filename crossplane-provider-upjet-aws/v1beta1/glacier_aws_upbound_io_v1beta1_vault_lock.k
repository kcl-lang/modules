"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VaultLock:
    r"""
    VaultLock is the Schema for the VaultLocks API. Manages a Glacier Vault Lock.

    Attributes
    ----------
    apiVersion : str, default is "glacier.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VaultLock", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GlacierAwsUpboundIoV1beta1VaultLockSpec, default is Undefined, required
        spec
    status : GlacierAwsUpboundIoV1beta1VaultLockStatus, default is Undefined, optional
        status
    """


    apiVersion: "glacier.aws.upbound.io/v1beta1" = "glacier.aws.upbound.io/v1beta1"

    kind: "VaultLock" = "VaultLock"

    metadata?: v1.ObjectMeta

    spec: GlacierAwsUpboundIoV1beta1VaultLockSpec

    status?: GlacierAwsUpboundIoV1beta1VaultLockStatus


schema GlacierAwsUpboundIoV1beta1VaultLockSpec:
    r"""
    VaultLockSpec defines the desired state of VaultLock

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GlacierAwsUpboundIoV1beta1VaultLockSpecForProvider, default is Undefined, required
        for provider
    initProvider : GlacierAwsUpboundIoV1beta1VaultLockSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GlacierAwsUpboundIoV1beta1VaultLockSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GlacierAwsUpboundIoV1beta1VaultLockSpecForProvider

    initProvider?: GlacierAwsUpboundIoV1beta1VaultLockSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRef

    publishConnectionDetailsTo?: GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GlacierAwsUpboundIoV1beta1VaultLockSpecWriteConnectionSecretToRef


schema GlacierAwsUpboundIoV1beta1VaultLockSpecForProvider:
    r"""
    glacier aws upbound io v1beta1 vault lock spec for provider

    Attributes
    ----------
    completeLock : bool, default is Undefined, optional
        Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to false, the Glacier Lock Policy remains in a testing mode for 24 hours. Changing this from false to true will show as resource recreation, which is expected. Changing this from true to false is not possible unless the Glacier Vault is recreated at the same time.
    ignoreDeletionError : bool, default is Undefined, optional
        This should only be used in conjunction with complete_lock being set to true.
    policy : str, default is Undefined, optional
        JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    vaultName : str, default is Undefined, optional
        The name of the Glacier Vault.
    vaultNameRef : GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRef, default is Undefined, optional
        vault name ref
    vaultNameSelector : GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelector, default is Undefined, optional
        vault name selector
    """


    completeLock?: bool

    ignoreDeletionError?: bool

    policy?: str

    region: str

    vaultName?: str

    vaultNameRef?: GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRef

    vaultNameSelector?: GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelector


schema GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRef:
    r"""
    Reference to a Vault in glacier to populate vaultName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRefPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelector:
    r"""
    Selector for a Vault in glacier to populate vaultName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelectorPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecForProviderVaultNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    completeLock : bool, default is Undefined, optional
        Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to false, the Glacier Lock Policy remains in a testing mode for 24 hours. Changing this from false to true will show as resource recreation, which is expected. Changing this from true to false is not possible unless the Glacier Vault is recreated at the same time.
    ignoreDeletionError : bool, default is Undefined, optional
        This should only be used in conjunction with complete_lock being set to true.
    policy : str, default is Undefined, optional
        JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.
    vaultName : str, default is Undefined, optional
        The name of the Glacier Vault.
    vaultNameRef : GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRef, default is Undefined, optional
        vault name ref
    vaultNameSelector : GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelector, default is Undefined, optional
        vault name selector
    """


    completeLock?: bool

    ignoreDeletionError?: bool

    policy?: str

    vaultName?: str

    vaultNameRef?: GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRef

    vaultNameSelector?: GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelector


schema GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRef:
    r"""
    Reference to a Vault in glacier to populate vaultName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRefPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelector:
    r"""
    Selector for a Vault in glacier to populate vaultName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelectorPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecInitProviderVaultNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRefPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRef

    metadata?: GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToMetadata

    name: str


schema GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRefPolicy


schema GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlacierAwsUpboundIoV1beta1VaultLockSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GlacierAwsUpboundIoV1beta1VaultLockSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlacierAwsUpboundIoV1beta1VaultLockStatus:
    r"""
    VaultLockStatus defines the observed state of VaultLock.

    Attributes
    ----------
    atProvider : GlacierAwsUpboundIoV1beta1VaultLockStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GlacierAwsUpboundIoV1beta1VaultLockStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GlacierAwsUpboundIoV1beta1VaultLockStatusAtProvider

    conditions?: [GlacierAwsUpboundIoV1beta1VaultLockStatusConditionsItems0]

    observedGeneration?: int


schema GlacierAwsUpboundIoV1beta1VaultLockStatusAtProvider:
    r"""
    glacier aws upbound io v1beta1 vault lock status at provider

    Attributes
    ----------
    completeLock : bool, default is Undefined, optional
        Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to false, the Glacier Lock Policy remains in a testing mode for 24 hours. Changing this from false to true will show as resource recreation, which is expected. Changing this from true to false is not possible unless the Glacier Vault is recreated at the same time.
    id : str, default is Undefined, optional
        Glacier Vault name.
    ignoreDeletionError : bool, default is Undefined, optional
        This should only be used in conjunction with complete_lock being set to true.
    policy : str, default is Undefined, optional
        JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.
    vaultName : str, default is Undefined, optional
        The name of the Glacier Vault.
    """


    completeLock?: bool

    id?: str

    ignoreDeletionError?: bool

    policy?: str

    vaultName?: str


schema GlacierAwsUpboundIoV1beta1VaultLockStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


