"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TopicSubscription:
    r"""
    TopicSubscription is the Schema for the TopicSubscriptions API. Provides a resource for subscribing to SNS topics.

    Attributes
    ----------
    apiVersion : str, default is "sns.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TopicSubscription", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SnsAwsUpboundIoV1beta1TopicSubscriptionSpec, default is Undefined, required
        spec
    status : SnsAwsUpboundIoV1beta1TopicSubscriptionStatus, default is Undefined, optional
        status
    """


    apiVersion: "sns.aws.upbound.io/v1beta1" = "sns.aws.upbound.io/v1beta1"

    kind: "TopicSubscription" = "TopicSubscription"

    metadata?: v1.ObjectMeta

    spec: SnsAwsUpboundIoV1beta1TopicSubscriptionSpec

    status?: SnsAwsUpboundIoV1beta1TopicSubscriptionStatus


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpec:
    r"""
    TopicSubscriptionSpec defines the desired state of TopicSubscription

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProvider, default is Undefined, required
        for provider
    initProvider : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProvider

    initProvider?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRef

    publishConnectionDetailsTo?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecWriteConnectionSecretToRef


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProvider:
    r"""
    sns aws upbound io v1beta1 topic subscription spec for provider

    Attributes
    ----------
    confirmationTimeoutInMinutes : float, default is Undefined, optional
        Integer indicating number of minutes to wait in retrying mode for fetching subscription arn before marking it as failure. Only applicable for http and https protocols. Default is 1.
    deliveryPolicy : str, default is Undefined, optional
        JSON String with the delivery policy (retries, backoff, etc.) that will be used in the subscription - this only applies to HTTP/S subscriptions. Refer to the SNS docs for more details.
    endpoint : str, default is Undefined, optional
        Endpoint to send data to. The contents vary with the protocol. See details below.
    endpointAutoConfirms : bool, default is Undefined, optional
        Whether the endpoint is capable of auto confirming subscription (e.g., PagerDuty). Default is false.
    endpointRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRef, default is Undefined, optional
        endpoint ref
    endpointSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelector, default is Undefined, optional
        endpoint selector
    filterPolicy : str, default is Undefined, optional
        JSON String with the filter policy that will be used in the subscription to filter messages seen by the target resource. Refer to the SNS docs for more details.
    filterPolicyScope : str, default is Undefined, optional
        Whether the filter_policy applies to MessageAttributes (default) or MessageBody.
    $protocol : str, default is Undefined, optional
        Protocol to use. Valid values are: sqs, sms, lambda, firehose, and application. Protocols email, email-json, http and https are also valid but partially supported. See details below.
    rawMessageDelivery : bool, default is Undefined, optional
        Whether to enable raw message delivery (the original message is directly passed, not wrapped in JSON with the original message in the message property). Default is false.
    redrivePolicy : str, default is Undefined, optional
        JSON String with the redrive policy that will be used in the subscription. Refer to the SNS docs for more details.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replayPolicy : str, default is Undefined, optional
        JSON String with the archived message replay policy that will be used in the subscription. Refer to the SNS docs for more details.
    subscriptionRoleArn : str, default is Undefined, optional
        ARN of the IAM role to publish to Kinesis Data Firehose delivery stream. Refer to SNS docs.
    subscriptionRoleArnRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRef, default is Undefined, optional
        subscription role arn ref
    subscriptionRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelector, default is Undefined, optional
        subscription role arn selector
    topicArn : str, default is Undefined, optional
        ARN of the SNS topic to subscribe to.
    topicArnRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    confirmationTimeoutInMinutes?: float

    deliveryPolicy?: str

    endpoint?: str

    endpointAutoConfirms?: bool

    endpointRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRef

    endpointSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelector

    filterPolicy?: str

    filterPolicyScope?: str

    $protocol?: str

    rawMessageDelivery?: bool

    redrivePolicy?: str

    region: str

    replayPolicy?: str

    subscriptionRoleArn?: str

    subscriptionRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRef

    subscriptionRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelector

    topicArn?: str

    topicArnRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRef

    topicArnSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelector


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRef:
    r"""
    Reference to a Queue in sqs to populate endpoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelector:
    r"""
    Selector for a Queue in sqs to populate endpoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderEndpointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRef:
    r"""
    Reference to a Role in iam to populate subscriptionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate subscriptionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderSubscriptionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecForProviderTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    confirmationTimeoutInMinutes : float, default is Undefined, optional
        Integer indicating number of minutes to wait in retrying mode for fetching subscription arn before marking it as failure. Only applicable for http and https protocols. Default is 1.
    deliveryPolicy : str, default is Undefined, optional
        JSON String with the delivery policy (retries, backoff, etc.) that will be used in the subscription - this only applies to HTTP/S subscriptions. Refer to the SNS docs for more details.
    endpoint : str, default is Undefined, optional
        Endpoint to send data to. The contents vary with the protocol. See details below.
    endpointAutoConfirms : bool, default is Undefined, optional
        Whether the endpoint is capable of auto confirming subscription (e.g., PagerDuty). Default is false.
    endpointRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRef, default is Undefined, optional
        endpoint ref
    endpointSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelector, default is Undefined, optional
        endpoint selector
    filterPolicy : str, default is Undefined, optional
        JSON String with the filter policy that will be used in the subscription to filter messages seen by the target resource. Refer to the SNS docs for more details.
    filterPolicyScope : str, default is Undefined, optional
        Whether the filter_policy applies to MessageAttributes (default) or MessageBody.
    $protocol : str, default is Undefined, optional
        Protocol to use. Valid values are: sqs, sms, lambda, firehose, and application. Protocols email, email-json, http and https are also valid but partially supported. See details below.
    rawMessageDelivery : bool, default is Undefined, optional
        Whether to enable raw message delivery (the original message is directly passed, not wrapped in JSON with the original message in the message property). Default is false.
    redrivePolicy : str, default is Undefined, optional
        JSON String with the redrive policy that will be used in the subscription. Refer to the SNS docs for more details.
    replayPolicy : str, default is Undefined, optional
        JSON String with the archived message replay policy that will be used in the subscription. Refer to the SNS docs for more details.
    subscriptionRoleArn : str, default is Undefined, optional
        ARN of the IAM role to publish to Kinesis Data Firehose delivery stream. Refer to SNS docs.
    subscriptionRoleArnRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRef, default is Undefined, optional
        subscription role arn ref
    subscriptionRoleArnSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelector, default is Undefined, optional
        subscription role arn selector
    topicArn : str, default is Undefined, optional
        ARN of the SNS topic to subscribe to.
    topicArnRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    confirmationTimeoutInMinutes?: float

    deliveryPolicy?: str

    endpoint?: str

    endpointAutoConfirms?: bool

    endpointRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRef

    endpointSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelector

    filterPolicy?: str

    filterPolicyScope?: str

    $protocol?: str

    rawMessageDelivery?: bool

    redrivePolicy?: str

    replayPolicy?: str

    subscriptionRoleArn?: str

    subscriptionRoleArnRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRef

    subscriptionRoleArnSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelector

    topicArn?: str

    topicArnRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRef

    topicArnSelector?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelector


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRef:
    r"""
    Reference to a Queue in sqs to populate endpoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelector:
    r"""
    Selector for a Queue in sqs to populate endpoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderEndpointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRef:
    r"""
    Reference to a Role in iam to populate subscriptionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate subscriptionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderSubscriptionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelectorPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecInitProviderTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRef

    metadata?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToMetadata

    name: str


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SnsAwsUpboundIoV1beta1TopicSubscriptionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SnsAwsUpboundIoV1beta1TopicSubscriptionStatus:
    r"""
    TopicSubscriptionStatus defines the observed state of TopicSubscription.

    Attributes
    ----------
    atProvider : SnsAwsUpboundIoV1beta1TopicSubscriptionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SnsAwsUpboundIoV1beta1TopicSubscriptionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SnsAwsUpboundIoV1beta1TopicSubscriptionStatusAtProvider

    conditions?: [SnsAwsUpboundIoV1beta1TopicSubscriptionStatusConditionsItems0]

    observedGeneration?: int


schema SnsAwsUpboundIoV1beta1TopicSubscriptionStatusAtProvider:
    r"""
    sns aws upbound io v1beta1 topic subscription status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the subscription.
    confirmationTimeoutInMinutes : float, default is Undefined, optional
        Integer indicating number of minutes to wait in retrying mode for fetching subscription arn before marking it as failure. Only applicable for http and https protocols. Default is 1.
    confirmationWasAuthenticated : bool, default is Undefined, optional
        Whether the subscription confirmation request was authenticated.
    deliveryPolicy : str, default is Undefined, optional
        JSON String with the delivery policy (retries, backoff, etc.) that will be used in the subscription - this only applies to HTTP/S subscriptions. Refer to the SNS docs for more details.
    endpoint : str, default is Undefined, optional
        Endpoint to send data to. The contents vary with the protocol. See details below.
    endpointAutoConfirms : bool, default is Undefined, optional
        Whether the endpoint is capable of auto confirming subscription (e.g., PagerDuty). Default is false.
    filterPolicy : str, default is Undefined, optional
        JSON String with the filter policy that will be used in the subscription to filter messages seen by the target resource. Refer to the SNS docs for more details.
    filterPolicyScope : str, default is Undefined, optional
        Whether the filter_policy applies to MessageAttributes (default) or MessageBody.
    id : str, default is Undefined, optional
        ARN of the subscription.
    ownerId : str, default is Undefined, optional
        AWS account ID of the subscription's owner.
    pendingConfirmation : bool, default is Undefined, optional
        Whether the subscription has not been confirmed.
    $protocol : str, default is Undefined, optional
        Protocol to use. Valid values are: sqs, sms, lambda, firehose, and application. Protocols email, email-json, http and https are also valid but partially supported. See details below.
    rawMessageDelivery : bool, default is Undefined, optional
        Whether to enable raw message delivery (the original message is directly passed, not wrapped in JSON with the original message in the message property). Default is false.
    redrivePolicy : str, default is Undefined, optional
        JSON String with the redrive policy that will be used in the subscription. Refer to the SNS docs for more details.
    replayPolicy : str, default is Undefined, optional
        JSON String with the archived message replay policy that will be used in the subscription. Refer to the SNS docs for more details.
    subscriptionRoleArn : str, default is Undefined, optional
        ARN of the IAM role to publish to Kinesis Data Firehose delivery stream. Refer to SNS docs.
    topicArn : str, default is Undefined, optional
        ARN of the SNS topic to subscribe to.
    """


    arn?: str

    confirmationTimeoutInMinutes?: float

    confirmationWasAuthenticated?: bool

    deliveryPolicy?: str

    endpoint?: str

    endpointAutoConfirms?: bool

    filterPolicy?: str

    filterPolicyScope?: str

    id?: str

    ownerId?: str

    pendingConfirmation?: bool

    $protocol?: str

    rawMessageDelivery?: bool

    redrivePolicy?: str

    replayPolicy?: str

    subscriptionRoleArn?: str

    topicArn?: str


schema SnsAwsUpboundIoV1beta1TopicSubscriptionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


