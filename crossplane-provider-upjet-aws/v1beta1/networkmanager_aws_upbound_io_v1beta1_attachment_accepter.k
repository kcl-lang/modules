"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AttachmentAccepter:
    r"""
    AttachmentAccepter is the Schema for the AttachmentAccepters API.

    Attributes
    ----------
    apiVersion : str, default is "networkmanager.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AttachmentAccepter", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpec, default is Undefined, required
        spec
    status : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkmanager.aws.upbound.io/v1beta1" = "networkmanager.aws.upbound.io/v1beta1"

    kind: "AttachmentAccepter" = "AttachmentAccepter"

    metadata?: v1.ObjectMeta

    spec: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpec

    status?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatus


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpec:
    r"""
    AttachmentAccepterSpec defines the desired state of AttachmentAccepter

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProvider

    initProvider?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecWriteConnectionSecretToRef


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProvider:
    r"""
    networkmanager aws upbound io v1beta1 attachment accepter spec for provider

    Attributes
    ----------
    attachmentId : str, default is Undefined, optional
        The ID of the attachment.
    attachmentIdRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRef, default is Undefined, optional
        attachment Id ref
    attachmentIdSelector : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelector, default is Undefined, optional
        attachment Id selector
    attachmentType : str, default is Undefined, optional
        The type of attachment. Valid values can be found in the AWS Documentation
    attachmentTypeRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRef, default is Undefined, optional
        attachment type ref
    attachmentTypeSelector : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelector, default is Undefined, optional
        attachment type selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    attachmentId?: str

    attachmentIdRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRef

    attachmentIdSelector?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelector

    attachmentType?: str

    attachmentTypeRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRef

    attachmentTypeSelector?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelector

    region: str


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate attachmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate attachmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate attachmentType.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate attachmentType.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecForProviderAttachmentTypeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    attachmentId : str, default is Undefined, optional
        The ID of the attachment.
    attachmentIdRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRef, default is Undefined, optional
        attachment Id ref
    attachmentIdSelector : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelector, default is Undefined, optional
        attachment Id selector
    attachmentType : str, default is Undefined, optional
        The type of attachment. Valid values can be found in the AWS Documentation
    attachmentTypeRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRef, default is Undefined, optional
        attachment type ref
    attachmentTypeSelector : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelector, default is Undefined, optional
        attachment type selector
    """


    attachmentId?: str

    attachmentIdRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRef

    attachmentIdSelector?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelector

    attachmentType?: str

    attachmentTypeRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRef

    attachmentTypeSelector?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelector


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate attachmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate attachmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate attachmentType.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate attachmentType.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecInitProviderAttachmentTypeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatus:
    r"""
    AttachmentAccepterStatus defines the observed state of AttachmentAccepter.

    Attributes
    ----------
    atProvider : NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusAtProvider

    conditions?: [NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusConditionsItems0]

    observedGeneration?: int


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusAtProvider:
    r"""
    networkmanager aws upbound io v1beta1 attachment accepter status at provider

    Attributes
    ----------
    attachmentId : str, default is Undefined, optional
        The ID of the attachment.
    attachmentPolicyRuleNumber : float, default is Undefined, optional
        The policy rule number associated with the attachment.
    attachmentType : str, default is Undefined, optional
        The type of attachment. Valid values can be found in the AWS Documentation
    coreNetworkArn : str, default is Undefined, optional
        The ARN of a core network.
    coreNetworkId : str, default is Undefined, optional
        The id of a core network.
    edgeLocation : str, default is Undefined, optional
        The Region where the edge is located. This is returned for all attachment types except a Direct Connect gateway attachment, which instead returns edge_locations.
    edgeLocations : [str], default is Undefined, optional
        The edge locations that the Direct Connect gateway is associated with. This is returned only for Direct Connect gateway attachments. All other attachment types return edge_location
    id : str, default is Undefined, optional
        id
    ownerAccountId : str, default is Undefined, optional
        The ID of the attachment account owner.
    resourceArn : str, default is Undefined, optional
        The attachment resource ARN.
    segmentName : str, default is Undefined, optional
        The name of the segment attachment.
    state : str, default is Undefined, optional
        The state of the attachment.
    """


    attachmentId?: str

    attachmentPolicyRuleNumber?: float

    attachmentType?: str

    coreNetworkArn?: str

    coreNetworkId?: str

    edgeLocation?: str

    edgeLocations?: [str]

    id?: str

    ownerAccountId?: str

    resourceArn?: str

    segmentName?: str

    state?: str


schema NetworkmanagerAwsUpboundIoV1beta1AttachmentAccepterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


