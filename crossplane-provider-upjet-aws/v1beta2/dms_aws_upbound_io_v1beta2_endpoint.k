"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Endpoint:
    r"""
    Endpoint is the Schema for the Endpoints API. Provides a DMS (Data Migration Service) endpoint resource.

    Attributes
    ----------
    apiVersion : str, default is "dms.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Endpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DmsAwsUpboundIoV1beta2EndpointSpec, default is Undefined, required
        spec
    status : DmsAwsUpboundIoV1beta2EndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "dms.aws.upbound.io/v1beta2" = "dms.aws.upbound.io/v1beta2"

    kind: "Endpoint" = "Endpoint"

    metadata?: v1.ObjectMeta

    spec: DmsAwsUpboundIoV1beta2EndpointSpec

    status?: DmsAwsUpboundIoV1beta2EndpointStatus


schema DmsAwsUpboundIoV1beta2EndpointSpec:
    r"""
    EndpointSpec defines the desired state of Endpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DmsAwsUpboundIoV1beta2EndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : DmsAwsUpboundIoV1beta2EndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DmsAwsUpboundIoV1beta2EndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DmsAwsUpboundIoV1beta2EndpointSpecForProvider

    initProvider?: DmsAwsUpboundIoV1beta2EndpointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRef

    publishConnectionDetailsTo?: DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DmsAwsUpboundIoV1beta2EndpointSpecWriteConnectionSecretToRef


schema DmsAwsUpboundIoV1beta2EndpointSpecForProvider:
    r"""
    dms aws upbound io v1beta2 endpoint spec for provider

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    databaseName : str, default is Undefined, optional
        Name of the endpoint database.
    elasticsearchSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderElasticsearchSettings, default is Undefined, optional
        elasticsearch settings
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    engineName : str, default is Undefined, optional
        Type of engine for the endpoint. Valid values are aurora, aurora-postgresql, aurora-serverless, aurora-postgresql-serverless,azuredb, azure-sql-managed-instance, babelfish, db2, db2-zos, docdb, dynamodb, elasticsearch, kafka, kinesis, mariadb, mongodb, mysql, opensearch, oracle, postgres, redshift,redshift-serverless, s3, sqlserver, neptune ,sybase. Please note that some of engine names are available only for target endpoint type (e.g. redshift).
    extraConnectionAttributes : str, default is Undefined, optional
        Additional attributes associated with the connection. For available attributes for a source Endpoint, see Sources for data migration. For available attributes for a target Endpoint, see Targets for data migration.
    kafkaSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettings, default is Undefined, optional
        kafka settings
    kinesisSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKinesisSettings, default is Undefined, optional
        kinesis settings
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter s3_settings.server_side_encryption_kms_key_id. When engine_name is redshift, kms_key_arn is the KMS Key for the Redshift target and the parameter redshift_settings.server_side_encryption_kms_key_id encrypts the S3 intermediate storage.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    mongodbSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderMongodbSettings, default is Undefined, optional
        mongodb settings
    passwordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    pauseReplicationTasks : bool, default is Undefined, optional
        Only tasks paused by the resource will be restarted after the modification completes. Default is false.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    postgresSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderPostgresSettings, default is Undefined, optional
        postgres settings
    redisSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettings, default is Undefined, optional
        redis settings
    redshiftSettings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedshiftSettings, default is Undefined, optional
        redshift settings
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    s3Settings : DmsAwsUpboundIoV1beta2EndpointSpecForProviderS3Settings, default is Undefined, optional
        s3 settings
    secretsManagerAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in the Secrets Manager secret referred to by secrets_manager_arn. The role must allow the iam:PassRole action.
    secretsManagerAccessRoleArnRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRef, default is Undefined, optional
        secrets manager access role arn ref
    secretsManagerAccessRoleArnSelector : DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelector, default is Undefined, optional
        secrets manager access role arn selector
    secretsManagerArn : str, default is Undefined, optional
        text values for username, password , server_name, and port. You can't specify both.
    serverName : str, default is Undefined, optional
        Host name of the server.
    serviceAccessRole : str, default is Undefined, optional
        ARN used by the service access IAM role for dynamodb endpoints.
    serviceAccessRoleRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRef, default is Undefined, optional
        service access role ref
    serviceAccessRoleSelector : DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelector, default is Undefined, optional
        service access role selector
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    username : str, default is Undefined, optional
        User name to be used to login to the endpoint database.
    """


    certificateArn?: str

    databaseName?: str

    elasticsearchSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderElasticsearchSettings

    endpointType?: str

    engineName?: str

    extraConnectionAttributes?: str

    kafkaSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettings

    kinesisSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKinesisSettings

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelector

    mongodbSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderMongodbSettings

    passwordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderPasswordSecretRef

    pauseReplicationTasks?: bool

    port?: float

    postgresSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderPostgresSettings

    redisSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettings

    redshiftSettings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedshiftSettings

    region: str

    s3Settings?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderS3Settings

    secretsManagerAccessRoleArn?: str

    secretsManagerAccessRoleArnRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRef

    secretsManagerAccessRoleArnSelector?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelector

    secretsManagerArn?: str

    serverName?: str

    serviceAccessRole?: str

    serviceAccessRoleRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRef

    serviceAccessRoleSelector?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelector

    sslMode?: str

    tags?: {str:str}

    username?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderElasticsearchSettings:
    r"""
    Configuration block for OpenSearch settings. See below.

    Attributes
    ----------
    endpointUri : str, default is Undefined, optional
        Endpoint for the OpenSearch cluster.
    errorRetryDuration : float, default is Undefined, optional
        Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is 300.
    fullLoadErrorPercentage : float, default is Undefined, optional
        Maximum percentage of records that can fail to be written before a full load operation stops. Default is 10.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the OpenSearch cluster.
    useNewMappingType : bool, default is Undefined, optional
        Enable to migrate documentation using the documentation type _doc. OpenSearch and an Elasticsearch clusters only support the _doc documentation type in versions 7.x and later. The default value is false.
    """


    endpointUri?: str

    errorRetryDuration?: float

    fullLoadErrorPercentage?: float

    serviceAccessRoleArn?: str

    useNewMappingType?: bool


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettings:
    r"""
    Configuration block for Kafka settings. See below.

    Attributes
    ----------
    broker : str, default is Undefined, optional
        Kafka broker location. Specify in the form broker-hostname-or-ip:port.
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns for records migrated to the endpoint. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kafka message output unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data, such as rename-table, drop-table, add-column, drop-column, and rename-column. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for transaction_id, previous transaction_id, and transaction_record_id (the record offset within a transaction). Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created on the endpoint. Message format is JSON (default) or JSON_UNFORMATTED (a single line with no tab).
    messageMaxBytes : float, default is Undefined, optional
        Maximum size in bytes for records created on the endpoint Default is 1,000,000.
    noHexPrefix : bool, default is Undefined, optional
        Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the no_hex_prefix endpoint setting to enable migration of RAW data type columns without adding the '0x' prefix.
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. Default is false.
    saslPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSaslPasswordSecretRef, default is Undefined, optional
        sasl password secret ref
    saslUsername : str, default is Undefined, optional
        Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
    securityProtocol : str, default is Undefined, optional
        Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include ssl-encryption, ssl-authentication, and sasl-ssl. sasl-ssl requires sasl_username and sasl_password.
    sslCaCertificateArn : str, default is Undefined, optional
        ARN for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
    sslClientCertificateArn : str, default is Undefined, optional
        ARN of the client certificate used to securely connect to a Kafka target endpoint.
    sslClientKeyArn : str, default is Undefined, optional
        ARN for the client private key used to securely connect to a Kafka target endpoint.
    sslClientKeyPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSslClientKeyPasswordSecretRef, default is Undefined, optional
        ssl client key password secret ref
    topic : str, default is Undefined, optional
        Kafka topic for migration. Default is kafka-default-topic.
    """


    broker?: str

    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    messageMaxBytes?: float

    noHexPrefix?: bool

    partitionIncludeSchemaTable?: bool

    saslPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSaslPasswordSecretRef

    saslUsername?: str

    securityProtocol?: str

    sslCaCertificateArn?: str

    sslClientCertificateArn?: str

    sslClientKeyArn?: str

    sslClientKeyPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSslClientKeyPasswordSecretRef

    topic?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSaslPasswordSecretRef:
    r"""
    Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKafkaSettingsSslClientKeyPasswordSecretRef:
    r"""
    Password for the client private key used to securely connect to a Kafka target endpoint.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKinesisSettings:
    r"""
    Configuration block for Kinesis settings. See below.

    Attributes
    ----------
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns in the target. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created. Default is json. Valid values are json and json-unformatted (a single line with no tab).
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is false.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the Kinesis data stream.
    streamArn : str, default is Undefined, optional
        ARN of the Kinesis data stream.
    """


    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    partitionIncludeSchemaTable?: bool

    serviceAccessRoleArn?: str

    streamArn?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderMongodbSettings:
    r"""
    Configuration block for MongoDB settings. See below.

    Attributes
    ----------
    authMechanism : str, default is Undefined, optional
        Authentication mechanism to access the MongoDB source endpoint. Default is default.
    authSource : str, default is Undefined, optional
        Authentication database name. Not used when auth_type is no. Default is admin.
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    docsToInvestigate : str, default is Undefined, optional
        Number of documents to preview to determine the document organization. Use this setting when nesting_level is set to one. Default is 1000.
    extractDocId : str, default is Undefined, optional
        Document ID. Use this setting when nesting_level is set to none. Default is false.
    nestingLevel : str, default is Undefined, optional
        Specifies either document or table mode. Default is none. Valid values are one (table mode) and none (document mode).
    """


    authMechanism?: str

    authSource?: str

    authType?: str

    docsToInvestigate?: str

    extractDocId?: str

    nestingLevel?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderPasswordSecretRef:
    r"""
    Password to be used to login to the endpoint database.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderPostgresSettings:
    r"""
    Configuration block for Postgres settings. See below.

    Attributes
    ----------
    afterConnectScript : str, default is Undefined, optional
        For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.
    babelfishDatabaseName : str, default is Undefined, optional
        The Babelfish for Aurora PostgreSQL database name for the endpoint.
    captureDdls : bool, default is Undefined, optional
        To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.
    databaseMode : str, default is Undefined, optional
        Specifies the default behavior of the replication's handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.
    ddlArtifactsSchema : str, default is Undefined, optional
        Sets the schema in which the operational DDL database artifacts are created. Default is public.
    executeTimeout : float, default is Undefined, optional
        Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is 60.
    failTasksOnLobTruncation : bool, default is Undefined, optional
        When set to true, this value causes a task to fail if the actual size of a LOB column is greater than the specified LobMaxSize. Default is false.
    heartbeatEnable : bool, default is Undefined, optional
        The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.
    heartbeatFrequency : float, default is Undefined, optional
        Sets the WAL heartbeat frequency (in minutes). Default value is 5.
    heartbeatSchema : str, default is Undefined, optional
        Sets the schema in which the heartbeat artifacts are created. Default value is public.
    mapBooleanAsBoolean : bool, default is Undefined, optional
        You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is false.
    mapJsonbAsClob : bool, default is Undefined, optional
        Optional When true, DMS migrates JSONB values as CLOB.
    mapLongVarcharAs : str, default is Undefined, optional
        Optional When true, DMS migrates LONG values as VARCHAR.
    maxFileSize : float, default is Undefined, optional
        Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is 32,768 KB.
    pluginName : str, default is Undefined, optional
        Specifies the plugin to use to create a replication slot. Valid values: pglogical, test_decoding.
    slotName : str, default is Undefined, optional
        Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.
    """


    afterConnectScript?: str

    babelfishDatabaseName?: str

    captureDdls?: bool

    databaseMode?: str

    ddlArtifactsSchema?: str

    executeTimeout?: float

    failTasksOnLobTruncation?: bool

    heartbeatEnable?: bool

    heartbeatFrequency?: float

    heartbeatSchema?: str

    mapBooleanAsBoolean?: bool

    mapJsonbAsClob?: bool

    mapLongVarcharAs?: str

    maxFileSize?: float

    pluginName?: str

    slotName?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettings:
    r"""
    dms aws upbound io v1beta2 endpoint spec for provider redis settings

    Attributes
    ----------
    authPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettingsAuthPasswordSecretRef, default is Undefined, optional
        auth password secret ref
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    authUserName : str, default is Undefined, optional
        The username provided with the auth-role option of the AuthType setting for a Redis target endpoint.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    serverName : str, default is Undefined, optional
        Host name of the server.
    sslCaCertificateArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
    sslSecurityProtocol : str, default is Undefined, optional
        The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include plaintext, ssl-encryption. The default is ssl-encryption.
    """


    authPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettingsAuthPasswordSecretRef

    authType?: str

    authUserName?: str

    port?: float

    serverName?: str

    sslCaCertificateArn?: str

    sslSecurityProtocol?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedisSettingsAuthPasswordSecretRef:
    r"""
    The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderRedshiftSettings:
    r"""
    Configuration block for Redshift settings. See below.

    Attributes
    ----------
    bucketFolder : str, default is Undefined, optional
        Custom S3 Bucket Object prefix for intermediate storage.
    bucketName : str, default is Undefined, optional
        Custom S3 Bucket name for intermediate storage.
    encryptionMode : str, default is Undefined, optional
        The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to SSE_S3. Valid values are SSE_S3 and SSE_KMS.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.
    """


    bucketFolder?: str

    bucketName?: str

    encryptionMode?: str

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderS3Settings:
    r"""
    (Deprecated, use the aws_dms_s3_endpoint resource instead) Configuration block for S3 settings. See below.
    This argument is deprecated and will be removed in a future version; use aws_dms_s3_endpoint instead

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is 60.
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. Default is 32000. NOTE: Previously, this setting was measured in megabytes but now represents kilobytes. Update configurations accordingly.
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Default is NONE. Valid values are GZIP and NONE.
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        String to use for all columns not included in the supplemental log.
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target.
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is \n.
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet. Default is csv.
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. Default is 1048576 (1 MiB).
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. Default is SLASH.
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false.
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. Default is YYYYMMDD.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. Default is 1048576 (1 MiB).
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. Default is rle_dictionary.
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. Default is SSE_S3.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. Default is 0.
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. Default is 1048576 (1 GB).
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false.
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Default is parquet-1-0. Valid values are parquet-1-0 and parquet-2-0.
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false.
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. Default is 10000.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log.
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time. When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate secretsManagerAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate secretsManagerAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderSecretsManagerAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRef:
    r"""
    Reference to a Role in iam to populate serviceAccessRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceAccessRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecForProviderServiceAccessRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    databaseName : str, default is Undefined, optional
        Name of the endpoint database.
    elasticsearchSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderElasticsearchSettings, default is Undefined, optional
        elasticsearch settings
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    engineName : str, default is Undefined, optional
        Type of engine for the endpoint. Valid values are aurora, aurora-postgresql, aurora-serverless, aurora-postgresql-serverless,azuredb, azure-sql-managed-instance, babelfish, db2, db2-zos, docdb, dynamodb, elasticsearch, kafka, kinesis, mariadb, mongodb, mysql, opensearch, oracle, postgres, redshift,redshift-serverless, s3, sqlserver, neptune ,sybase. Please note that some of engine names are available only for target endpoint type (e.g. redshift).
    extraConnectionAttributes : str, default is Undefined, optional
        Additional attributes associated with the connection. For available attributes for a source Endpoint, see Sources for data migration. For available attributes for a target Endpoint, see Targets for data migration.
    kafkaSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettings, default is Undefined, optional
        kafka settings
    kinesisSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKinesisSettings, default is Undefined, optional
        kinesis settings
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter s3_settings.server_side_encryption_kms_key_id. When engine_name is redshift, kms_key_arn is the KMS Key for the Redshift target and the parameter redshift_settings.server_side_encryption_kms_key_id encrypts the S3 intermediate storage.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    mongodbSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderMongodbSettings, default is Undefined, optional
        mongodb settings
    passwordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    pauseReplicationTasks : bool, default is Undefined, optional
        Only tasks paused by the resource will be restarted after the modification completes. Default is false.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    postgresSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPostgresSettings, default is Undefined, optional
        postgres settings
    redisSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettings, default is Undefined, optional
        redis settings
    redshiftSettings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedshiftSettings, default is Undefined, optional
        redshift settings
    s3Settings : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderS3Settings, default is Undefined, optional
        s3 settings
    secretsManagerAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in the Secrets Manager secret referred to by secrets_manager_arn. The role must allow the iam:PassRole action.
    secretsManagerAccessRoleArnRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRef, default is Undefined, optional
        secrets manager access role arn ref
    secretsManagerAccessRoleArnSelector : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelector, default is Undefined, optional
        secrets manager access role arn selector
    secretsManagerArn : str, default is Undefined, optional
        text values for username, password , server_name, and port. You can't specify both.
    serverName : str, default is Undefined, optional
        Host name of the server.
    serviceAccessRole : str, default is Undefined, optional
        ARN used by the service access IAM role for dynamodb endpoints.
    serviceAccessRoleRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRef, default is Undefined, optional
        service access role ref
    serviceAccessRoleSelector : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelector, default is Undefined, optional
        service access role selector
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    username : str, default is Undefined, optional
        User name to be used to login to the endpoint database.
    """


    certificateArn?: str

    databaseName?: str

    elasticsearchSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderElasticsearchSettings

    endpointType?: str

    engineName?: str

    extraConnectionAttributes?: str

    kafkaSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettings

    kinesisSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKinesisSettings

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelector

    mongodbSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderMongodbSettings

    passwordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPasswordSecretRef

    pauseReplicationTasks?: bool

    port?: float

    postgresSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPostgresSettings

    redisSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettings

    redshiftSettings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedshiftSettings

    s3Settings?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderS3Settings

    secretsManagerAccessRoleArn?: str

    secretsManagerAccessRoleArnRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRef

    secretsManagerAccessRoleArnSelector?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelector

    secretsManagerArn?: str

    serverName?: str

    serviceAccessRole?: str

    serviceAccessRoleRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRef

    serviceAccessRoleSelector?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelector

    sslMode?: str

    tags?: {str:str}

    username?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderElasticsearchSettings:
    r"""
    Configuration block for OpenSearch settings. See below.

    Attributes
    ----------
    endpointUri : str, default is Undefined, optional
        Endpoint for the OpenSearch cluster.
    errorRetryDuration : float, default is Undefined, optional
        Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is 300.
    fullLoadErrorPercentage : float, default is Undefined, optional
        Maximum percentage of records that can fail to be written before a full load operation stops. Default is 10.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the OpenSearch cluster.
    useNewMappingType : bool, default is Undefined, optional
        Enable to migrate documentation using the documentation type _doc. OpenSearch and an Elasticsearch clusters only support the _doc documentation type in versions 7.x and later. The default value is false.
    """


    endpointUri?: str

    errorRetryDuration?: float

    fullLoadErrorPercentage?: float

    serviceAccessRoleArn?: str

    useNewMappingType?: bool


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettings:
    r"""
    Configuration block for Kafka settings. See below.

    Attributes
    ----------
    broker : str, default is Undefined, optional
        Kafka broker location. Specify in the form broker-hostname-or-ip:port.
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns for records migrated to the endpoint. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kafka message output unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data, such as rename-table, drop-table, add-column, drop-column, and rename-column. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for transaction_id, previous transaction_id, and transaction_record_id (the record offset within a transaction). Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created on the endpoint. Message format is JSON (default) or JSON_UNFORMATTED (a single line with no tab).
    messageMaxBytes : float, default is Undefined, optional
        Maximum size in bytes for records created on the endpoint Default is 1,000,000.
    noHexPrefix : bool, default is Undefined, optional
        Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the no_hex_prefix endpoint setting to enable migration of RAW data type columns without adding the '0x' prefix.
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. Default is false.
    saslPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSaslPasswordSecretRef, default is Undefined, optional
        sasl password secret ref
    saslUsername : str, default is Undefined, optional
        Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
    securityProtocol : str, default is Undefined, optional
        Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include ssl-encryption, ssl-authentication, and sasl-ssl. sasl-ssl requires sasl_username and sasl_password.
    sslCaCertificateArn : str, default is Undefined, optional
        ARN for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
    sslClientCertificateArn : str, default is Undefined, optional
        ARN of the client certificate used to securely connect to a Kafka target endpoint.
    sslClientKeyArn : str, default is Undefined, optional
        ARN for the client private key used to securely connect to a Kafka target endpoint.
    sslClientKeyPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSslClientKeyPasswordSecretRef, default is Undefined, optional
        ssl client key password secret ref
    topic : str, default is Undefined, optional
        Kafka topic for migration. Default is kafka-default-topic.
    """


    broker?: str

    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    messageMaxBytes?: float

    noHexPrefix?: bool

    partitionIncludeSchemaTable?: bool

    saslPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSaslPasswordSecretRef

    saslUsername?: str

    securityProtocol?: str

    sslCaCertificateArn?: str

    sslClientCertificateArn?: str

    sslClientKeyArn?: str

    sslClientKeyPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSslClientKeyPasswordSecretRef

    topic?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSaslPasswordSecretRef:
    r"""
    Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKafkaSettingsSslClientKeyPasswordSecretRef:
    r"""
    Password for the client private key used to securely connect to a Kafka target endpoint.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKinesisSettings:
    r"""
    Configuration block for Kinesis settings. See below.

    Attributes
    ----------
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns in the target. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created. Default is json. Valid values are json and json-unformatted (a single line with no tab).
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is false.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the Kinesis data stream.
    streamArn : str, default is Undefined, optional
        ARN of the Kinesis data stream.
    """


    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    partitionIncludeSchemaTable?: bool

    serviceAccessRoleArn?: str

    streamArn?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderMongodbSettings:
    r"""
    Configuration block for MongoDB settings. See below.

    Attributes
    ----------
    authMechanism : str, default is Undefined, optional
        Authentication mechanism to access the MongoDB source endpoint. Default is default.
    authSource : str, default is Undefined, optional
        Authentication database name. Not used when auth_type is no. Default is admin.
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    docsToInvestigate : str, default is Undefined, optional
        Number of documents to preview to determine the document organization. Use this setting when nesting_level is set to one. Default is 1000.
    extractDocId : str, default is Undefined, optional
        Document ID. Use this setting when nesting_level is set to none. Default is false.
    nestingLevel : str, default is Undefined, optional
        Specifies either document or table mode. Default is none. Valid values are one (table mode) and none (document mode).
    """


    authMechanism?: str

    authSource?: str

    authType?: str

    docsToInvestigate?: str

    extractDocId?: str

    nestingLevel?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPasswordSecretRef:
    r"""
    Password to be used to login to the endpoint database.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderPostgresSettings:
    r"""
    Configuration block for Postgres settings. See below.

    Attributes
    ----------
    afterConnectScript : str, default is Undefined, optional
        For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.
    babelfishDatabaseName : str, default is Undefined, optional
        The Babelfish for Aurora PostgreSQL database name for the endpoint.
    captureDdls : bool, default is Undefined, optional
        To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.
    databaseMode : str, default is Undefined, optional
        Specifies the default behavior of the replication's handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.
    ddlArtifactsSchema : str, default is Undefined, optional
        Sets the schema in which the operational DDL database artifacts are created. Default is public.
    executeTimeout : float, default is Undefined, optional
        Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is 60.
    failTasksOnLobTruncation : bool, default is Undefined, optional
        When set to true, this value causes a task to fail if the actual size of a LOB column is greater than the specified LobMaxSize. Default is false.
    heartbeatEnable : bool, default is Undefined, optional
        The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.
    heartbeatFrequency : float, default is Undefined, optional
        Sets the WAL heartbeat frequency (in minutes). Default value is 5.
    heartbeatSchema : str, default is Undefined, optional
        Sets the schema in which the heartbeat artifacts are created. Default value is public.
    mapBooleanAsBoolean : bool, default is Undefined, optional
        You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is false.
    mapJsonbAsClob : bool, default is Undefined, optional
        Optional When true, DMS migrates JSONB values as CLOB.
    mapLongVarcharAs : str, default is Undefined, optional
        Optional When true, DMS migrates LONG values as VARCHAR.
    maxFileSize : float, default is Undefined, optional
        Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is 32,768 KB.
    pluginName : str, default is Undefined, optional
        Specifies the plugin to use to create a replication slot. Valid values: pglogical, test_decoding.
    slotName : str, default is Undefined, optional
        Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.
    """


    afterConnectScript?: str

    babelfishDatabaseName?: str

    captureDdls?: bool

    databaseMode?: str

    ddlArtifactsSchema?: str

    executeTimeout?: float

    failTasksOnLobTruncation?: bool

    heartbeatEnable?: bool

    heartbeatFrequency?: float

    heartbeatSchema?: str

    mapBooleanAsBoolean?: bool

    mapJsonbAsClob?: bool

    mapLongVarcharAs?: str

    maxFileSize?: float

    pluginName?: str

    slotName?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettings:
    r"""
    dms aws upbound io v1beta2 endpoint spec init provider redis settings

    Attributes
    ----------
    authPasswordSecretRef : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettingsAuthPasswordSecretRef, default is Undefined, optional
        auth password secret ref
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    authUserName : str, default is Undefined, optional
        The username provided with the auth-role option of the AuthType setting for a Redis target endpoint.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    serverName : str, default is Undefined, optional
        Host name of the server.
    sslCaCertificateArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
    sslSecurityProtocol : str, default is Undefined, optional
        The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include plaintext, ssl-encryption. The default is ssl-encryption.
    """


    authPasswordSecretRef?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettingsAuthPasswordSecretRef

    authType?: str

    authUserName?: str

    port?: float

    serverName?: str

    sslCaCertificateArn?: str

    sslSecurityProtocol?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedisSettingsAuthPasswordSecretRef:
    r"""
    The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderRedshiftSettings:
    r"""
    Configuration block for Redshift settings. See below.

    Attributes
    ----------
    bucketFolder : str, default is Undefined, optional
        Custom S3 Bucket Object prefix for intermediate storage.
    bucketName : str, default is Undefined, optional
        Custom S3 Bucket name for intermediate storage.
    encryptionMode : str, default is Undefined, optional
        The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to SSE_S3. Valid values are SSE_S3 and SSE_KMS.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.
    """


    bucketFolder?: str

    bucketName?: str

    encryptionMode?: str

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderS3Settings:
    r"""
    (Deprecated, use the aws_dms_s3_endpoint resource instead) Configuration block for S3 settings. See below.
    This argument is deprecated and will be removed in a future version; use aws_dms_s3_endpoint instead

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is 60.
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. Default is 32000. NOTE: Previously, this setting was measured in megabytes but now represents kilobytes. Update configurations accordingly.
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Default is NONE. Valid values are GZIP and NONE.
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        String to use for all columns not included in the supplemental log.
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target.
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is \n.
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet. Default is csv.
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. Default is 1048576 (1 MiB).
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. Default is SLASH.
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false.
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. Default is YYYYMMDD.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. Default is 1048576 (1 MiB).
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. Default is rle_dictionary.
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. Default is SSE_S3.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. Default is 0.
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. Default is 1048576 (1 GB).
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false.
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Default is parquet-1-0. Valid values are parquet-1-0 and parquet-2-0.
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false.
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. Default is 10000.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log.
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time. When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate secretsManagerAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate secretsManagerAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderSecretsManagerAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRef:
    r"""
    Reference to a Role in iam to populate serviceAccessRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceAccessRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelectorPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecInitProviderServiceAccessRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta2EndpointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DmsAwsUpboundIoV1beta2EndpointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta2EndpointStatus:
    r"""
    EndpointStatus defines the observed state of Endpoint.

    Attributes
    ----------
    atProvider : DmsAwsUpboundIoV1beta2EndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DmsAwsUpboundIoV1beta2EndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DmsAwsUpboundIoV1beta2EndpointStatusAtProvider

    conditions?: [DmsAwsUpboundIoV1beta2EndpointStatusConditionsItems0]

    observedGeneration?: int


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProvider:
    r"""
    dms aws upbound io v1beta2 endpoint status at provider

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    databaseName : str, default is Undefined, optional
        Name of the endpoint database.
    elasticsearchSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderElasticsearchSettings, default is Undefined, optional
        elasticsearch settings
    endpointArn : str, default is Undefined, optional
        ARN for the endpoint.
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    engineName : str, default is Undefined, optional
        Type of engine for the endpoint. Valid values are aurora, aurora-postgresql, aurora-serverless, aurora-postgresql-serverless,azuredb, azure-sql-managed-instance, babelfish, db2, db2-zos, docdb, dynamodb, elasticsearch, kafka, kinesis, mariadb, mongodb, mysql, opensearch, oracle, postgres, redshift,redshift-serverless, s3, sqlserver, neptune ,sybase. Please note that some of engine names are available only for target endpoint type (e.g. redshift).
    extraConnectionAttributes : str, default is Undefined, optional
        Additional attributes associated with the connection. For available attributes for a source Endpoint, see Sources for data migration. For available attributes for a target Endpoint, see Targets for data migration.
    id : str, default is Undefined, optional
        id
    kafkaSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKafkaSettings, default is Undefined, optional
        kafka settings
    kinesisSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKinesisSettings, default is Undefined, optional
        kinesis settings
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter s3_settings.server_side_encryption_kms_key_id. When engine_name is redshift, kms_key_arn is the KMS Key for the Redshift target and the parameter redshift_settings.server_side_encryption_kms_key_id encrypts the S3 intermediate storage.
    mongodbSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderMongodbSettings, default is Undefined, optional
        mongodb settings
    pauseReplicationTasks : bool, default is Undefined, optional
        Only tasks paused by the resource will be restarted after the modification completes. Default is false.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    postgresSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderPostgresSettings, default is Undefined, optional
        postgres settings
    redisSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedisSettings, default is Undefined, optional
        redis settings
    redshiftSettings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedshiftSettings, default is Undefined, optional
        redshift settings
    s3Settings : DmsAwsUpboundIoV1beta2EndpointStatusAtProviderS3Settings, default is Undefined, optional
        s3 settings
    secretsManagerAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in the Secrets Manager secret referred to by secrets_manager_arn. The role must allow the iam:PassRole action.
    secretsManagerArn : str, default is Undefined, optional
        text values for username, password , server_name, and port. You can't specify both.
    serverName : str, default is Undefined, optional
        Host name of the server.
    serviceAccessRole : str, default is Undefined, optional
        ARN used by the service access IAM role for dynamodb endpoints.
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    username : str, default is Undefined, optional
        User name to be used to login to the endpoint database.
    """


    certificateArn?: str

    databaseName?: str

    elasticsearchSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderElasticsearchSettings

    endpointArn?: str

    endpointType?: str

    engineName?: str

    extraConnectionAttributes?: str

    id?: str

    kafkaSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKafkaSettings

    kinesisSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKinesisSettings

    kmsKeyArn?: str

    mongodbSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderMongodbSettings

    pauseReplicationTasks?: bool

    port?: float

    postgresSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderPostgresSettings

    redisSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedisSettings

    redshiftSettings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedshiftSettings

    s3Settings?: DmsAwsUpboundIoV1beta2EndpointStatusAtProviderS3Settings

    secretsManagerAccessRoleArn?: str

    secretsManagerArn?: str

    serverName?: str

    serviceAccessRole?: str

    sslMode?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    username?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderElasticsearchSettings:
    r"""
    Configuration block for OpenSearch settings. See below.

    Attributes
    ----------
    endpointUri : str, default is Undefined, optional
        Endpoint for the OpenSearch cluster.
    errorRetryDuration : float, default is Undefined, optional
        Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is 300.
    fullLoadErrorPercentage : float, default is Undefined, optional
        Maximum percentage of records that can fail to be written before a full load operation stops. Default is 10.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the OpenSearch cluster.
    useNewMappingType : bool, default is Undefined, optional
        Enable to migrate documentation using the documentation type _doc. OpenSearch and an Elasticsearch clusters only support the _doc documentation type in versions 7.x and later. The default value is false.
    """


    endpointUri?: str

    errorRetryDuration?: float

    fullLoadErrorPercentage?: float

    serviceAccessRoleArn?: str

    useNewMappingType?: bool


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKafkaSettings:
    r"""
    Configuration block for Kafka settings. See below.

    Attributes
    ----------
    broker : str, default is Undefined, optional
        Kafka broker location. Specify in the form broker-hostname-or-ip:port.
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns for records migrated to the endpoint. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kafka message output unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data, such as rename-table, drop-table, add-column, drop-column, and rename-column. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for transaction_id, previous transaction_id, and transaction_record_id (the record offset within a transaction). Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created on the endpoint. Message format is JSON (default) or JSON_UNFORMATTED (a single line with no tab).
    messageMaxBytes : float, default is Undefined, optional
        Maximum size in bytes for records created on the endpoint Default is 1,000,000.
    noHexPrefix : bool, default is Undefined, optional
        Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the no_hex_prefix endpoint setting to enable migration of RAW data type columns without adding the '0x' prefix.
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. Default is false.
    saslUsername : str, default is Undefined, optional
        Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
    securityProtocol : str, default is Undefined, optional
        Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include ssl-encryption, ssl-authentication, and sasl-ssl. sasl-ssl requires sasl_username and sasl_password.
    sslCaCertificateArn : str, default is Undefined, optional
        ARN for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.
    sslClientCertificateArn : str, default is Undefined, optional
        ARN of the client certificate used to securely connect to a Kafka target endpoint.
    sslClientKeyArn : str, default is Undefined, optional
        ARN for the client private key used to securely connect to a Kafka target endpoint.
    topic : str, default is Undefined, optional
        Kafka topic for migration. Default is kafka-default-topic.
    """


    broker?: str

    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    messageMaxBytes?: float

    noHexPrefix?: bool

    partitionIncludeSchemaTable?: bool

    saslUsername?: str

    securityProtocol?: str

    sslCaCertificateArn?: str

    sslClientCertificateArn?: str

    sslClientKeyArn?: str

    topic?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderKinesisSettings:
    r"""
    Configuration block for Kinesis settings. See below.

    Attributes
    ----------
    includeControlDetails : bool, default is Undefined, optional
        Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is false.
    includeNullAndEmpty : bool, default is Undefined, optional
        Include NULL and empty columns in the target. Default is false.
    includePartitionValue : bool, default is Undefined, optional
        Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is false.
    includeTableAlterOperations : bool, default is Undefined, optional
        Includes any data definition language (DDL) operations that change the table in the control data. Default is false.
    includeTransactionDetails : bool, default is Undefined, optional
        Provides detailed transaction information from the source database. Default is false.
    messageFormat : str, default is Undefined, optional
        Output format for the records created. Default is json. Valid values are json and json-unformatted (a single line with no tab).
    partitionIncludeSchemaTable : bool, default is Undefined, optional
        Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is false.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to write to the Kinesis data stream.
    streamArn : str, default is Undefined, optional
        ARN of the Kinesis data stream.
    """


    includeControlDetails?: bool

    includeNullAndEmpty?: bool

    includePartitionValue?: bool

    includeTableAlterOperations?: bool

    includeTransactionDetails?: bool

    messageFormat?: str

    partitionIncludeSchemaTable?: bool

    serviceAccessRoleArn?: str

    streamArn?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderMongodbSettings:
    r"""
    Configuration block for MongoDB settings. See below.

    Attributes
    ----------
    authMechanism : str, default is Undefined, optional
        Authentication mechanism to access the MongoDB source endpoint. Default is default.
    authSource : str, default is Undefined, optional
        Authentication database name. Not used when auth_type is no. Default is admin.
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    docsToInvestigate : str, default is Undefined, optional
        Number of documents to preview to determine the document organization. Use this setting when nesting_level is set to one. Default is 1000.
    extractDocId : str, default is Undefined, optional
        Document ID. Use this setting when nesting_level is set to none. Default is false.
    nestingLevel : str, default is Undefined, optional
        Specifies either document or table mode. Default is none. Valid values are one (table mode) and none (document mode).
    """


    authMechanism?: str

    authSource?: str

    authType?: str

    docsToInvestigate?: str

    extractDocId?: str

    nestingLevel?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderPostgresSettings:
    r"""
    Configuration block for Postgres settings. See below.

    Attributes
    ----------
    afterConnectScript : str, default is Undefined, optional
        For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.
    babelfishDatabaseName : str, default is Undefined, optional
        The Babelfish for Aurora PostgreSQL database name for the endpoint.
    captureDdls : bool, default is Undefined, optional
        To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.
    databaseMode : str, default is Undefined, optional
        Specifies the default behavior of the replication's handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.
    ddlArtifactsSchema : str, default is Undefined, optional
        Sets the schema in which the operational DDL database artifacts are created. Default is public.
    executeTimeout : float, default is Undefined, optional
        Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is 60.
    failTasksOnLobTruncation : bool, default is Undefined, optional
        When set to true, this value causes a task to fail if the actual size of a LOB column is greater than the specified LobMaxSize. Default is false.
    heartbeatEnable : bool, default is Undefined, optional
        The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.
    heartbeatFrequency : float, default is Undefined, optional
        Sets the WAL heartbeat frequency (in minutes). Default value is 5.
    heartbeatSchema : str, default is Undefined, optional
        Sets the schema in which the heartbeat artifacts are created. Default value is public.
    mapBooleanAsBoolean : bool, default is Undefined, optional
        You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is false.
    mapJsonbAsClob : bool, default is Undefined, optional
        Optional When true, DMS migrates JSONB values as CLOB.
    mapLongVarcharAs : str, default is Undefined, optional
        Optional When true, DMS migrates LONG values as VARCHAR.
    maxFileSize : float, default is Undefined, optional
        Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is 32,768 KB.
    pluginName : str, default is Undefined, optional
        Specifies the plugin to use to create a replication slot. Valid values: pglogical, test_decoding.
    slotName : str, default is Undefined, optional
        Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.
    """


    afterConnectScript?: str

    babelfishDatabaseName?: str

    captureDdls?: bool

    databaseMode?: str

    ddlArtifactsSchema?: str

    executeTimeout?: float

    failTasksOnLobTruncation?: bool

    heartbeatEnable?: bool

    heartbeatFrequency?: float

    heartbeatSchema?: str

    mapBooleanAsBoolean?: bool

    mapJsonbAsClob?: bool

    mapLongVarcharAs?: str

    maxFileSize?: float

    pluginName?: str

    slotName?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedisSettings:
    r"""
    dms aws upbound io v1beta2 endpoint status at provider redis settings

    Attributes
    ----------
    authType : str, default is Undefined, optional
        Authentication type to access the MongoDB source endpoint. Default is password.
    authUserName : str, default is Undefined, optional
        The username provided with the auth-role option of the AuthType setting for a Redis target endpoint.
    port : float, default is Undefined, optional
        Port used by the endpoint database.
    serverName : str, default is Undefined, optional
        Host name of the server.
    sslCaCertificateArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
    sslSecurityProtocol : str, default is Undefined, optional
        The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include plaintext, ssl-encryption. The default is ssl-encryption.
    """


    authType?: str

    authUserName?: str

    port?: float

    serverName?: str

    sslCaCertificateArn?: str

    sslSecurityProtocol?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderRedshiftSettings:
    r"""
    Configuration block for Redshift settings. See below.

    Attributes
    ----------
    bucketFolder : str, default is Undefined, optional
        Custom S3 Bucket Object prefix for intermediate storage.
    bucketName : str, default is Undefined, optional
        Custom S3 Bucket name for intermediate storage.
    encryptionMode : str, default is Undefined, optional
        The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to SSE_S3. Valid values are SSE_S3 and SSE_KMS.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.
    """


    bucketFolder?: str

    bucketName?: str

    encryptionMode?: str

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str


schema DmsAwsUpboundIoV1beta2EndpointStatusAtProviderS3Settings:
    r"""
    (Deprecated, use the aws_dms_s3_endpoint resource instead) Configuration block for S3 settings. See below.
    This argument is deprecated and will be removed in a future version; use aws_dms_s3_endpoint instead

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is 60.
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. Default is 32000. NOTE: Previously, this setting was measured in megabytes but now represents kilobytes. Update configurations accordingly.
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Default is NONE. Valid values are GZIP and NONE.
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        String to use for all columns not included in the supplemental log.
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target.
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is \n.
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet. Default is csv.
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. Default is 1048576 (1 MiB).
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. Default is SLASH.
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false.
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. Default is YYYYMMDD.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. Default is 1048576 (1 MiB).
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. Default is rle_dictionary.
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. Default is SSE_S3.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. Default is 0.
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. Default is 1048576 (1 GB).
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false.
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Default is parquet-1-0. Valid values are parquet-1-0 and parquet-2-0.
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false.
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. Default is 10000.
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        ARN or Id of KMS Key to use when encryption_mode is SSE_KMS.
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log.
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time. When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta2EndpointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


