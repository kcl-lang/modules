"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EventDestination:
    r"""
    EventDestination is the Schema for the EventDestinations API. Provides an SES event destination

    Attributes
    ----------
    apiVersion : str, default is "ses.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EventDestination", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SesAwsUpboundIoV1beta2EventDestinationSpec, default is Undefined, required
        spec
    status : SesAwsUpboundIoV1beta2EventDestinationStatus, default is Undefined, optional
        status
    """


    apiVersion: "ses.aws.upbound.io/v1beta2" = "ses.aws.upbound.io/v1beta2"

    kind: "EventDestination" = "EventDestination"

    metadata?: v1.ObjectMeta

    spec: SesAwsUpboundIoV1beta2EventDestinationSpec

    status?: SesAwsUpboundIoV1beta2EventDestinationStatus


schema SesAwsUpboundIoV1beta2EventDestinationSpec:
    r"""
    EventDestinationSpec defines the desired state of EventDestination

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SesAwsUpboundIoV1beta2EventDestinationSpecForProvider, default is Undefined, required
        for provider
    initProvider : SesAwsUpboundIoV1beta2EventDestinationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SesAwsUpboundIoV1beta2EventDestinationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SesAwsUpboundIoV1beta2EventDestinationSpecForProvider

    initProvider?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRef

    publishConnectionDetailsTo?: SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SesAwsUpboundIoV1beta2EventDestinationSpecWriteConnectionSecretToRef


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProvider:
    r"""
    ses aws upbound io v1beta2 event destination spec for provider

    Attributes
    ----------
    cloudwatchDestination : [SesAwsUpboundIoV1beta2EventDestinationSpecForProviderCloudwatchDestinationItems0], default is Undefined, optional
        CloudWatch destination for the events
    configurationSetName : str, default is Undefined, optional
        The name of the configuration set
    configurationSetNameRef : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRef, default is Undefined, optional
        configuration set name ref
    configurationSetNameSelector : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelector, default is Undefined, optional
        configuration set name selector
    enabled : bool, default is Undefined, optional
        If true, the event destination will be enabled
    kinesisDestination : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestination, default is Undefined, optional
        kinesis destination
    matchingTypes : [str], default is Undefined, optional
        A list of matching types. May be any of "send", "reject", "bounce", "complaint", "delivery", "open", "click", or "renderingFailure".
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    snsDestination : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestination, default is Undefined, optional
        sns destination
    """


    cloudwatchDestination?: [SesAwsUpboundIoV1beta2EventDestinationSpecForProviderCloudwatchDestinationItems0]

    configurationSetName?: str

    configurationSetNameRef?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRef

    configurationSetNameSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelector

    enabled?: bool

    kinesisDestination?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestination

    matchingTypes?: [str]

    region: str

    snsDestination?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestination


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderCloudwatchDestinationItems0:
    r"""
    ses aws upbound io v1beta2 event destination spec for provider cloudwatch destination items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value for the event
    dimensionName : str, default is Undefined, optional
        The name for the dimension
    valueSource : str, default is Undefined, optional
        The source for the value. May be any of "messageTag", "emailHeader" or "linkTag".
    """


    defaultValue?: str

    dimensionName?: str

    valueSource?: str


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRef:
    r"""
    Reference to a ConfigurationSet in ses to populate configurationSetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelector:
    r"""
    Selector for a ConfigurationSet in ses to populate configurationSetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderConfigurationSetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestination:
    r"""
    Send the events to a kinesis firehose destination

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the role that has permissions to access the Kinesis Stream
    roleArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelector, default is Undefined, optional
        role arn selector
    streamArn : str, default is Undefined, optional
        The ARN of the Kinesis Stream
    streamArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRef, default is Undefined, optional
        stream arn ref
    streamArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelector, default is Undefined, optional
        stream arn selector
    """


    roleArn?: str

    roleArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRef

    roleArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelector

    streamArn?: str

    streamArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRef

    streamArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelector


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate streamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate streamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderKinesisDestinationStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestination:
    r"""
    Send the events to an SNS Topic destination

    Attributes
    ----------
    topicArn : str, default is Undefined, optional
        The ARN of the SNS topic
    topicArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    topicArn?: str

    topicArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRef

    topicArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelector


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecForProviderSnsDestinationTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cloudwatchDestination : [SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderCloudwatchDestinationItems0], default is Undefined, optional
        CloudWatch destination for the events
    configurationSetName : str, default is Undefined, optional
        The name of the configuration set
    configurationSetNameRef : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRef, default is Undefined, optional
        configuration set name ref
    configurationSetNameSelector : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelector, default is Undefined, optional
        configuration set name selector
    enabled : bool, default is Undefined, optional
        If true, the event destination will be enabled
    kinesisDestination : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestination, default is Undefined, optional
        kinesis destination
    matchingTypes : [str], default is Undefined, optional
        A list of matching types. May be any of "send", "reject", "bounce", "complaint", "delivery", "open", "click", or "renderingFailure".
    snsDestination : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestination, default is Undefined, optional
        sns destination
    """


    cloudwatchDestination?: [SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderCloudwatchDestinationItems0]

    configurationSetName?: str

    configurationSetNameRef?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRef

    configurationSetNameSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelector

    enabled?: bool

    kinesisDestination?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestination

    matchingTypes?: [str]

    snsDestination?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestination


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderCloudwatchDestinationItems0:
    r"""
    ses aws upbound io v1beta2 event destination spec init provider cloudwatch destination items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value for the event
    dimensionName : str, default is Undefined, optional
        The name for the dimension
    valueSource : str, default is Undefined, optional
        The source for the value. May be any of "messageTag", "emailHeader" or "linkTag".
    """


    defaultValue?: str

    dimensionName?: str

    valueSource?: str


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRef:
    r"""
    Reference to a ConfigurationSet in ses to populate configurationSetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelector:
    r"""
    Selector for a ConfigurationSet in ses to populate configurationSetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderConfigurationSetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestination:
    r"""
    Send the events to a kinesis firehose destination

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the role that has permissions to access the Kinesis Stream
    roleArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelector, default is Undefined, optional
        role arn selector
    streamArn : str, default is Undefined, optional
        The ARN of the Kinesis Stream
    streamArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRef, default is Undefined, optional
        stream arn ref
    streamArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelector, default is Undefined, optional
        stream arn selector
    """


    roleArn?: str

    roleArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRef

    roleArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelector

    streamArn?: str

    streamArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRef

    streamArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelector


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate streamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate streamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderKinesisDestinationStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestination:
    r"""
    Send the events to an SNS Topic destination

    Attributes
    ----------
    topicArn : str, default is Undefined, optional
        The ARN of the SNS topic
    topicArnRef : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    topicArn?: str

    topicArnRef?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRef

    topicArnSelector?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelector


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelectorPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecInitProviderSnsDestinationTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRef

    metadata?: SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToMetadata

    name: str


schema SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRefPolicy


schema SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SesAwsUpboundIoV1beta2EventDestinationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SesAwsUpboundIoV1beta2EventDestinationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SesAwsUpboundIoV1beta2EventDestinationStatus:
    r"""
    EventDestinationStatus defines the observed state of EventDestination.

    Attributes
    ----------
    atProvider : SesAwsUpboundIoV1beta2EventDestinationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SesAwsUpboundIoV1beta2EventDestinationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SesAwsUpboundIoV1beta2EventDestinationStatusAtProvider

    conditions?: [SesAwsUpboundIoV1beta2EventDestinationStatusConditionsItems0]

    observedGeneration?: int


schema SesAwsUpboundIoV1beta2EventDestinationStatusAtProvider:
    r"""
    ses aws upbound io v1beta2 event destination status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The SES event destination ARN.
    cloudwatchDestination : [SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderCloudwatchDestinationItems0], default is Undefined, optional
        CloudWatch destination for the events
    configurationSetName : str, default is Undefined, optional
        The name of the configuration set
    enabled : bool, default is Undefined, optional
        If true, the event destination will be enabled
    id : str, default is Undefined, optional
        The SES event destination name.
    kinesisDestination : SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderKinesisDestination, default is Undefined, optional
        kinesis destination
    matchingTypes : [str], default is Undefined, optional
        A list of matching types. May be any of "send", "reject", "bounce", "complaint", "delivery", "open", "click", or "renderingFailure".
    snsDestination : SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderSnsDestination, default is Undefined, optional
        sns destination
    """


    arn?: str

    cloudwatchDestination?: [SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderCloudwatchDestinationItems0]

    configurationSetName?: str

    enabled?: bool

    id?: str

    kinesisDestination?: SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderKinesisDestination

    matchingTypes?: [str]

    snsDestination?: SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderSnsDestination


schema SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderCloudwatchDestinationItems0:
    r"""
    ses aws upbound io v1beta2 event destination status at provider cloudwatch destination items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value for the event
    dimensionName : str, default is Undefined, optional
        The name for the dimension
    valueSource : str, default is Undefined, optional
        The source for the value. May be any of "messageTag", "emailHeader" or "linkTag".
    """


    defaultValue?: str

    dimensionName?: str

    valueSource?: str


schema SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderKinesisDestination:
    r"""
    Send the events to a kinesis firehose destination

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The ARN of the role that has permissions to access the Kinesis Stream
    streamArn : str, default is Undefined, optional
        The ARN of the Kinesis Stream
    """


    roleArn?: str

    streamArn?: str


schema SesAwsUpboundIoV1beta2EventDestinationStatusAtProviderSnsDestination:
    r"""
    Send the events to an SNS Topic destination

    Attributes
    ----------
    topicArn : str, default is Undefined, optional
        The ARN of the SNS topic
    """


    topicArn?: str


schema SesAwsUpboundIoV1beta2EventDestinationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


