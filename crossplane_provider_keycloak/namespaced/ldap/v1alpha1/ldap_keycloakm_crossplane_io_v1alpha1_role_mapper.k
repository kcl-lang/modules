"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RoleMapper:
    r"""
    RoleMapper is the Schema for the RoleMappers API.

    Attributes
    ----------
    apiVersion : str, default is "ldap.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RoleMapper", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpec, default is Undefined, required
        spec
    status : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatus, default is Undefined, optional
        status
    """


    apiVersion: "ldap.keycloak.m.crossplane.io/v1alpha1" = "ldap.keycloak.m.crossplane.io/v1alpha1"

    kind: "RoleMapper" = "RoleMapper"

    metadata?: v1.ObjectMeta

    spec: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpec

    status?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatus


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpec:
    r"""
    RoleMapperSpec defines the desired state of RoleMapper

    Attributes
    ----------
    forProvider : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProvider, default is Undefined, required
        for provider
    initProvider : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProvider

    initProvider?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef

    writeConnectionSecretToRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 role mapper spec for provider

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        When specified, LDAP role mappings will be mapped to client role mappings tied to this client ID. Can only be set if use_realm_roles_mapping is false.
    clientIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector, default is Undefined, optional
        client Id selector
    ldapRolesDn : str, default is Undefined, optional
        The LDAP DN where roles can be found.
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    ldapUserFederationIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRef, default is Undefined, optional
        ldap user federation Id ref
    ldapUserFederationIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelector, default is Undefined, optional
        ldap user federation Id selector
    memberofLdapAttribute : str, default is Undefined, optional
        Specifies the name of the LDAP attribute on the LDAP user that contains the roles the user has. Defaults to memberOf. This is only used when
    membershipAttributeType : str, default is Undefined, optional
        Can be one of DN or UID. Defaults to DN.
    membershipLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used for membership mappings.
    membershipUserLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute on a user that is used for membership mappings.
    mode : str, default is Undefined, optional
        Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults to READ_ONLY.
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    roleNameLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used in role objects for the name and RDN of the role. Typically cn.
    roleObjectClasses : [str], default is Undefined, optional
        List of strings representing the object classes for the role. Must contain at least one.
    rolesLdapFilter : str, default is Undefined, optional
        When specified, adds a custom filter to be used when querying for roles. Must start with ( and end with ).
    useRealmRolesMapping : bool, default is Undefined, optional
        When true, LDAP role mappings will be mapped to realm roles within Keycloak. Defaults to true.
    userRolesRetrieveStrategy : str, default is Undefined, optional
        Can be one of LOAD_ROLES_BY_MEMBER_ATTRIBUTE, GET_ROLES_FROM_USER_MEMBEROF_ATTRIBUTE, or LOAD_ROLES_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to LOAD_ROLES_BY_MEMBER_ATTRIBUTE.
    """


    clientId?: str

    clientIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef

    clientIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector

    ldapRolesDn?: str

    ldapUserFederationId?: str

    ldapUserFederationIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRef

    ldapUserFederationIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelector

    memberofLdapAttribute?: str

    membershipAttributeType?: str

    membershipLdapAttribute?: str

    membershipUserLdapAttribute?: str

    mode?: str

    name?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector

    roleNameLdapAttribute?: str

    roleObjectClasses?: [str]

    rolesLdapFilter?: str

    useRealmRolesMapping?: bool

    userRolesRetrieveStrategy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRef:
    r"""
    Reference to a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelector:
    r"""
    Selector for a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderLdapUserFederationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        When specified, LDAP role mappings will be mapped to client role mappings tied to this client ID. Can only be set if use_realm_roles_mapping is false.
    clientIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector, default is Undefined, optional
        client Id selector
    ldapRolesDn : str, default is Undefined, optional
        The LDAP DN where roles can be found.
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    ldapUserFederationIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRef, default is Undefined, optional
        ldap user federation Id ref
    ldapUserFederationIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelector, default is Undefined, optional
        ldap user federation Id selector
    memberofLdapAttribute : str, default is Undefined, optional
        Specifies the name of the LDAP attribute on the LDAP user that contains the roles the user has. Defaults to memberOf. This is only used when
    membershipAttributeType : str, default is Undefined, optional
        Can be one of DN or UID. Defaults to DN.
    membershipLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used for membership mappings.
    membershipUserLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute on a user that is used for membership mappings.
    mode : str, default is Undefined, optional
        Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults to READ_ONLY.
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    roleNameLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used in role objects for the name and RDN of the role. Typically cn.
    roleObjectClasses : [str], default is Undefined, optional
        List of strings representing the object classes for the role. Must contain at least one.
    rolesLdapFilter : str, default is Undefined, optional
        When specified, adds a custom filter to be used when querying for roles. Must start with ( and end with ).
    useRealmRolesMapping : bool, default is Undefined, optional
        When true, LDAP role mappings will be mapped to realm roles within Keycloak. Defaults to true.
    userRolesRetrieveStrategy : str, default is Undefined, optional
        Can be one of LOAD_ROLES_BY_MEMBER_ATTRIBUTE, GET_ROLES_FROM_USER_MEMBEROF_ATTRIBUTE, or LOAD_ROLES_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to LOAD_ROLES_BY_MEMBER_ATTRIBUTE.
    """


    clientId?: str

    clientIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef

    clientIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector

    ldapRolesDn?: str

    ldapUserFederationId?: str

    ldapUserFederationIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRef

    ldapUserFederationIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelector

    memberofLdapAttribute?: str

    membershipAttributeType?: str

    membershipLdapAttribute?: str

    membershipUserLdapAttribute?: str

    mode?: str

    name?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector

    roleNameLdapAttribute?: str

    roleObjectClasses?: [str]

    rolesLdapFilter?: str

    useRealmRolesMapping?: bool

    userRolesRetrieveStrategy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRef:
    r"""
    Reference to a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelector:
    r"""
    Selector for a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderLdapUserFederationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatus:
    r"""
    RoleMapperStatus defines the observed state of RoleMapper.

    Attributes
    ----------
    atProvider : LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusAtProvider

    conditions?: [LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0]

    observedGeneration?: int


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusAtProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 role mapper status at provider

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        When specified, LDAP role mappings will be mapped to client role mappings tied to this client ID. Can only be set if use_realm_roles_mapping is false.
    id : str, default is Undefined, optional
        id
    ldapRolesDn : str, default is Undefined, optional
        The LDAP DN where roles can be found.
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    memberofLdapAttribute : str, default is Undefined, optional
        Specifies the name of the LDAP attribute on the LDAP user that contains the roles the user has. Defaults to memberOf. This is only used when
    membershipAttributeType : str, default is Undefined, optional
        Can be one of DN or UID. Defaults to DN.
    membershipLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used for membership mappings.
    membershipUserLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute on a user that is used for membership mappings.
    mode : str, default is Undefined, optional
        Can be one of READ_ONLY, LDAP_ONLY or IMPORT. Defaults to READ_ONLY.
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    roleNameLdapAttribute : str, default is Undefined, optional
        The name of the LDAP attribute that is used in role objects for the name and RDN of the role. Typically cn.
    roleObjectClasses : [str], default is Undefined, optional
        List of strings representing the object classes for the role. Must contain at least one.
    rolesLdapFilter : str, default is Undefined, optional
        When specified, adds a custom filter to be used when querying for roles. Must start with ( and end with ).
    useRealmRolesMapping : bool, default is Undefined, optional
        When true, LDAP role mappings will be mapped to realm roles within Keycloak. Defaults to true.
    userRolesRetrieveStrategy : str, default is Undefined, optional
        Can be one of LOAD_ROLES_BY_MEMBER_ATTRIBUTE, GET_ROLES_FROM_USER_MEMBEROF_ATTRIBUTE, or LOAD_ROLES_BY_MEMBER_ATTRIBUTE_RECURSIVELY. Defaults to LOAD_ROLES_BY_MEMBER_ATTRIBUTE.
    """


    clientId?: str

    id?: str

    ldapRolesDn?: str

    ldapUserFederationId?: str

    memberofLdapAttribute?: str

    membershipAttributeType?: str

    membershipLdapAttribute?: str

    membershipUserLdapAttribute?: str

    mode?: str

    name?: str

    realmId?: str

    roleNameLdapAttribute?: str

    roleObjectClasses?: [str]

    rolesLdapFilter?: str

    useRealmRolesMapping?: bool

    userRolesRetrieveStrategy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


