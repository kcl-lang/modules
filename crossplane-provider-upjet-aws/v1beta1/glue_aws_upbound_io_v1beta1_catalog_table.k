"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CatalogTable:
    r"""
    CatalogTable is the Schema for the CatalogTables API. Provides a Glue Catalog Table.

    Attributes
    ----------
    apiVersion : str, default is "glue.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CatalogTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GlueAwsUpboundIoV1beta1CatalogTableSpec, default is Undefined, required
        spec
    status : GlueAwsUpboundIoV1beta1CatalogTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "glue.aws.upbound.io/v1beta1" = "glue.aws.upbound.io/v1beta1"

    kind: "CatalogTable" = "CatalogTable"

    metadata?: v1.ObjectMeta

    spec: GlueAwsUpboundIoV1beta1CatalogTableSpec

    status?: GlueAwsUpboundIoV1beta1CatalogTableStatus


schema GlueAwsUpboundIoV1beta1CatalogTableSpec:
    r"""
    CatalogTableSpec defines the desired state of CatalogTable

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GlueAwsUpboundIoV1beta1CatalogTableSpecForProvider, default is Undefined, required
        for provider
    initProvider : GlueAwsUpboundIoV1beta1CatalogTableSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GlueAwsUpboundIoV1beta1CatalogTableSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GlueAwsUpboundIoV1beta1CatalogTableSpecForProvider

    initProvider?: GlueAwsUpboundIoV1beta1CatalogTableSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRef

    publishConnectionDetailsTo?: GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GlueAwsUpboundIoV1beta1CatalogTableSpecWriteConnectionSecretToRef


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProvider:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider

    Attributes
    ----------
    catalogId : str, default is Undefined, required
        ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
    databaseName : str, default is Undefined, optional
        Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
    databaseNameRef : GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelector, default is Undefined, optional
        database name selector
    description : str, default is Undefined, optional
        Description of the table.
    openTableFormatInput : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0], default is Undefined, optional
        Configuration block for open table formats. See open_table_format_input below.
    owner : str, default is Undefined, optional
        Owner of the table.
    parameters : {str:str}, default is Undefined, optional
        Properties associated with this table, as a list of key-value pairs.
    partitionIndex : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionIndexItems0], default is Undefined, optional
        Configuration block for a maximum of 3 partition indexes. See partition_index below.
    partitionKeys : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionKeysItems0], default is Undefined, optional
        Configuration block of columns by which the table is partitioned. Only primitive types are supported as partition keys. See partition_keys below.
    region : str, default is Undefined, required
        Region of the target table.
        Region is the region you'd like your resource to be created in.
    retention : float, default is Undefined, optional
        Retention time for this table.
    storageDescriptor : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0], default is Undefined, optional
        Configuration block for information about the physical storage of this table. For more information, refer to the Glue Developer Guide. See storage_descriptor below.
    tableType : str, default is Undefined, optional
        Type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as ALTER TABLE and SHOW CREATE TABLE will fail if this argument is empty.
    targetTable : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderTargetTableItems0], default is Undefined, optional
        Configuration block of a target table for resource linking. See target_table below.
    viewExpandedText : str, default is Undefined, optional
        If the table is a view, the expanded text of the view; otherwise null.
    viewOriginalText : str, default is Undefined, optional
        If the table is a view, the original text of the view; otherwise null.
    """


    catalogId: str

    databaseName?: str

    databaseNameRef?: GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRef

    databaseNameSelector?: GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelector

    description?: str

    openTableFormatInput?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0]

    owner?: str

    parameters?: {str:str}

    partitionIndex?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionIndexItems0]

    partitionKeys?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionKeysItems0]

    region: str

    retention?: float

    storageDescriptor?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0]

    tableType?: str

    targetTable?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderTargetTableItems0]

    viewExpandedText?: str

    viewOriginalText?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRefPolicy


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderDatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider open table format input items0

    Attributes
    ----------
    icebergInput : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0IcebergInputItems0], default is Undefined, optional
        Configuration block for iceberg table config. See iceberg_input below.
    """


    icebergInput?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0IcebergInputItems0]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderOpenTableFormatInputItems0IcebergInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider open table format input items0 iceberg input items0

    Attributes
    ----------
    metadataOperation : str, default is Undefined, optional
        A required metadata operation. Can only be set to CREATE.
    version : str, default is Undefined, optional
        The table version for the Iceberg table. Defaults to 2.
    """


    metadataOperation?: str

    version?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionIndexItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider partition index items0

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        Name of the partition index.
    keys : [str], default is Undefined, optional
        Keys for the partition index.
    """


    indexName?: str

    keys?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderPartitionKeysItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider partition keys items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Partition Key.
    $type : str, default is Undefined, optional
        Datatype of data in the Partition Key.
    """


    comment?: str

    name?: str

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0

    Attributes
    ----------
    additionalLocations : [str], default is Undefined, optional
        List of locations that point to the path where a Delta table is located.
    bucketColumns : [str], default is Undefined, optional
        List of reducer grouping columns, clustering columns, and bucketing columns in the table.
    columns : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0ColumnsItems0], default is Undefined, optional
        Configuration block for columns in the table. See columns below.
    compressed : bool, default is Undefined, optional
        Whether the data in the table is compressed.
    inputFormat : str, default is Undefined, optional
        Input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.
    location : str, default is Undefined, optional
        Physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
    numberOfBuckets : float, default is Undefined, optional
        Must be specified if the table contains any dimension columns.
    outputFormat : str, default is Undefined, optional
        Output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.
    parameters : {str:str}, default is Undefined, optional
        User-supplied properties in key-value form.
    schemaReference : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0], default is Undefined, optional
        Object that references a schema stored in the AWS Glue Schema Registry. When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference. See Schema Reference below.
    serDeInfo : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SerDeInfoItems0], default is Undefined, optional
        Configuration block for serialization and deserialization ("SerDe") information. See ser_de_info below.
    skewedInfo : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SkewedInfoItems0], default is Undefined, optional
        Configuration block with information about values that appear very frequently in a column (skewed values). See skewed_info below.
    sortColumns : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SortColumnsItems0], default is Undefined, optional
        Configuration block for the sort order of each bucket in the table. See sort_columns below.
    storedAsSubDirectories : bool, default is Undefined, optional
        Whether the table data is stored in subdirectories.
    """


    additionalLocations?: [str]

    bucketColumns?: [str]

    columns?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0ColumnsItems0]

    compressed?: bool

    inputFormat?: str

    location?: str

    numberOfBuckets?: float

    outputFormat?: str

    parameters?: {str:str}

    schemaReference?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0]

    serDeInfo?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SerDeInfoItems0]

    skewedInfo?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SkewedInfoItems0]

    sortColumns?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SortColumnsItems0]

    storedAsSubDirectories?: bool


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0ColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 columns items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Column.
    parameters : {str:str}, default is Undefined, optional
        Key-value pairs defining properties associated with the column.
    $type : str, default is Undefined, optional
        Datatype of data in the Column.
    """


    comment?: str

    name?: str

    parameters?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 schema reference items0

    Attributes
    ----------
    schemaId : [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0], default is Undefined, optional
        Configuration block that contains schema identity fields. Either this or the schema_version_id has to be provided. See schema_id below.
    schemaVersionId : str, default is Undefined, optional
        Unique ID assigned to a version of the schema. Either this or the schema_id has to be provided.
    schemaVersionNumber : float, default is Undefined, optional
        Version number of the schema.
    """


    schemaId?: [GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0]

    schemaVersionId?: str

    schemaVersionNumber?: float


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 schema reference items0 schema ID items0

    Attributes
    ----------
    registryName : str, default is Undefined, optional
        Name of the schema registry that contains the schema. Must be provided when schema_name is specified and conflicts with schema_arn.
    schemaArn : str, default is Undefined, optional
        ARN of the schema. One of schema_arn or schema_name has to be provided.
    schemaName : str, default is Undefined, optional
        Name of the schema. One of schema_arn or schema_name has to be provided.
    """


    registryName?: str

    schemaArn?: str

    schemaName?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SerDeInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 ser de info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the SerDe.
    parameters : {str:str}, default is Undefined, optional
        Map of initialization parameters for the SerDe, in key-value form.
    serializationLibrary : str, default is Undefined, optional
        Usually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
    """


    name?: str

    parameters?: {str:str}

    serializationLibrary?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SkewedInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 skewed info items0

    Attributes
    ----------
    skewedColumnNames : [str], default is Undefined, optional
        List of names of columns that contain skewed values.
    skewedColumnValueLocationMaps : {str:str}, default is Undefined, optional
        List of values that appear so frequently as to be considered skewed.
    skewedColumnValues : [str], default is Undefined, optional
        Map of skewed values to the columns that contain them.
    """


    skewedColumnNames?: [str]

    skewedColumnValueLocationMaps?: {str:str}

    skewedColumnValues?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderStorageDescriptorItems0SortColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider storage descriptor items0 sort columns items0

    Attributes
    ----------
    column : str, default is Undefined, optional
        Name of the column.
    sortOrder : float, default is Undefined, optional
        Whether the column is sorted in ascending (1) or descending order (0).
    """


    column?: str

    sortOrder?: float


schema GlueAwsUpboundIoV1beta1CatalogTableSpecForProviderTargetTableItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec for provider target table items0

    Attributes
    ----------
    catalogId : str, default is Undefined, required
        ID of the Data Catalog in which the table resides.
    databaseName : str, default is Undefined, required
        Name of the catalog database that contains the target table.
    name : str, default is Undefined, optional
        Name of the target table.
    region : str, default is Undefined, optional
        Region of the target table.
    """


    catalogId: str

    databaseName: str

    name?: str

    region?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the table.
    openTableFormatInput : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0], default is Undefined, optional
        Configuration block for open table formats. See open_table_format_input below.
    owner : str, default is Undefined, optional
        Owner of the table.
    parameters : {str:str}, default is Undefined, optional
        Properties associated with this table, as a list of key-value pairs.
    partitionIndex : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionIndexItems0], default is Undefined, optional
        Configuration block for a maximum of 3 partition indexes. See partition_index below.
    partitionKeys : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionKeysItems0], default is Undefined, optional
        Configuration block of columns by which the table is partitioned. Only primitive types are supported as partition keys. See partition_keys below.
    retention : float, default is Undefined, optional
        Retention time for this table.
    storageDescriptor : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0], default is Undefined, optional
        Configuration block for information about the physical storage of this table. For more information, refer to the Glue Developer Guide. See storage_descriptor below.
    tableType : str, default is Undefined, optional
        Type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as ALTER TABLE and SHOW CREATE TABLE will fail if this argument is empty.
    targetTable : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderTargetTableItems0], default is Undefined, optional
        Configuration block of a target table for resource linking. See target_table below.
    viewExpandedText : str, default is Undefined, optional
        If the table is a view, the expanded text of the view; otherwise null.
    viewOriginalText : str, default is Undefined, optional
        If the table is a view, the original text of the view; otherwise null.
    """


    description?: str

    openTableFormatInput?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0]

    owner?: str

    parameters?: {str:str}

    partitionIndex?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionIndexItems0]

    partitionKeys?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionKeysItems0]

    retention?: float

    storageDescriptor?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0]

    tableType?: str

    targetTable?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderTargetTableItems0]

    viewExpandedText?: str

    viewOriginalText?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider open table format input items0

    Attributes
    ----------
    icebergInput : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0IcebergInputItems0], default is Undefined, optional
        Configuration block for iceberg table config. See iceberg_input below.
    """


    icebergInput?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0IcebergInputItems0]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderOpenTableFormatInputItems0IcebergInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider open table format input items0 iceberg input items0

    Attributes
    ----------
    metadataOperation : str, default is Undefined, optional
        A required metadata operation. Can only be set to CREATE.
    version : str, default is Undefined, optional
        The table version for the Iceberg table. Defaults to 2.
    """


    metadataOperation?: str

    version?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionIndexItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider partition index items0

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        Name of the partition index.
    keys : [str], default is Undefined, optional
        Keys for the partition index.
    """


    indexName?: str

    keys?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderPartitionKeysItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider partition keys items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Partition Key.
    $type : str, default is Undefined, optional
        Datatype of data in the Partition Key.
    """


    comment?: str

    name?: str

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0

    Attributes
    ----------
    additionalLocations : [str], default is Undefined, optional
        List of locations that point to the path where a Delta table is located.
    bucketColumns : [str], default is Undefined, optional
        List of reducer grouping columns, clustering columns, and bucketing columns in the table.
    columns : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0ColumnsItems0], default is Undefined, optional
        Configuration block for columns in the table. See columns below.
    compressed : bool, default is Undefined, optional
        Whether the data in the table is compressed.
    inputFormat : str, default is Undefined, optional
        Input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.
    location : str, default is Undefined, optional
        Physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
    numberOfBuckets : float, default is Undefined, optional
        Must be specified if the table contains any dimension columns.
    outputFormat : str, default is Undefined, optional
        Output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.
    parameters : {str:str}, default is Undefined, optional
        User-supplied properties in key-value form.
    schemaReference : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0], default is Undefined, optional
        Object that references a schema stored in the AWS Glue Schema Registry. When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference. See Schema Reference below.
    serDeInfo : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SerDeInfoItems0], default is Undefined, optional
        Configuration block for serialization and deserialization ("SerDe") information. See ser_de_info below.
    skewedInfo : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SkewedInfoItems0], default is Undefined, optional
        Configuration block with information about values that appear very frequently in a column (skewed values). See skewed_info below.
    sortColumns : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SortColumnsItems0], default is Undefined, optional
        Configuration block for the sort order of each bucket in the table. See sort_columns below.
    storedAsSubDirectories : bool, default is Undefined, optional
        Whether the table data is stored in subdirectories.
    """


    additionalLocations?: [str]

    bucketColumns?: [str]

    columns?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0ColumnsItems0]

    compressed?: bool

    inputFormat?: str

    location?: str

    numberOfBuckets?: float

    outputFormat?: str

    parameters?: {str:str}

    schemaReference?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0]

    serDeInfo?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SerDeInfoItems0]

    skewedInfo?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SkewedInfoItems0]

    sortColumns?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SortColumnsItems0]

    storedAsSubDirectories?: bool


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0ColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 columns items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Column.
    parameters : {str:str}, default is Undefined, optional
        Key-value pairs defining properties associated with the column.
    $type : str, default is Undefined, optional
        Datatype of data in the Column.
    """


    comment?: str

    name?: str

    parameters?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 schema reference items0

    Attributes
    ----------
    schemaId : [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0], default is Undefined, optional
        Configuration block that contains schema identity fields. Either this or the schema_version_id has to be provided. See schema_id below.
    schemaVersionId : str, default is Undefined, optional
        Unique ID assigned to a version of the schema. Either this or the schema_id has to be provided.
    schemaVersionNumber : float, default is Undefined, optional
        Version number of the schema.
    """


    schemaId?: [GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0]

    schemaVersionId?: str

    schemaVersionNumber?: float


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 schema reference items0 schema ID items0

    Attributes
    ----------
    registryName : str, default is Undefined, optional
        Name of the schema registry that contains the schema. Must be provided when schema_name is specified and conflicts with schema_arn.
    schemaArn : str, default is Undefined, optional
        ARN of the schema. One of schema_arn or schema_name has to be provided.
    schemaName : str, default is Undefined, optional
        Name of the schema. One of schema_arn or schema_name has to be provided.
    """


    registryName?: str

    schemaArn?: str

    schemaName?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SerDeInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 ser de info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the SerDe.
    parameters : {str:str}, default is Undefined, optional
        Map of initialization parameters for the SerDe, in key-value form.
    serializationLibrary : str, default is Undefined, optional
        Usually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
    """


    name?: str

    parameters?: {str:str}

    serializationLibrary?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SkewedInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 skewed info items0

    Attributes
    ----------
    skewedColumnNames : [str], default is Undefined, optional
        List of names of columns that contain skewed values.
    skewedColumnValueLocationMaps : {str:str}, default is Undefined, optional
        List of values that appear so frequently as to be considered skewed.
    skewedColumnValues : [str], default is Undefined, optional
        Map of skewed values to the columns that contain them.
    """


    skewedColumnNames?: [str]

    skewedColumnValueLocationMaps?: {str:str}

    skewedColumnValues?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderStorageDescriptorItems0SortColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider storage descriptor items0 sort columns items0

    Attributes
    ----------
    column : str, default is Undefined, optional
        Name of the column.
    sortOrder : float, default is Undefined, optional
        Whether the column is sorted in ascending (1) or descending order (0).
    """


    column?: str

    sortOrder?: float


schema GlueAwsUpboundIoV1beta1CatalogTableSpecInitProviderTargetTableItems0:
    r"""
    glue aws upbound io v1beta1 catalog table spec init provider target table items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the target table.
    """


    name?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRefPolicy


schema GlueAwsUpboundIoV1beta1CatalogTableSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRef

    metadata?: GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToMetadata

    name: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRefPolicy


schema GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1CatalogTableSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatus:
    r"""
    CatalogTableStatus defines the observed state of CatalogTable.

    Attributes
    ----------
    atProvider : GlueAwsUpboundIoV1beta1CatalogTableStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GlueAwsUpboundIoV1beta1CatalogTableStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GlueAwsUpboundIoV1beta1CatalogTableStatusAtProvider

    conditions?: [GlueAwsUpboundIoV1beta1CatalogTableStatusConditionsItems0]

    observedGeneration?: int


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProvider:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Glue Table.
    catalogId : str, default is Undefined, optional
        ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
    databaseName : str, default is Undefined, optional
        Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
    description : str, default is Undefined, optional
        Description of the table.
    id : str, default is Undefined, optional
        Catalog ID, Database name and of the name table.
    openTableFormatInput : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0], default is Undefined, optional
        Configuration block for open table formats. See open_table_format_input below.
    owner : str, default is Undefined, optional
        Owner of the table.
    parameters : {str:str}, default is Undefined, optional
        Properties associated with this table, as a list of key-value pairs.
    partitionIndex : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionIndexItems0], default is Undefined, optional
        Configuration block for a maximum of 3 partition indexes. See partition_index below.
    partitionKeys : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionKeysItems0], default is Undefined, optional
        Configuration block of columns by which the table is partitioned. Only primitive types are supported as partition keys. See partition_keys below.
    retention : float, default is Undefined, optional
        Retention time for this table.
    storageDescriptor : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0], default is Undefined, optional
        Configuration block for information about the physical storage of this table. For more information, refer to the Glue Developer Guide. See storage_descriptor below.
    tableType : str, default is Undefined, optional
        Type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as ALTER TABLE and SHOW CREATE TABLE will fail if this argument is empty.
    targetTable : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderTargetTableItems0], default is Undefined, optional
        Configuration block of a target table for resource linking. See target_table below.
    viewExpandedText : str, default is Undefined, optional
        If the table is a view, the expanded text of the view; otherwise null.
    viewOriginalText : str, default is Undefined, optional
        If the table is a view, the original text of the view; otherwise null.
    """


    arn?: str

    catalogId?: str

    databaseName?: str

    description?: str

    id?: str

    openTableFormatInput?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0]

    owner?: str

    parameters?: {str:str}

    partitionIndex?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionIndexItems0]

    partitionKeys?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionKeysItems0]

    retention?: float

    storageDescriptor?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0]

    tableType?: str

    targetTable?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderTargetTableItems0]

    viewExpandedText?: str

    viewOriginalText?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider open table format input items0

    Attributes
    ----------
    icebergInput : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0IcebergInputItems0], default is Undefined, optional
        Configuration block for iceberg table config. See iceberg_input below.
    """


    icebergInput?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0IcebergInputItems0]


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderOpenTableFormatInputItems0IcebergInputItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider open table format input items0 iceberg input items0

    Attributes
    ----------
    metadataOperation : str, default is Undefined, optional
        A required metadata operation. Can only be set to CREATE.
    version : str, default is Undefined, optional
        The table version for the Iceberg table. Defaults to 2.
    """


    metadataOperation?: str

    version?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionIndexItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider partition index items0

    Attributes
    ----------
    indexName : str, default is Undefined, optional
        Name of the partition index.
    indexStatus : str, default is Undefined, optional
        index status
    keys : [str], default is Undefined, optional
        Keys for the partition index.
    """


    indexName?: str

    indexStatus?: str

    keys?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderPartitionKeysItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider partition keys items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Partition Key.
    $type : str, default is Undefined, optional
        Datatype of data in the Partition Key.
    """


    comment?: str

    name?: str

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0

    Attributes
    ----------
    additionalLocations : [str], default is Undefined, optional
        List of locations that point to the path where a Delta table is located.
    bucketColumns : [str], default is Undefined, optional
        List of reducer grouping columns, clustering columns, and bucketing columns in the table.
    columns : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0ColumnsItems0], default is Undefined, optional
        Configuration block for columns in the table. See columns below.
    compressed : bool, default is Undefined, optional
        Whether the data in the table is compressed.
    inputFormat : str, default is Undefined, optional
        Input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.
    location : str, default is Undefined, optional
        Physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
    numberOfBuckets : float, default is Undefined, optional
        Must be specified if the table contains any dimension columns.
    outputFormat : str, default is Undefined, optional
        Output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.
    parameters : {str:str}, default is Undefined, optional
        User-supplied properties in key-value form.
    schemaReference : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0], default is Undefined, optional
        Object that references a schema stored in the AWS Glue Schema Registry. When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference. See Schema Reference below.
    serDeInfo : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SerDeInfoItems0], default is Undefined, optional
        Configuration block for serialization and deserialization ("SerDe") information. See ser_de_info below.
    skewedInfo : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SkewedInfoItems0], default is Undefined, optional
        Configuration block with information about values that appear very frequently in a column (skewed values). See skewed_info below.
    sortColumns : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SortColumnsItems0], default is Undefined, optional
        Configuration block for the sort order of each bucket in the table. See sort_columns below.
    storedAsSubDirectories : bool, default is Undefined, optional
        Whether the table data is stored in subdirectories.
    """


    additionalLocations?: [str]

    bucketColumns?: [str]

    columns?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0ColumnsItems0]

    compressed?: bool

    inputFormat?: str

    location?: str

    numberOfBuckets?: float

    outputFormat?: str

    parameters?: {str:str}

    schemaReference?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0]

    serDeInfo?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SerDeInfoItems0]

    skewedInfo?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SkewedInfoItems0]

    sortColumns?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SortColumnsItems0]

    storedAsSubDirectories?: bool


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0ColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 columns items0

    Attributes
    ----------
    comment : str, default is Undefined, optional
        Free-form text comment.
    name : str, default is Undefined, optional
        Name of the Column.
    parameters : {str:str}, default is Undefined, optional
        Key-value pairs defining properties associated with the column.
    $type : str, default is Undefined, optional
        Datatype of data in the Column.
    """


    comment?: str

    name?: str

    parameters?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 schema reference items0

    Attributes
    ----------
    schemaId : [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0], default is Undefined, optional
        Configuration block that contains schema identity fields. Either this or the schema_version_id has to be provided. See schema_id below.
    schemaVersionId : str, default is Undefined, optional
        Unique ID assigned to a version of the schema. Either this or the schema_id has to be provided.
    schemaVersionNumber : float, default is Undefined, optional
        Version number of the schema.
    """


    schemaId?: [GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0]

    schemaVersionId?: str

    schemaVersionNumber?: float


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SchemaReferenceItems0SchemaIDItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 schema reference items0 schema ID items0

    Attributes
    ----------
    registryName : str, default is Undefined, optional
        Name of the schema registry that contains the schema. Must be provided when schema_name is specified and conflicts with schema_arn.
    schemaArn : str, default is Undefined, optional
        ARN of the schema. One of schema_arn or schema_name has to be provided.
    schemaName : str, default is Undefined, optional
        Name of the schema. One of schema_arn or schema_name has to be provided.
    """


    registryName?: str

    schemaArn?: str

    schemaName?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SerDeInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 ser de info items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the SerDe.
    parameters : {str:str}, default is Undefined, optional
        Map of initialization parameters for the SerDe, in key-value form.
    serializationLibrary : str, default is Undefined, optional
        Usually the class that implements the SerDe. An example is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.
    """


    name?: str

    parameters?: {str:str}

    serializationLibrary?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SkewedInfoItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 skewed info items0

    Attributes
    ----------
    skewedColumnNames : [str], default is Undefined, optional
        List of names of columns that contain skewed values.
    skewedColumnValueLocationMaps : {str:str}, default is Undefined, optional
        List of values that appear so frequently as to be considered skewed.
    skewedColumnValues : [str], default is Undefined, optional
        Map of skewed values to the columns that contain them.
    """


    skewedColumnNames?: [str]

    skewedColumnValueLocationMaps?: {str:str}

    skewedColumnValues?: [str]


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderStorageDescriptorItems0SortColumnsItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider storage descriptor items0 sort columns items0

    Attributes
    ----------
    column : str, default is Undefined, optional
        Name of the column.
    sortOrder : float, default is Undefined, optional
        Whether the column is sorted in ascending (1) or descending order (0).
    """


    column?: str

    sortOrder?: float


schema GlueAwsUpboundIoV1beta1CatalogTableStatusAtProviderTargetTableItems0:
    r"""
    glue aws upbound io v1beta1 catalog table status at provider target table items0

    Attributes
    ----------
    catalogId : str, default is Undefined, optional
        ID of the Data Catalog in which the table resides.
    databaseName : str, default is Undefined, optional
        Name of the catalog database that contains the target table.
    name : str, default is Undefined, optional
        Name of the target table.
    region : str, default is Undefined, optional
        Region of the target table.
    """


    catalogId?: str

    databaseName?: str

    name?: str

    region?: str


schema GlueAwsUpboundIoV1beta1CatalogTableStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


