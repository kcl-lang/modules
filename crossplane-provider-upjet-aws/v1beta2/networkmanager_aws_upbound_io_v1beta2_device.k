"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Device:
    r"""
    Device is the Schema for the Devices API. Creates a device in a global network.

    Attributes
    ----------
    apiVersion : str, default is "networkmanager.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Device", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkmanagerAwsUpboundIoV1beta2DeviceSpec, default is Undefined, required
        spec
    status : NetworkmanagerAwsUpboundIoV1beta2DeviceStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkmanager.aws.upbound.io/v1beta2" = "networkmanager.aws.upbound.io/v1beta2"

    kind: "Device" = "Device"

    metadata?: v1.ObjectMeta

    spec: NetworkmanagerAwsUpboundIoV1beta2DeviceSpec

    status?: NetworkmanagerAwsUpboundIoV1beta2DeviceStatus


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpec:
    r"""
    DeviceSpec defines the desired state of Device

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProvider

    initProvider?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecWriteConnectionSecretToRef


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProvider:
    r"""
    networkmanager aws upbound io v1beta2 device spec for provider

    Attributes
    ----------
    awsLocation : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderAwsLocation, default is Undefined, optional
        aws location
    description : str, default is Undefined, optional
        A description of the device.
    globalNetworkId : str, default is Undefined, optional
        The ID of the global network.
    globalNetworkIdRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRef, default is Undefined, optional
        global network Id ref
    globalNetworkIdSelector : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelector, default is Undefined, optional
        global network Id selector
    location : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderLocation, default is Undefined, optional
        location
    model : str, default is Undefined, optional
        The model of device.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serialNumber : str, default is Undefined, optional
        The serial number of the device.
    siteId : str, default is Undefined, optional
        The ID of the site.
    siteIdRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRef, default is Undefined, optional
        site Id ref
    siteIdSelector : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelector, default is Undefined, optional
        site Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The type of device.
    vendor : str, default is Undefined, optional
        The vendor of the device.
    """


    awsLocation?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderAwsLocation

    description?: str

    globalNetworkId?: str

    globalNetworkIdRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRef

    globalNetworkIdSelector?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelector

    location?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderLocation

    model?: str

    region: str

    serialNumber?: str

    siteId?: str

    siteIdRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRef

    siteIdSelector?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelector

    tags?: {str:str}

    $type?: str

    vendor?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderAwsLocation:
    r"""
    The AWS location of the device. Documented below.

    Attributes
    ----------
    subnetArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the subnet that the device is located in.
    zone : str, default is Undefined, optional
        The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
    """


    subnetArn?: str

    zone?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRef:
    r"""
    Reference to a GlobalNetwork in networkmanager to populate globalNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelector:
    r"""
    Selector for a GlobalNetwork in networkmanager to populate globalNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderGlobalNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderLocation:
    r"""
    The location of the device. Documented below.

    Attributes
    ----------
    address : str, default is Undefined, optional
        The physical address.
    latitude : str, default is Undefined, optional
        The latitude.
    longitude : str, default is Undefined, optional
        The longitude.
    """


    address?: str

    latitude?: str

    longitude?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRef:
    r"""
    Reference to a Site in networkmanager to populate siteId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelector:
    r"""
    Selector for a Site in networkmanager to populate siteId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecForProviderSiteIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    awsLocation : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderAwsLocation, default is Undefined, optional
        aws location
    description : str, default is Undefined, optional
        A description of the device.
    globalNetworkId : str, default is Undefined, optional
        The ID of the global network.
    globalNetworkIdRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRef, default is Undefined, optional
        global network Id ref
    globalNetworkIdSelector : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelector, default is Undefined, optional
        global network Id selector
    location : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderLocation, default is Undefined, optional
        location
    model : str, default is Undefined, optional
        The model of device.
    serialNumber : str, default is Undefined, optional
        The serial number of the device.
    siteId : str, default is Undefined, optional
        The ID of the site.
    siteIdRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRef, default is Undefined, optional
        site Id ref
    siteIdSelector : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelector, default is Undefined, optional
        site Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The type of device.
    vendor : str, default is Undefined, optional
        The vendor of the device.
    """


    awsLocation?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderAwsLocation

    description?: str

    globalNetworkId?: str

    globalNetworkIdRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRef

    globalNetworkIdSelector?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelector

    location?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderLocation

    model?: str

    serialNumber?: str

    siteId?: str

    siteIdRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRef

    siteIdSelector?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelector

    tags?: {str:str}

    $type?: str

    vendor?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderAwsLocation:
    r"""
    The AWS location of the device. Documented below.

    Attributes
    ----------
    subnetArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the subnet that the device is located in.
    zone : str, default is Undefined, optional
        The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
    """


    subnetArn?: str

    zone?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRef:
    r"""
    Reference to a GlobalNetwork in networkmanager to populate globalNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelector:
    r"""
    Selector for a GlobalNetwork in networkmanager to populate globalNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderGlobalNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderLocation:
    r"""
    The location of the device. Documented below.

    Attributes
    ----------
    address : str, default is Undefined, optional
        The physical address.
    latitude : str, default is Undefined, optional
        The latitude.
    longitude : str, default is Undefined, optional
        The longitude.
    """


    address?: str

    latitude?: str

    longitude?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRef:
    r"""
    Reference to a Site in networkmanager to populate siteId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelector:
    r"""
    Selector for a Site in networkmanager to populate siteId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecInitProviderSiteIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceStatus:
    r"""
    DeviceStatus defines the observed state of Device.

    Attributes
    ----------
    atProvider : NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkmanagerAwsUpboundIoV1beta2DeviceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProvider

    conditions?: [NetworkmanagerAwsUpboundIoV1beta2DeviceStatusConditionsItems0]

    observedGeneration?: int


schema NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProvider:
    r"""
    networkmanager aws upbound io v1beta2 device status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the device.
    awsLocation : NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderAwsLocation, default is Undefined, optional
        aws location
    description : str, default is Undefined, optional
        A description of the device.
    globalNetworkId : str, default is Undefined, optional
        The ID of the global network.
    id : str, default is Undefined, optional
        id
    location : NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderLocation, default is Undefined, optional
        location
    model : str, default is Undefined, optional
        The model of device.
    serialNumber : str, default is Undefined, optional
        The serial number of the device.
    siteId : str, default is Undefined, optional
        The ID of the site.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        The type of device.
    vendor : str, default is Undefined, optional
        The vendor of the device.
    """


    arn?: str

    awsLocation?: NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderAwsLocation

    description?: str

    globalNetworkId?: str

    id?: str

    location?: NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderLocation

    model?: str

    serialNumber?: str

    siteId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    vendor?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderAwsLocation:
    r"""
    The AWS location of the device. Documented below.

    Attributes
    ----------
    subnetArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the subnet that the device is located in.
    zone : str, default is Undefined, optional
        The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
    """


    subnetArn?: str

    zone?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceStatusAtProviderLocation:
    r"""
    The location of the device. Documented below.

    Attributes
    ----------
    address : str, default is Undefined, optional
        The physical address.
    latitude : str, default is Undefined, optional
        The latitude.
    longitude : str, default is Undefined, optional
        The longitude.
    """


    address?: str

    latitude?: str

    longitude?: str


schema NetworkmanagerAwsUpboundIoV1beta2DeviceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


