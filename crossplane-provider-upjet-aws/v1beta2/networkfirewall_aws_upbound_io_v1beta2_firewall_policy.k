"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FirewallPolicy:
    r"""
    FirewallPolicy is the Schema for the FirewallPolicys API. Provides an AWS Network Firewall Policy resource.

    Attributes
    ----------
    apiVersion : str, default is "networkfirewall.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FirewallPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpec, default is Undefined, required
        spec
    status : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkfirewall.aws.upbound.io/v1beta2" = "networkfirewall.aws.upbound.io/v1beta2"

    kind: "FirewallPolicy" = "FirewallPolicy"

    metadata?: v1.ObjectMeta

    spec: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpec

    status?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatus


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpec:
    r"""
    FirewallPolicySpec defines the desired state of FirewallPolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProvider

    initProvider?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecWriteConnectionSecretToRef


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProvider:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A friendly description of the firewall policy.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    firewallPolicy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicy, default is Undefined, optional
        firewall policy
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderEncryptionConfiguration

    firewallPolicy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicy

    region: str

    tags?: {str:str}


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicy:
    r"""
    A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.

    Attributes
    ----------
    policyVariables : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariables, default is Undefined, optional
        policy variables
    statefulDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.
    statefulEngineOptions : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptions, default is Undefined, optional
        stateful engine options
    statefulRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
    statelessCustomAction : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0], default is Undefined, optional
        Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.
    statelessDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessFragmentDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
    tlsInspectionConfigurationArn : str, default is Undefined, optional
        The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. "You can only add a TLS inspection configuration to a new policy, not to an existing policy."  This cannot be removed from a FW Policy.
    """


    policyVariables?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariables

    statefulDefaultActions?: [str]

    statefulEngineOptions?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptions

    statefulRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0]

    statelessCustomAction?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0]

    statelessDefaultActions?: [str]

    statelessFragmentDefaultActions?: [str]

    statelessRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0]

    tlsInspectionConfigurationArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariables:
    r"""
    . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.

    Attributes
    ----------
    ruleVariables : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0], default is Undefined, optional
        rule variables
    """


    ruleVariables?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider firewall policy policy variables rule variables items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An alphanumeric string to identify the ip_set. Valid values: HOME_NET
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptions:
    r"""
    A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.

    Attributes
    ----------
    flowTimeouts : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts, default is Undefined, optional
        flow timeouts
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    streamExceptionPolicy : str, default is Undefined, optional
        Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.
    """


    flowTimeouts?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts

    ruleOrder?: str

    streamExceptionPolicy?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts:
    r"""
    Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.

    Attributes
    ----------
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.
    """


    tcpIdleTimeoutSeconds?: float


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider firewall policy stateful rule group reference items0

    Attributes
    ----------
    override : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override, default is Undefined, optional
        override
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    resourceArnRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    override?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override

    priority?: float

    resourceArn?: str

    resourceArnRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef

    resourceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override:
    r"""
    Configuration block for override values

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
    """


    action?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef:
    r"""
    Reference to a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector:
    r"""
    Selector for a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider firewall policy stateless custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider firewall policy stateless custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The string value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec for provider firewall policy stateless rule group reference items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    resourceArnRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    priority?: float

    resourceArn?: str

    resourceArnRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef

    resourceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef:
    r"""
    Reference to a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector:
    r"""
    Selector for a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecForProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A friendly description of the firewall policy.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    firewallPolicy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicy, default is Undefined, optional
        firewall policy
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderEncryptionConfiguration

    firewallPolicy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicy

    tags?: {str:str}


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicy:
    r"""
    A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.

    Attributes
    ----------
    policyVariables : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariables, default is Undefined, optional
        policy variables
    statefulDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.
    statefulEngineOptions : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptions, default is Undefined, optional
        stateful engine options
    statefulRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
    statelessCustomAction : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0], default is Undefined, optional
        Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.
    statelessDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessFragmentDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
    tlsInspectionConfigurationArn : str, default is Undefined, optional
        The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. "You can only add a TLS inspection configuration to a new policy, not to an existing policy."  This cannot be removed from a FW Policy.
    """


    policyVariables?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariables

    statefulDefaultActions?: [str]

    statefulEngineOptions?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptions

    statefulRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0]

    statelessCustomAction?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0]

    statelessDefaultActions?: [str]

    statelessFragmentDefaultActions?: [str]

    statelessRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0]

    tlsInspectionConfigurationArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariables:
    r"""
    . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.

    Attributes
    ----------
    ruleVariables : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0], default is Undefined, optional
        rule variables
    """


    ruleVariables?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec init provider firewall policy policy variables rule variables items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An alphanumeric string to identify the ip_set. Valid values: HOME_NET
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptions:
    r"""
    A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.

    Attributes
    ----------
    flowTimeouts : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts, default is Undefined, optional
        flow timeouts
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    streamExceptionPolicy : str, default is Undefined, optional
        Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.
    """


    flowTimeouts?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts

    ruleOrder?: str

    streamExceptionPolicy?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts:
    r"""
    Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.

    Attributes
    ----------
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.
    """


    tcpIdleTimeoutSeconds?: float


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec init provider firewall policy stateful rule group reference items0

    Attributes
    ----------
    override : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override, default is Undefined, optional
        override
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    resourceArnRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    override?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override

    priority?: float

    resourceArn?: str

    resourceArnRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef

    resourceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override:
    r"""
    Configuration block for override values

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
    """


    action?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRef:
    r"""
    Reference to a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelector:
    r"""
    Selector for a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatefulRuleGroupReferenceItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec init provider firewall policy stateless custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec init provider firewall policy stateless custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The string value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy spec init provider firewall policy stateless rule group reference items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    resourceArnRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    priority?: float

    resourceArn?: str

    resourceArnRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef

    resourceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRef:
    r"""
    Reference to a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelector:
    r"""
    Selector for a RuleGroup in networkfirewall to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecInitProviderFirewallPolicyStatelessRuleGroupReferenceItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatus:
    r"""
    FirewallPolicyStatus defines the observed state of FirewallPolicy.

    Attributes
    ----------
    atProvider : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProvider

    conditions?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusConditionsItems0]

    observedGeneration?: int


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProvider:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the firewall policy.
    description : str, default is Undefined, optional
        A friendly description of the firewall policy.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    firewallPolicy : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicy, default is Undefined, optional
        firewall policy
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the firewall policy.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    updateToken : str, default is Undefined, optional
        A string token used when updating a firewall policy.
    """


    arn?: str

    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderEncryptionConfiguration

    firewallPolicy?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicy

    id?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    updateToken?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicy:
    r"""
    A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.

    Attributes
    ----------
    policyVariables : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariables, default is Undefined, optional
        policy variables
    statefulDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.
    statefulEngineOptions : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptions, default is Undefined, optional
        stateful engine options
    statefulRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
    statelessCustomAction : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0], default is Undefined, optional
        Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.
    statelessDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessFragmentDefaultActions : [str], default is Undefined, optional
        Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
        In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
    statelessRuleGroupReference : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessRuleGroupReferenceItems0], default is Undefined, optional
        Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
    tlsInspectionConfigurationArn : str, default is Undefined, optional
        The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. "You can only add a TLS inspection configuration to a new policy, not to an existing policy."  This cannot be removed from a FW Policy.
    """


    policyVariables?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariables

    statefulDefaultActions?: [str]

    statefulEngineOptions?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptions

    statefulRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0]

    statelessCustomAction?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0]

    statelessDefaultActions?: [str]

    statelessFragmentDefaultActions?: [str]

    statelessRuleGroupReference?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessRuleGroupReferenceItems0]

    tlsInspectionConfigurationArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariables:
    r"""
    . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.

    Attributes
    ----------
    ruleVariables : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0], default is Undefined, optional
        rule variables
    """


    ruleVariables?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider firewall policy policy variables rule variables items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An alphanumeric string to identify the ip_set. Valid values: HOME_NET
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyPolicyVariablesRuleVariablesItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptions:
    r"""
    A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.

    Attributes
    ----------
    flowTimeouts : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts, default is Undefined, optional
        flow timeouts
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    streamExceptionPolicy : str, default is Undefined, optional
        Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.
    """


    flowTimeouts?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts

    ruleOrder?: str

    streamExceptionPolicy?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulEngineOptionsFlowTimeouts:
    r"""
    Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.

    Attributes
    ----------
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.
    """


    tcpIdleTimeoutSeconds?: float


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider firewall policy stateful rule group reference items0

    Attributes
    ----------
    override : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override, default is Undefined, optional
        override
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    """


    override?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override

    priority?: float

    resourceArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatefulRuleGroupReferenceItems0Override:
    r"""
    Configuration block for override values

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
    """


    action?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider firewall policy stateless custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider firewall policy stateless custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The string value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusAtProviderFirewallPolicyStatelessRuleGroupReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 firewall policy status at provider firewall policy stateless rule group reference items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
    resourceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the stateless rule group.
    """


    priority?: float

    resourceArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2FirewallPolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


