#!/bin/bash

# This simple script generates kcl schemas from crossplane provider packages
# it downloads xpkg package from xpkg.crossplane.io, find all the crds there
# and groups them by apiGroup, also separates clustered and namespaced resources
# which is detected by .m.crossplane.io vs .crossplane.io suffix
# it needs kcl, crossplane cli and mikefarah yq

set -e
shopt -s extglob

if (( $# != 2 )); then
    echo "$0 provider version"
    exit 1
fi

provider="${1}"
version="${2}"
provider_package="xpkg.crossplane.io/crossplane-contrib/provider-$provider:$version"
namespaced_apis="keycloak.m.crossplane.io"
cluster_apis="keycloak.crossplane.io"

for tool in crossplane yq kcl; do
    if ! type $tool &>/dev/null; then
       echo "missing $tool"
       echo "please install crossplane yq (mikefarah) kcl"
       exit 1
    fi
done

if ! yq --version | grep -q mikefarah; then
    echo "found kislyuk yq, plese install https://github.com/mikefarah/yq instead"
fi

cd "$(git rev-parse --show-toplevel)"

work_dir="$(mktemp -d)"
# trap 'rm -rf "$work_dir"' EXIT
crd_dir="${work_dir}/crds"

kcl_dir="$(git rev-parse --show-toplevel)/crossplane_provider_$provider"

if [[ -d "$kcl_dir" ]] ; then
    rm -r "${kcl_dir}"
fi

mkdir -p "${crd_dir}"
crossplane xpkg extract "$provider_package" -o "$work_dir/pkg.gz"
(
    cd "$crd_dir"
    gunzip < "$work_dir/pkg.gz" | yq --split-exp '.metadata.name + ".yaml"' 'select(.kind == "CustomResourceDefinition")'
)

mkdir -p "${kcl_dir}"
cd "${kcl_dir}"
kcl mod init --version "${version#v}"
kcl mod add k8s
mkdir namespaced cluster

mapfile -t namespaced_groups < <(find  "$crd_dir" -name "*${namespaced_apis}.yaml" -printf "%f\n" | sed "s/^[^.]*\.//; s/\.yaml\$//; s/\.\?$namespaced_apis//" | sort | uniq)
mapfile -t cluster_groups < <(find  "$crd_dir" -name "*${cluster_apis}.yaml" -printf "%f\n" | sed "s/^[^.]*\.//; s/\.yaml\$//; s/\.\?$cluster_apis//" | sort | uniq)

for group in "${namespaced_groups[@]}" ; do (
    parent_group_dir="$(dirname "$(tr '.' '/'<<<"$group")")"
    cd "$kcl_dir/namespaced"
    mkdir -p "$parent_group_dir"
    cd "$parent_group_dir"
    project="${group%%.*}"
    [[ -n "$group" ]] && group+=.
    if [[ -z "$group" ]]; then
        cd ..
        project=namespaced
    fi

    kcl import -m crd -p "$project" "${crd_dir}/"+([a-z])".${group}${namespaced_apis}.yaml"
    ) 
done

for group in "${cluster_groups[@]}" ; do (
    parent_group_dir="$(dirname "$(tr '.' '/'<<<"$group")")"
    cd "$kcl_dir/cluster"
    mkdir -p "$parent_group_dir"
    cd "$parent_group_dir"
    project="${group%%.*}"
    [[ -n "$group" ]] && group+=.
    if [[ -z "$group" ]]; then
        cd ..
        project=cluster
    fi

    kcl import -m crd -p "$project" "${crd_dir}/"+([a-z])".${group}${cluster_apis}.yaml"
    ) 
done

# delete autogenerated mod files and duplicite k8s module
find . '(' -path './*/**k8s**' -o -path './*/**kcl.mod' ')' -delete
