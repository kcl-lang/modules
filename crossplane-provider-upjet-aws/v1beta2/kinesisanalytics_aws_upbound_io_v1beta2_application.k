"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    r"""
    Application is the Schema for the Applications API. Provides a AWS Kinesis Analytics Application

    Attributes
    ----------
    apiVersion : str, default is "kinesisanalytics.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpec, default is Undefined, required
        spec
    status : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "kinesisanalytics.aws.upbound.io/v1beta2" = "kinesisanalytics.aws.upbound.io/v1beta2"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpec

    status?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatus


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpec:
    r"""
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProvider

    initProvider?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProvider:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec for provider

    Attributes
    ----------
    cloudwatchLoggingOptions : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    code : str, default is Undefined, optional
        SQL Code to transform input data, and generate output.
    description : str, default is Undefined, optional
        Description of the application.
    inputs : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputs, default is Undefined, optional
        inputs
    outputs : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0], default is Undefined, optional
        Output destination configuration of the application. See Outputs below for more details.
    referenceDataSources : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSources, default is Undefined, optional
        reference data sources
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.
        To modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    cloudwatchLoggingOptions?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions

    code?: str

    description?: str

    inputs?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputs

    outputs?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0]

    referenceDataSources?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSources

    region: str

    startApplication?: bool

    tags?: {str:str}


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions:
    r"""
    The CloudWatch log stream options to monitor application errors.
    See CloudWatch Logging Options below for more details.

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch Log Stream.
    logStreamArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    roleArn : str, default is Undefined, optional
        The ARN of the IAM Role used to send application messages.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef

    logStreamArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputs:
    r"""
    Input configuration of the application. See Inputs below for more details.

    Attributes
    ----------
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStream, default is Undefined, optional
        kinesis stream
    namePrefix : str, default is Undefined, optional
        The Name Prefix to use when creating an in-application stream.
    parallelism : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsParallelism, default is Undefined, optional
        parallelism
    processingConfiguration : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfiguration, default is Undefined, optional
        processing configuration
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchema, default is Undefined, optional
        schema
    startingPositionConfiguration : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
        See Starting Position Configuration below for more details.
    """


    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStream

    namePrefix?: str

    parallelism?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsParallelism

    processingConfiguration?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfiguration

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchema

    startingPositionConfiguration?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsStartingPositionConfigurationItems0]


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStream:
    r"""
    The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    resourceArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelector, default is Undefined, optional
        resource arn selector
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    resourceArn?: str

    resourceArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRef

    resourceArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsKinesisStreamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsParallelism:
    r"""
    The number of Parallel in-application streams to create.
    See Parallelism below for more details.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The Count of streams.
    """


    count?: float


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfiguration:
    r"""
    The Processing Configuration to transform records as they are received from the stream.
    See Processing Configuration below for more details.

    Attributes
    ----------
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfigurationLambda, default is Undefined, optional
        lambda
    """


    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfigurationLambda


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsProcessingConfigurationLambda:
    r"""
    The Lambda function configuration. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec for provider inputs schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParameters


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderInputsStartingPositionConfigurationItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec for provider inputs starting position configuration items0

    Attributes
    ----------
    startingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    startingPosition?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec for provider outputs items0

    Attributes
    ----------
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisStream, default is Undefined, optional
        kinesis stream
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Lambda, default is Undefined, optional
        lambda
    name : str, default is Undefined, optional
        The Name of the in-application stream.
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Schema, default is Undefined, optional
        schema
    """


    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisStream

    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Lambda

    name?: str

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Schema


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    resourceArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelector, default is Undefined, optional
        resource arn selector
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    resourceArn?: str

    resourceArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRef

    resourceArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0KinesisStream:
    r"""
    The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Lambda:
    r"""
    The Lambda function destination. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderOutputsItems0Schema:
    r"""
    The Schema format of the data written to the destination. See Destination Schema below for more details.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The Format Type of the records on the output stream. Can be CSV or JSON.
    """


    recordFormatType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSources:
    r"""
    An S3 Reference Data Source for the application.
    See Reference Data Sources below for more details.

    Attributes
    ----------
    s3 : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesS3, default is Undefined, optional
        s3
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchema, default is Undefined, optional
        schema
    tableName : str, default is Undefined, optional
        The in-application Table Name.
    """


    s3?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesS3

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchema

    tableName?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesS3:
    r"""
    The S3 configuration for the reference data source. See S3 Reference below for more details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The S3 Bucket ARN.
    fileKey : str, default is Undefined, optional
        The File Key name containing reference data.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    bucketArn?: str

    fileKey?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec for provider reference data sources schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParameters


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecForProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cloudwatchLoggingOptions : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    code : str, default is Undefined, optional
        SQL Code to transform input data, and generate output.
    description : str, default is Undefined, optional
        Description of the application.
    inputs : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputs, default is Undefined, optional
        inputs
    outputs : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0], default is Undefined, optional
        Output destination configuration of the application. See Outputs below for more details.
    referenceDataSources : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSources, default is Undefined, optional
        reference data sources
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.
        To modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    cloudwatchLoggingOptions?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions

    code?: str

    description?: str

    inputs?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputs

    outputs?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0]

    referenceDataSources?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSources

    startApplication?: bool

    tags?: {str:str}


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions:
    r"""
    The CloudWatch log stream options to monitor application errors.
    See CloudWatch Logging Options below for more details.

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch Log Stream.
    logStreamArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    roleArn : str, default is Undefined, optional
        The ARN of the IAM Role used to send application messages.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef

    logStreamArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputs:
    r"""
    Input configuration of the application. See Inputs below for more details.

    Attributes
    ----------
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStream, default is Undefined, optional
        kinesis stream
    namePrefix : str, default is Undefined, optional
        The Name Prefix to use when creating an in-application stream.
    parallelism : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsParallelism, default is Undefined, optional
        parallelism
    processingConfiguration : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfiguration, default is Undefined, optional
        processing configuration
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchema, default is Undefined, optional
        schema
    startingPositionConfiguration : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
        See Starting Position Configuration below for more details.
    """


    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStream

    namePrefix?: str

    parallelism?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsParallelism

    processingConfiguration?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfiguration

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchema

    startingPositionConfiguration?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsStartingPositionConfigurationItems0]


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStream:
    r"""
    The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    resourceArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelector, default is Undefined, optional
        resource arn selector
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    resourceArn?: str

    resourceArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRef

    resourceArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsKinesisStreamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsParallelism:
    r"""
    The number of Parallel in-application streams to create.
    See Parallelism below for more details.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The Count of streams.
    """


    count?: float


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfiguration:
    r"""
    The Processing Configuration to transform records as they are received from the stream.
    See Processing Configuration below for more details.

    Attributes
    ----------
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfigurationLambda, default is Undefined, optional
        lambda
    """


    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfigurationLambda


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsProcessingConfigurationLambda:
    r"""
    The Lambda function configuration. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec init provider inputs schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParameters


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderInputsStartingPositionConfigurationItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec init provider inputs starting position configuration items0

    Attributes
    ----------
    startingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    startingPosition?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec init provider outputs items0

    Attributes
    ----------
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisStream, default is Undefined, optional
        kinesis stream
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Lambda, default is Undefined, optional
        lambda
    name : str, default is Undefined, optional
        The Name of the in-application stream.
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Schema, default is Undefined, optional
        schema
    """


    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisStream

    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Lambda

    name?: str

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Schema


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    resourceArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelector, default is Undefined, optional
        resource arn selector
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    roleArnRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    resourceArn?: str

    resourceArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRef

    resourceArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelector

    roleArn?: str

    roleArnRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRef

    roleArnSelector?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelector


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisFirehoseRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0KinesisStream:
    r"""
    The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Lambda:
    r"""
    The Lambda function destination. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderOutputsItems0Schema:
    r"""
    The Schema format of the data written to the destination. See Destination Schema below for more details.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The Format Type of the records on the output stream. Can be CSV or JSON.
    """


    recordFormatType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSources:
    r"""
    An S3 Reference Data Source for the application.
    See Reference Data Sources below for more details.

    Attributes
    ----------
    s3 : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesS3, default is Undefined, optional
        s3
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchema, default is Undefined, optional
        schema
    tableName : str, default is Undefined, optional
        The in-application Table Name.
    """


    s3?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesS3

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchema

    tableName?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesS3:
    r"""
    The S3 configuration for the reference data source. See S3 Reference below for more details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The S3 Bucket ARN.
    fileKey : str, default is Undefined, optional
        The File Key name containing reference data.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    bucketArn?: str

    fileKey?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application spec init provider reference data sources schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParameters


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecInitProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatus:
    r"""
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProvider

    conditions?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusConditionsItems0]

    observedGeneration?: int


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProvider:
    r"""
    kinesisanalytics aws upbound io v1beta2 application status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Appliation.
    cloudwatchLoggingOptions : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    code : str, default is Undefined, optional
        SQL Code to transform input data, and generate output.
    createTimestamp : str, default is Undefined, optional
        The Timestamp when the application version was created.
    description : str, default is Undefined, optional
        Description of the application.
    id : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Application.
    inputs : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputs, default is Undefined, optional
        inputs
    lastUpdateTimestamp : str, default is Undefined, optional
        The Timestamp when the application was last updated.
    outputs : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0], default is Undefined, optional
        Output destination configuration of the application. See Outputs below for more details.
    referenceDataSources : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSources, default is Undefined, optional
        reference data sources
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.
        To modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.
    status : str, default is Undefined, optional
        The Status of the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : float, default is Undefined, optional
        The Version of the application.
    """


    arn?: str

    cloudwatchLoggingOptions?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions

    code?: str

    createTimestamp?: str

    description?: str

    id?: str

    inputs?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputs

    lastUpdateTimestamp?: str

    outputs?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0]

    referenceDataSources?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSources

    startApplication?: bool

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: float


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions:
    r"""
    The CloudWatch log stream options to monitor application errors.
    See CloudWatch Logging Options below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Application.
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch Log Stream.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM Role used to send application messages.
    """


    id?: str

    logStreamArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputs:
    r"""
    Input configuration of the application. See Inputs below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Application.
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisStream, default is Undefined, optional
        kinesis stream
    namePrefix : str, default is Undefined, optional
        The Name Prefix to use when creating an in-application stream.
    parallelism : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsParallelism, default is Undefined, optional
        parallelism
    processingConfiguration : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfiguration, default is Undefined, optional
        processing configuration
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchema, default is Undefined, optional
        schema
    startingPositionConfiguration : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
        See Starting Position Configuration below for more details.
    streamNames : [str], default is Undefined, optional
        stream names
    """


    id?: str

    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisStream

    namePrefix?: str

    parallelism?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsParallelism

    processingConfiguration?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfiguration

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchema

    startingPositionConfiguration?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsStartingPositionConfigurationItems0]

    streamNames?: [str]


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsKinesisStream:
    r"""
    The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsParallelism:
    r"""
    The number of Parallel in-application streams to create.
    See Parallelism below for more details.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The Count of streams.
    """


    count?: float


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfiguration:
    r"""
    The Processing Configuration to transform records as they are received from the stream.
    See Processing Configuration below for more details.

    Attributes
    ----------
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfigurationLambda, default is Undefined, optional
        lambda
    """


    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfigurationLambda


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsProcessingConfigurationLambda:
    r"""
    The Lambda function configuration. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application status at provider inputs schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The Format Type of the records on the output stream. Can be CSV or JSON.
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderInputsStartingPositionConfigurationItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application status at provider inputs starting position configuration items0

    Attributes
    ----------
    startingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    startingPosition?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application status at provider outputs items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Application.
    kinesisFirehose : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisFirehose, default is Undefined, optional
        kinesis firehose
    kinesisStream : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisStream, default is Undefined, optional
        kinesis stream
    $lambda : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Lambda, default is Undefined, optional
        lambda
    name : str, default is Undefined, optional
        The Name of the in-application stream.
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Schema, default is Undefined, optional
        schema
    """


    id?: str

    kinesisFirehose?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisFirehose

    kinesisStream?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisStream

    $lambda?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Lambda

    name?: str

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Schema


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisFirehose:
    r"""
    The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.
    See Kinesis Firehose below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0KinesisStream:
    r"""
    The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.
    See Kinesis Stream below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Lambda:
    r"""
    The Lambda function destination. See Lambda below for more details.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    resourceArn?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderOutputsItems0Schema:
    r"""
    The Schema format of the data written to the destination. See Destination Schema below for more details.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The Format Type of the records on the output stream. Can be CSV or JSON.
    """


    recordFormatType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSources:
    r"""
    An S3 Reference Data Source for the application.
    See Reference Data Sources below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ARN of the Kinesis Analytics Application.
    s3 : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesS3, default is Undefined, optional
        s3
    $schema : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchema, default is Undefined, optional
        schema
    tableName : str, default is Undefined, optional
        The in-application Table Name.
    """


    id?: str

    s3?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesS3

    $schema?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchema

    tableName?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesS3:
    r"""
    The S3 configuration for the reference data source. See S3 Reference below for more details.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The S3 Bucket ARN.
    fileKey : str, default is Undefined, optional
        The File Key name containing reference data.
    roleArn : str, default is Undefined, optional
        The IAM Role ARN to read the data.
    """


    bucketArn?: str

    fileKey?: str

    roleArn?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchema:
    r"""
    The Schema format of the data in the streaming source. See Source Schema below for more details.

    Attributes
    ----------
    recordColumns : [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordColumnsItems0], default is Undefined, optional
        The Record Column mapping for the streaming source data element.
        See Record Columns below for more details.
    recordEncoding : str, default is Undefined, optional
        The Encoding of the record in the streaming source.
    recordFormat : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumns?: [KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordColumnsItems0]

    recordEncoding?: str

    recordFormat?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormat


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordColumnsItems0:
    r"""
    kinesisanalytics aws upbound io v1beta2 application status at provider reference data sources schema record columns items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        The Mapping reference to the data element.
    name : str, default is Undefined, optional
        Name of the column.
    sqlType : str, default is Undefined, optional
        The SQL Type of the column.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormat:
    r"""
    The Record Format and mapping information to schematize a record.
    See Record Format below for more details.

    Attributes
    ----------
    mappingParameters : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The Format Type of the records on the output stream. Can be CSV or JSON.
    """


    mappingParameters?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParameters:
    r"""
    The Mapping Information for the record format.
    See Mapping Parameters below for more details.

    Attributes
    ----------
    csv : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv, default is Undefined, optional
        csv
    json : KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON, default is Undefined, optional
        json
    """


    csv?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv

    json?: KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersCsv:
    r"""
    Mapping information when the record format uses delimiters.
    See CSV Mapping Parameters below for more details.

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The Column Delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The Row Delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusAtProviderReferenceDataSourcesSchemaRecordFormatMappingParametersJSON:
    r"""
    Mapping information when JSON is the record format on the streaming source.
    See JSON Mapping Parameters below for more details.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        Path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema KinesisanalyticsAwsUpboundIoV1beta2ApplicationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


