"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigurationRecorder:
    r"""
    ConfigurationRecorder is the Schema for the ConfigurationRecorders API. Provides an AWS Config Configuration Recorder.

    Attributes
    ----------
    apiVersion : str, default is "configservice.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConfigurationRecorder", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpec, default is Undefined, required
        spec
    status : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatus, default is Undefined, optional
        status
    """


    apiVersion: "configservice.aws.upbound.io/v1beta2" = "configservice.aws.upbound.io/v1beta2"

    kind: "ConfigurationRecorder" = "ConfigurationRecorder"

    metadata?: v1.ObjectMeta

    spec: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpec

    status?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatus


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpec:
    r"""
    ConfigurationRecorderSpec defines the desired state of ConfigurationRecorder

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProvider

    initProvider?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRef

    publishConnectionDetailsTo?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecWriteConnectionSecretToRef


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProvider:
    r"""
    configservice aws upbound io v1beta2 configuration recorder spec for provider

    Attributes
    ----------
    recordingGroup : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroup, default is Undefined, optional
        recording group
    recordingMode : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingMode, default is Undefined, optional
        recording mode
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.
    roleArnRef : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    recordingGroup?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroup

    recordingMode?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingMode

    region: str

    roleArn?: str

    roleArnRef?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRef

    roleArnSelector?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelector


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroup:
    r"""
    Recording group - see below.

    Attributes
    ----------
    allSupported : bool, default is Undefined, optional
        Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.
    exclusionByResourceTypes : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupExclusionByResourceTypesItems0], default is Undefined, optional
        An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to EXCLUSION_BY_RESOURCE_TYPES Requires all_supported = false. Conflicts with resource_types.
    includeGlobalResourceTypes : bool, default is Undefined, optional
        Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.
    recordingStrategy : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupRecordingStrategyItems0], default is Undefined, optional
        Recording Strategy. Detailed below.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.
    """


    allSupported?: bool

    exclusionByResourceTypes?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupExclusionByResourceTypesItems0]

    includeGlobalResourceTypes?: bool

    recordingStrategy?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupRecordingStrategyItems0]

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupExclusionByResourceTypesItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder spec for provider recording group exclusion by resource types items0

    Attributes
    ----------
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingGroupRecordingStrategyItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder spec for provider recording group recording strategy items0

    Attributes
    ----------
    useOnly : str, default is Undefined, optional
        use only
    """


    useOnly?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingMode:
    r"""
    Recording mode - see below.

    Attributes
    ----------
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    recordingModeOverride : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingModeRecordingModeOverride, default is Undefined, optional
        recording mode override
    """


    recordingFrequency?: str

    recordingModeOverride?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingModeRecordingModeOverride


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRecordingModeRecordingModeOverride:
    r"""
    Recording mode overrides. Detailed below.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description you provide of the override.
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    description?: str

    recordingFrequency?: str

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelectorPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    recordingGroup : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroup, default is Undefined, optional
        recording group
    recordingMode : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingMode, default is Undefined, optional
        recording mode
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.
    roleArnRef : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    recordingGroup?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroup

    recordingMode?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingMode

    roleArn?: str

    roleArnRef?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRef

    roleArnSelector?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelector


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroup:
    r"""
    Recording group - see below.

    Attributes
    ----------
    allSupported : bool, default is Undefined, optional
        Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.
    exclusionByResourceTypes : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupExclusionByResourceTypesItems0], default is Undefined, optional
        An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to EXCLUSION_BY_RESOURCE_TYPES Requires all_supported = false. Conflicts with resource_types.
    includeGlobalResourceTypes : bool, default is Undefined, optional
        Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.
    recordingStrategy : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupRecordingStrategyItems0], default is Undefined, optional
        Recording Strategy. Detailed below.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.
    """


    allSupported?: bool

    exclusionByResourceTypes?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupExclusionByResourceTypesItems0]

    includeGlobalResourceTypes?: bool

    recordingStrategy?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupRecordingStrategyItems0]

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupExclusionByResourceTypesItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder spec init provider recording group exclusion by resource types items0

    Attributes
    ----------
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingGroupRecordingStrategyItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder spec init provider recording group recording strategy items0

    Attributes
    ----------
    useOnly : str, default is Undefined, optional
        use only
    """


    useOnly?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingMode:
    r"""
    Recording mode - see below.

    Attributes
    ----------
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    recordingModeOverride : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingModeRecordingModeOverride, default is Undefined, optional
        recording mode override
    """


    recordingFrequency?: str

    recordingModeOverride?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingModeRecordingModeOverride


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRecordingModeRecordingModeOverride:
    r"""
    Recording mode overrides. Detailed below.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description you provide of the override.
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    description?: str

    recordingFrequency?: str

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelectorPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRef

    metadata?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToMetadata

    name: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatus:
    r"""
    ConfigurationRecorderStatus defines the observed state of ConfigurationRecorder.

    Attributes
    ----------
    atProvider : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProvider

    conditions?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusConditionsItems0]

    observedGeneration?: int


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProvider:
    r"""
    configservice aws upbound io v1beta2 configuration recorder status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        Name of the recorder
    recordingGroup : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroup, default is Undefined, optional
        recording group
    recordingMode : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingMode, default is Undefined, optional
        recording mode
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.
    """


    id?: str

    recordingGroup?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroup

    recordingMode?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingMode

    roleArn?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroup:
    r"""
    Recording group - see below.

    Attributes
    ----------
    allSupported : bool, default is Undefined, optional
        Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.
    exclusionByResourceTypes : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupExclusionByResourceTypesItems0], default is Undefined, optional
        An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to EXCLUSION_BY_RESOURCE_TYPES Requires all_supported = false. Conflicts with resource_types.
    includeGlobalResourceTypes : bool, default is Undefined, optional
        Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.
    recordingStrategy : [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupRecordingStrategyItems0], default is Undefined, optional
        Recording Strategy. Detailed below.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.
    """


    allSupported?: bool

    exclusionByResourceTypes?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupExclusionByResourceTypesItems0]

    includeGlobalResourceTypes?: bool

    recordingStrategy?: [ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupRecordingStrategyItems0]

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupExclusionByResourceTypesItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder status at provider recording group exclusion by resource types items0

    Attributes
    ----------
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingGroupRecordingStrategyItems0:
    r"""
    configservice aws upbound io v1beta2 configuration recorder status at provider recording group recording strategy items0

    Attributes
    ----------
    useOnly : str, default is Undefined, optional
        use only
    """


    useOnly?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingMode:
    r"""
    Recording mode - see below.

    Attributes
    ----------
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    recordingModeOverride : ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingModeRecordingModeOverride, default is Undefined, optional
        recording mode override
    """


    recordingFrequency?: str

    recordingModeOverride?: ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingModeRecordingModeOverride


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusAtProviderRecordingModeRecordingModeOverride:
    r"""
    Recording mode overrides. Detailed below.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description you provide of the override.
    recordingFrequency : str, default is Undefined, optional
        Default reecording frequency. CONTINUOUS or DAILY.
    resourceTypes : [str], default is Undefined, optional
        A list that specifies the types of AWS resources for which AWS Config excludes records configuration changes. See relevant part of AWS Docs for available types.
    """


    description?: str

    recordingFrequency?: str

    resourceTypes?: [str]


schema ConfigserviceAwsUpboundIoV1beta2ConfigurationRecorderStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


