"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UserFederation:
    r"""
    UserFederation is the Schema for the UserFederations API.

    Attributes
    ----------
    apiVersion : str, default is "ldap.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UserFederation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpec, default is Undefined, required
        spec
    status : LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatus, default is Undefined, optional
        status
    """


    apiVersion: "ldap.keycloak.m.crossplane.io/v1alpha1" = "ldap.keycloak.m.crossplane.io/v1alpha1"

    kind: "UserFederation" = "UserFederation"

    metadata?: v1.ObjectMeta

    spec: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpec

    status?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatus


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpec:
    r"""
    UserFederationSpec defines the desired state of UserFederation

    Attributes
    ----------
    forProvider : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProvider, default is Undefined, required
        for provider
    initProvider : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProvider

    initProvider?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecProviderConfigRef

    writeConnectionSecretToRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecWriteConnectionSecretToRef


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation spec for provider

    Attributes
    ----------
    batchSizeForSync : float, default is Undefined, optional
        The number of users to sync within a single transaction. Defaults to 1000.
        The number of users to sync within a single transaction.
    bindCredentialSecretRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderBindCredentialSecretRef, default is Undefined, optional
        bind credential secret ref
    bindDn : str, default is Undefined, optional
        DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
        DN of LDAP admin, which will be used by Keycloak to access LDAP server.
    cache : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderCacheItems0], default is Undefined, optional
        A block containing the cache settings.
        Settings regarding cache policy for this realm.
    changedSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
    connectionTimeout : str, default is Undefined, optional
        LDAP connection timeout in the format of a Go duration string.
        LDAP connection timeout (duration string)
    connectionUrl : str, default is Undefined, optional
        Connection URL to the LDAP server.
        Connection URL to the LDAP server.
    customUserSearchFilter : str, default is Undefined, optional
        Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
        Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
    deleteDefaultMappers : bool, default is Undefined, optional
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
    editMode : str, default is Undefined, optional
        Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
        READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
    enabled : bool, default is Undefined, optional
        When false, this provider will not be used when performing queries for users. Defaults to true.
        When false, this provider will not be used when performing queries for users.
    fullSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
    importEnabled : bool, default is Undefined, optional
        When true, LDAP users will be imported into the Keycloak database. Defaults to true.
        When true, LDAP users will be imported into the Keycloak database.
    kerberos : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderKerberosItems0], default is Undefined, optional
        A block containing the kerberos settings.
        Settings regarding kerberos authentication for this realm.
    name : str, default is Undefined, optional
        Display name of the provider when displayed in the console.
        Display name of the provider when displayed in the console.
    pagination : bool, default is Undefined, optional
        When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
        When true, Keycloak assumes the LDAP server supports pagination.
    priority : float, default is Undefined, optional
        Priority of this provider when looking up users. Lower values are first. Defaults to 0.
        Priority of this provider when looking up users. Lower values are first.
    rdnLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the relative distinguished name.
        Name of the LDAP attribute to use as the relative distinguished name.
    readTimeout : str, default is Undefined, optional
        LDAP read timeout in the format of a Go duration string.
        LDAP read timeout (duration string)
    realmId : str, default is Undefined, optional
        The realm that this provider will provide user federation for.
        The realm this provider will provide user federation for.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    searchScope : str, default is Undefined, optional
        Can be one of ONE_LEVEL or SUBTREE:
        ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
    startTls : bool, default is Undefined, optional
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
    syncRegistrations : bool, default is Undefined, optional
        When true, newly created users will be synced back to LDAP. Defaults to false.
        When true, newly created users will be synced back to LDAP.
    trustEmail : bool, default is Undefined, optional
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
    usePasswordModifyExtendedOp : bool, default is Undefined, optional
        When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
        When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
    useTruststoreSpi : str, default is Undefined, optional
        Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:
    userObjectClasses : [str], default is Undefined, optional
        Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
        All values of LDAP objectClass attribute for users in LDAP.
    usernameLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the Keycloak username.
        Name of the LDAP attribute to use as the Keycloak username.
    usersDn : str, default is Undefined, optional
        Full DN of LDAP tree where your users are.
        Full DN of LDAP tree where your users are.
    uuidLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
    validatePasswordPolicy : bool, default is Undefined, optional
        When true, Keycloak will validate passwords using the realm policy before updating it.
        When true, Keycloak will validate passwords using the realm policy before updating it.
    vendor : str, default is Undefined, optional
        Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
        LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
    """


    batchSizeForSync?: float

    bindCredentialSecretRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderBindCredentialSecretRef

    bindDn?: str

    cache?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderCacheItems0]

    changedSyncPeriod?: float

    connectionTimeout?: str

    connectionUrl?: str

    customUserSearchFilter?: str

    deleteDefaultMappers?: bool

    editMode?: str

    enabled?: bool

    fullSyncPeriod?: float

    importEnabled?: bool

    kerberos?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderKerberosItems0]

    name?: str

    pagination?: bool

    priority?: float

    rdnLdapAttribute?: str

    readTimeout?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelector

    searchScope?: str

    startTls?: bool

    syncRegistrations?: bool

    trustEmail?: bool

    usePasswordModifyExtendedOp?: bool

    useTruststoreSpi?: str

    userObjectClasses?: [str]

    usernameLdapAttribute?: str

    usersDn?: str

    uuidLdapAttribute?: str

    validatePasswordPolicy?: bool

    vendor?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderBindCredentialSecretRef:
    r"""
    Password of LDAP admin. This attribute must be set if bind_dn is set.
    Password of LDAP admin.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        Name of the secret.
    """


    key: str

    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderCacheItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation spec for provider cache items0

    Attributes
    ----------
    evictionDay : float, default is Undefined, optional
        Day of the week the entry will become invalid on
        Day of the week the entry will become invalid on.
    evictionHour : float, default is Undefined, optional
        Hour of day the entry will become invalid on.
        Hour of day the entry will become invalid on.
    evictionMinute : float, default is Undefined, optional
        Minute of day the entry will become invalid on.
        Minute of day the entry will become invalid on.
    maxLifespan : str, default is Undefined, optional
        Max lifespan of cache entry (duration string).
        Max lifespan of cache entry (duration string).
    policy : str, default is Undefined, optional
        Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY, MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
    """


    evictionDay?: float

    evictionHour?: float

    evictionMinute?: float

    maxLifespan?: str

    policy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderKerberosItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation spec for provider kerberos items0

    Attributes
    ----------
    kerberosRealm : str, default is Undefined, optional
        The name of the kerberos realm, e.g. FOO.LOCAL.
        The name of the kerberos realm, e.g. FOO.LOCAL
    keyTab : str, default is Undefined, optional
        Path to the kerberos keytab file on the server with credentials of the service principal.
        Path to the kerberos keytab file on the server with credentials of the service principal.
    serverPrincipal : str, default is Undefined, optional
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
    useKerberosForPasswordAuthentication : bool, default is Undefined, optional
        Use kerberos login module instead of ldap service api. Defaults to false.
        Use kerberos login module instead of ldap service api. Defaults to `false`.
    """


    kerberosRealm?: str

    keyTab?: str

    serverPrincipal?: str

    useKerberosForPasswordAuthentication?: bool


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    batchSizeForSync : float, default is Undefined, optional
        The number of users to sync within a single transaction. Defaults to 1000.
        The number of users to sync within a single transaction.
    bindCredentialSecretRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderBindCredentialSecretRef, default is Undefined, optional
        bind credential secret ref
    bindDn : str, default is Undefined, optional
        DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
        DN of LDAP admin, which will be used by Keycloak to access LDAP server.
    cache : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderCacheItems0], default is Undefined, optional
        A block containing the cache settings.
        Settings regarding cache policy for this realm.
    changedSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
    connectionTimeout : str, default is Undefined, optional
        LDAP connection timeout in the format of a Go duration string.
        LDAP connection timeout (duration string)
    connectionUrl : str, default is Undefined, optional
        Connection URL to the LDAP server.
        Connection URL to the LDAP server.
    customUserSearchFilter : str, default is Undefined, optional
        Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
        Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
    deleteDefaultMappers : bool, default is Undefined, optional
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
    editMode : str, default is Undefined, optional
        Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
        READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
    enabled : bool, default is Undefined, optional
        When false, this provider will not be used when performing queries for users. Defaults to true.
        When false, this provider will not be used when performing queries for users.
    fullSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
    importEnabled : bool, default is Undefined, optional
        When true, LDAP users will be imported into the Keycloak database. Defaults to true.
        When true, LDAP users will be imported into the Keycloak database.
    kerberos : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderKerberosItems0], default is Undefined, optional
        A block containing the kerberos settings.
        Settings regarding kerberos authentication for this realm.
    name : str, default is Undefined, optional
        Display name of the provider when displayed in the console.
        Display name of the provider when displayed in the console.
    pagination : bool, default is Undefined, optional
        When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
        When true, Keycloak assumes the LDAP server supports pagination.
    priority : float, default is Undefined, optional
        Priority of this provider when looking up users. Lower values are first. Defaults to 0.
        Priority of this provider when looking up users. Lower values are first.
    rdnLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the relative distinguished name.
        Name of the LDAP attribute to use as the relative distinguished name.
    readTimeout : str, default is Undefined, optional
        LDAP read timeout in the format of a Go duration string.
        LDAP read timeout (duration string)
    realmId : str, default is Undefined, optional
        The realm that this provider will provide user federation for.
        The realm this provider will provide user federation for.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    searchScope : str, default is Undefined, optional
        Can be one of ONE_LEVEL or SUBTREE:
        ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
    startTls : bool, default is Undefined, optional
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
    syncRegistrations : bool, default is Undefined, optional
        When true, newly created users will be synced back to LDAP. Defaults to false.
        When true, newly created users will be synced back to LDAP.
    trustEmail : bool, default is Undefined, optional
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
    usePasswordModifyExtendedOp : bool, default is Undefined, optional
        When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
        When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
    useTruststoreSpi : str, default is Undefined, optional
        Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:
    userObjectClasses : [str], default is Undefined, optional
        Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
        All values of LDAP objectClass attribute for users in LDAP.
    usernameLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the Keycloak username.
        Name of the LDAP attribute to use as the Keycloak username.
    usersDn : str, default is Undefined, optional
        Full DN of LDAP tree where your users are.
        Full DN of LDAP tree where your users are.
    uuidLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
    validatePasswordPolicy : bool, default is Undefined, optional
        When true, Keycloak will validate passwords using the realm policy before updating it.
        When true, Keycloak will validate passwords using the realm policy before updating it.
    vendor : str, default is Undefined, optional
        Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
        LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
    """


    batchSizeForSync?: float

    bindCredentialSecretRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderBindCredentialSecretRef

    bindDn?: str

    cache?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderCacheItems0]

    changedSyncPeriod?: float

    connectionTimeout?: str

    connectionUrl?: str

    customUserSearchFilter?: str

    deleteDefaultMappers?: bool

    editMode?: str

    enabled?: bool

    fullSyncPeriod?: float

    importEnabled?: bool

    kerberos?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderKerberosItems0]

    name?: str

    pagination?: bool

    priority?: float

    rdnLdapAttribute?: str

    readTimeout?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelector

    searchScope?: str

    startTls?: bool

    syncRegistrations?: bool

    trustEmail?: bool

    usePasswordModifyExtendedOp?: bool

    useTruststoreSpi?: str

    userObjectClasses?: [str]

    usernameLdapAttribute?: str

    usersDn?: str

    uuidLdapAttribute?: str

    validatePasswordPolicy?: bool

    vendor?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderBindCredentialSecretRef:
    r"""
    Password of LDAP admin. This attribute must be set if bind_dn is set.
    Password of LDAP admin.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        Name of the secret.
    """


    key: str

    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderCacheItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation spec init provider cache items0

    Attributes
    ----------
    evictionDay : float, default is Undefined, optional
        Day of the week the entry will become invalid on
        Day of the week the entry will become invalid on.
    evictionHour : float, default is Undefined, optional
        Hour of day the entry will become invalid on.
        Hour of day the entry will become invalid on.
    evictionMinute : float, default is Undefined, optional
        Minute of day the entry will become invalid on.
        Minute of day the entry will become invalid on.
    maxLifespan : str, default is Undefined, optional
        Max lifespan of cache entry (duration string).
        Max lifespan of cache entry (duration string).
    policy : str, default is Undefined, optional
        Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY, MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
    """


    evictionDay?: float

    evictionHour?: float

    evictionMinute?: float

    maxLifespan?: str

    policy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderKerberosItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation spec init provider kerberos items0

    Attributes
    ----------
    kerberosRealm : str, default is Undefined, optional
        The name of the kerberos realm, e.g. FOO.LOCAL.
        The name of the kerberos realm, e.g. FOO.LOCAL
    keyTab : str, default is Undefined, optional
        Path to the kerberos keytab file on the server with credentials of the service principal.
        Path to the kerberos keytab file on the server with credentials of the service principal.
    serverPrincipal : str, default is Undefined, optional
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
    useKerberosForPasswordAuthentication : bool, default is Undefined, optional
        Use kerberos login module instead of ldap service api. Defaults to false.
        Use kerberos login module instead of ldap service api. Defaults to `false`.
    """


    kerberosRealm?: str

    keyTab?: str

    serverPrincipal?: str

    useKerberosForPasswordAuthentication?: bool


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatus:
    r"""
    UserFederationStatus defines the observed state of UserFederation.

    Attributes
    ----------
    atProvider : LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProvider

    conditions?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusConditionsItems0]

    observedGeneration?: int


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation status at provider

    Attributes
    ----------
    batchSizeForSync : float, default is Undefined, optional
        The number of users to sync within a single transaction. Defaults to 1000.
        The number of users to sync within a single transaction.
    bindDn : str, default is Undefined, optional
        DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if bind_credential is set.
        DN of LDAP admin, which will be used by Keycloak to access LDAP server.
    cache : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderCacheItems0], default is Undefined, optional
        A block containing the cache settings.
        Settings regarding cache policy for this realm.
    changedSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
        How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
    connectionTimeout : str, default is Undefined, optional
        LDAP connection timeout in the format of a Go duration string.
        LDAP connection timeout (duration string)
    connectionUrl : str, default is Undefined, optional
        Connection URL to the LDAP server.
        Connection URL to the LDAP server.
    customUserSearchFilter : str, default is Undefined, optional
        Additional LDAP filter for filtering searched users. Must begin with ( and end with ).
        Additional LDAP filter for filtering searched users. Must begin with '(' and end with ')'.
    deleteDefaultMappers : bool, default is Undefined, optional
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider. Defaults to false.
        When true, the provider will delete the default mappers which are normally created by Keycloak when creating an LDAP user federation provider.
    editMode : str, default is Undefined, optional
        Can be one of READ_ONLY, WRITABLE, or UNSYNCED. UNSYNCED allows user data to be imported but not synced back to LDAP. Defaults to READ_ONLY.
        READ_ONLY and WRITABLE are self-explanatory. UNSYNCED allows user data to be imported but not synced back to LDAP.
    enabled : bool, default is Undefined, optional
        When false, this provider will not be used when performing queries for users. Defaults to true.
        When false, this provider will not be used when performing queries for users.
    fullSyncPeriod : float, default is Undefined, optional
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
        How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
    id : str, default is Undefined, optional
        id
    importEnabled : bool, default is Undefined, optional
        When true, LDAP users will be imported into the Keycloak database. Defaults to true.
        When true, LDAP users will be imported into the Keycloak database.
    kerberos : [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderKerberosItems0], default is Undefined, optional
        A block containing the kerberos settings.
        Settings regarding kerberos authentication for this realm.
    name : str, default is Undefined, optional
        Display name of the provider when displayed in the console.
        Display name of the provider when displayed in the console.
    pagination : bool, default is Undefined, optional
        When true, Keycloak assumes the LDAP server supports pagination. Defaults to true.
        When true, Keycloak assumes the LDAP server supports pagination.
    priority : float, default is Undefined, optional
        Priority of this provider when looking up users. Lower values are first. Defaults to 0.
        Priority of this provider when looking up users. Lower values are first.
    rdnLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the relative distinguished name.
        Name of the LDAP attribute to use as the relative distinguished name.
    readTimeout : str, default is Undefined, optional
        LDAP read timeout in the format of a Go duration string.
        LDAP read timeout (duration string)
    realmId : str, default is Undefined, optional
        The realm that this provider will provide user federation for.
        The realm this provider will provide user federation for.
    searchScope : str, default is Undefined, optional
        Can be one of ONE_LEVEL or SUBTREE:
        ONE_LEVEL: only search for users in the DN specified by user_dn. SUBTREE: search entire LDAP subtree.
    startTls : bool, default is Undefined, optional
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
        When true, Keycloak will encrypt the connection to LDAP using STARTTLS, which will disable connection pooling.
    syncRegistrations : bool, default is Undefined, optional
        When true, newly created users will be synced back to LDAP. Defaults to false.
        When true, newly created users will be synced back to LDAP.
    trustEmail : bool, default is Undefined, optional
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
        If enabled, email provided by this provider is not verified even if verification is enabled for the realm.
    usePasswordModifyExtendedOp : bool, default is Undefined, optional
        When true, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
        When `true`, use the LDAPv3 Password Modify Extended Operation (RFC-3062).
    useTruststoreSpi : str, default is Undefined, optional
        Can be one of ALWAYS, ONLY_FOR_LDAPS, or NEVER:
    userObjectClasses : [str], default is Undefined, optional
        Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
        All values of LDAP objectClass attribute for users in LDAP.
    usernameLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as the Keycloak username.
        Name of the LDAP attribute to use as the Keycloak username.
    usersDn : str, default is Undefined, optional
        Full DN of LDAP tree where your users are.
        Full DN of LDAP tree where your users are.
    uuidLdapAttribute : str, default is Undefined, optional
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
        Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
    validatePasswordPolicy : bool, default is Undefined, optional
        When true, Keycloak will validate passwords using the realm policy before updating it.
        When true, Keycloak will validate passwords using the realm policy before updating it.
    vendor : str, default is Undefined, optional
        Can be one of OTHER, EDIRECTORY, AD, RHDS, or TIVOLI. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to OTHER.
        LDAP vendor. I am almost certain this field does nothing, but the UI indicates that it is required.
    """


    batchSizeForSync?: float

    bindDn?: str

    cache?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderCacheItems0]

    changedSyncPeriod?: float

    connectionTimeout?: str

    connectionUrl?: str

    customUserSearchFilter?: str

    deleteDefaultMappers?: bool

    editMode?: str

    enabled?: bool

    fullSyncPeriod?: float

    id?: str

    importEnabled?: bool

    kerberos?: [LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderKerberosItems0]

    name?: str

    pagination?: bool

    priority?: float

    rdnLdapAttribute?: str

    readTimeout?: str

    realmId?: str

    searchScope?: str

    startTls?: bool

    syncRegistrations?: bool

    trustEmail?: bool

    usePasswordModifyExtendedOp?: bool

    useTruststoreSpi?: str

    userObjectClasses?: [str]

    usernameLdapAttribute?: str

    usersDn?: str

    uuidLdapAttribute?: str

    validatePasswordPolicy?: bool

    vendor?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderCacheItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation status at provider cache items0

    Attributes
    ----------
    evictionDay : float, default is Undefined, optional
        Day of the week the entry will become invalid on
        Day of the week the entry will become invalid on.
    evictionHour : float, default is Undefined, optional
        Hour of day the entry will become invalid on.
        Hour of day the entry will become invalid on.
    evictionMinute : float, default is Undefined, optional
        Minute of day the entry will become invalid on.
        Minute of day the entry will become invalid on.
    maxLifespan : str, default is Undefined, optional
        Max lifespan of cache entry (duration string).
        Max lifespan of cache entry (duration string).
    policy : str, default is Undefined, optional
        Can be one of DEFAULT, EVICT_DAILY, EVICT_WEEKLY, MAX_LIFESPAN, or NO_CACHE. Defaults to DEFAULT.
    """


    evictionDay?: float

    evictionHour?: float

    evictionMinute?: float

    maxLifespan?: str

    policy?: str


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusAtProviderKerberosItems0:
    r"""
    ldap keycloakm crossplane io v1alpha1 user federation status at provider kerberos items0

    Attributes
    ----------
    kerberosRealm : str, default is Undefined, optional
        The name of the kerberos realm, e.g. FOO.LOCAL.
        The name of the kerberos realm, e.g. FOO.LOCAL
    keyTab : str, default is Undefined, optional
        Path to the kerberos keytab file on the server with credentials of the service principal.
        Path to the kerberos keytab file on the server with credentials of the service principal.
    serverPrincipal : str, default is Undefined, optional
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
        The kerberos server principal, e.g. 'HTTP/host.foo.com@FOO.LOCAL'.
    useKerberosForPasswordAuthentication : bool, default is Undefined, optional
        Use kerberos login module instead of ldap service api. Defaults to false.
        Use kerberos login module instead of ldap service api. Defaults to `false`.
    """


    kerberosRealm?: str

    keyTab?: str

    serverPrincipal?: str

    useKerberosForPasswordAuthentication?: bool


schema LdapKeycloakmCrossplaneIoV1alpha1UserFederationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


