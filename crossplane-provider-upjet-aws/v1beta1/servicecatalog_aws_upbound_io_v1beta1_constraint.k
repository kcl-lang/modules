"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Constraint:
    r"""
    Constraint is the Schema for the Constraints API. Manages a Service Catalog Constraint

    Attributes
    ----------
    apiVersion : str, default is "servicecatalog.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Constraint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServicecatalogAwsUpboundIoV1beta1ConstraintSpec, default is Undefined, required
        spec
    status : ServicecatalogAwsUpboundIoV1beta1ConstraintStatus, default is Undefined, optional
        status
    """


    apiVersion: "servicecatalog.aws.upbound.io/v1beta1" = "servicecatalog.aws.upbound.io/v1beta1"

    kind: "Constraint" = "Constraint"

    metadata?: v1.ObjectMeta

    spec: ServicecatalogAwsUpboundIoV1beta1ConstraintSpec

    status?: ServicecatalogAwsUpboundIoV1beta1ConstraintStatus


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpec:
    r"""
    ConstraintSpec defines the desired state of Constraint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProvider, default is Undefined, required
        for provider
    initProvider : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProvider

    initProvider?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRef

    publishConnectionDetailsTo?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecWriteConnectionSecretToRef


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProvider:
    r"""
    servicecatalog aws upbound io v1beta1 constraint spec for provider

    Attributes
    ----------
    acceptLanguage : str, default is Undefined, optional
        Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
    description : str, default is Undefined, optional
        Description of the constraint.
    parameters : str, default is Undefined, optional
        Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
    portfolioId : str, default is Undefined, optional
        Portfolio identifier.
    portfolioIdRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRef, default is Undefined, optional
        portfolio Id ref
    portfolioIdSelector : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelector, default is Undefined, optional
        portfolio Id selector
    productId : str, default is Undefined, optional
        Product identifier.
    productIdRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRef, default is Undefined, optional
        product Id ref
    productIdSelector : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelector, default is Undefined, optional
        product Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    $type : str, default is Undefined, optional
        Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.
    """


    acceptLanguage?: str

    description?: str

    parameters?: str

    portfolioId?: str

    portfolioIdRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRef

    portfolioIdSelector?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelector

    productId?: str

    productIdRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRef

    productIdSelector?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelector

    region: str

    $type?: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRef:
    r"""
    Reference to a Portfolio in servicecatalog to populate portfolioId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelector:
    r"""
    Selector for a Portfolio in servicecatalog to populate portfolioId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelectorPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderPortfolioIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRef:
    r"""
    Reference to a Product in servicecatalog to populate productId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelector:
    r"""
    Selector for a Product in servicecatalog to populate productId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelectorPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecForProviderProductIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acceptLanguage : str, default is Undefined, optional
        Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
    description : str, default is Undefined, optional
        Description of the constraint.
    parameters : str, default is Undefined, optional
        Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
    portfolioId : str, default is Undefined, optional
        Portfolio identifier.
    portfolioIdRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRef, default is Undefined, optional
        portfolio Id ref
    portfolioIdSelector : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelector, default is Undefined, optional
        portfolio Id selector
    productId : str, default is Undefined, optional
        Product identifier.
    productIdRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRef, default is Undefined, optional
        product Id ref
    productIdSelector : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelector, default is Undefined, optional
        product Id selector
    $type : str, default is Undefined, optional
        Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.
    """


    acceptLanguage?: str

    description?: str

    parameters?: str

    portfolioId?: str

    portfolioIdRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRef

    portfolioIdSelector?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelector

    productId?: str

    productIdRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRef

    productIdSelector?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelector

    $type?: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRef:
    r"""
    Reference to a Portfolio in servicecatalog to populate portfolioId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelector:
    r"""
    Selector for a Portfolio in servicecatalog to populate portfolioId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelectorPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderPortfolioIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRef:
    r"""
    Reference to a Product in servicecatalog to populate productId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelector:
    r"""
    Selector for a Product in servicecatalog to populate productId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelectorPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecInitProviderProductIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRef

    metadata?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToMetadata

    name: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRefPolicy


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintStatus:
    r"""
    ConstraintStatus defines the observed state of Constraint.

    Attributes
    ----------
    atProvider : ServicecatalogAwsUpboundIoV1beta1ConstraintStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ServicecatalogAwsUpboundIoV1beta1ConstraintStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ServicecatalogAwsUpboundIoV1beta1ConstraintStatusAtProvider

    conditions?: [ServicecatalogAwsUpboundIoV1beta1ConstraintStatusConditionsItems0]

    observedGeneration?: int


schema ServicecatalogAwsUpboundIoV1beta1ConstraintStatusAtProvider:
    r"""
    servicecatalog aws upbound io v1beta1 constraint status at provider

    Attributes
    ----------
    acceptLanguage : str, default is Undefined, optional
        Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
    description : str, default is Undefined, optional
        Description of the constraint.
    id : str, default is Undefined, optional
        Constraint identifier.
    owner : str, default is Undefined, optional
        Owner of the constraint.
    parameters : str, default is Undefined, optional
        Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
    portfolioId : str, default is Undefined, optional
        Portfolio identifier.
    productId : str, default is Undefined, optional
        Product identifier.
    status : str, default is Undefined, optional
        status
    $type : str, default is Undefined, optional
        Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.
    """


    acceptLanguage?: str

    description?: str

    id?: str

    owner?: str

    parameters?: str

    portfolioId?: str

    productId?: str

    status?: str

    $type?: str


schema ServicecatalogAwsUpboundIoV1beta1ConstraintStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


