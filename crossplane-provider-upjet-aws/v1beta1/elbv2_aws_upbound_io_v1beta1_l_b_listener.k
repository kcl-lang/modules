"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LBListener:
    r"""
    LBListener is the Schema for the LBListeners API. Provides a Load Balancer Listener resource.

    Attributes
    ----------
    apiVersion : str, default is "elbv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LBListener", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Elbv2AwsUpboundIoV1beta1LBListenerSpec, default is Undefined, required
        spec
    status : Elbv2AwsUpboundIoV1beta1LBListenerStatus, default is Undefined, optional
        status
    """


    apiVersion: "elbv2.aws.upbound.io/v1beta1" = "elbv2.aws.upbound.io/v1beta1"

    kind: "LBListener" = "LBListener"

    metadata?: v1.ObjectMeta

    spec: Elbv2AwsUpboundIoV1beta1LBListenerSpec

    status?: Elbv2AwsUpboundIoV1beta1LBListenerStatus


schema Elbv2AwsUpboundIoV1beta1LBListenerSpec:
    r"""
    LBListenerSpec defines the desired state of LBListener

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProvider, default is Undefined, required
        for provider
    initProvider : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProvider

    initProvider?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRef

    publishConnectionDetailsTo?: Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecWriteConnectionSecretToRef


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProvider:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider

    Attributes
    ----------
    alpnPolicy : str, default is Undefined, optional
        Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if protocol is TLS. Valid values are HTTP1Only, HTTP2Only, HTTP2Optional, HTTP2Preferred, and None.
    certificateArn : str, default is Undefined, optional
        ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the aws_lb_listener_certificate resource.
    defaultAction : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0], default is Undefined, optional
        Configuration block for default actions. Detailed below.
    loadBalancerArn : str, default is Undefined, optional
        ARN of the load balancer.
    loadBalancerArnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRef, default is Undefined, optional
        load balancer arn ref
    loadBalancerArnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelector, default is Undefined, optional
        load balancer arn selector
    mutualAuthentication : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderMutualAuthenticationItems0], default is Undefined, optional
        The mutual authentication configuration information. Detailed below.
    port : float, default is Undefined, optional
        Port on which the load balancer is listening. Not valid for Gateway Load Balancers.
    $protocol : str, default is Undefined, optional
        Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are HTTP and HTTPS, with a default of HTTP. For Network Load Balancers, valid values are TCP, TLS, UDP, and TCP_UDP. Not valid to use UDP or TCP_UDP if dual-stack mode is enabled. Not valid for Gateway Load Balancers.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sslPolicy : str, default is Undefined, optional
        Name of the SSL Policy for the listener. Required if protocol is HTTPS or TLS.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        TCP idle timeout value in seconds. Can only be set if protocol is TCP on Network Load Balancer, or with a Gateway Load Balancer. Not supported for Application Load Balancers. Valid values are between 60 and 6000 inclusive. Default: 350.
    """


    alpnPolicy?: str

    certificateArn?: str

    defaultAction?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0]

    loadBalancerArn?: str

    loadBalancerArnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRef

    loadBalancerArnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelector

    mutualAuthentication?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderMutualAuthenticationItems0]

    port?: float

    $protocol?: str

    region: str

    sslPolicy?: str

    tags?: {str:str}

    tcpIdleTimeoutSeconds?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0

    Attributes
    ----------
    authenticateCognito : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateCognitoItems0], default is Undefined, optional
        Configuration block for using Amazon Cognito to authenticate users. Specify only when type is authenticate-cognito. Detailed below.
    authenticateOidc : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0], default is Undefined, optional
        Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when type is authenticate-oidc. Detailed below.
    fixedResponse : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0FixedResponseItems0], default is Undefined, optional
        Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.
    forward : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0], default is Undefined, optional
        Configuration block for creating an action that distributes requests among one or more target groups.
        Specify only if type is forward.
        Cannot be specified with target_group_arn.
        Detailed below.
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0RedirectItems0], default is Undefined, optional
        Configuration block for creating a redirect action. Required if type is redirect. Detailed below.
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    targetGroupArnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    $type : str, default is Undefined, optional
        Type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateCognitoItems0]

    authenticateOidc?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0]

    fixedResponse?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0FixedResponseItems0]

    forward?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0]

    order?: float

    redirect?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0RedirectItems0]

    targetGroupArn?: str

    targetGroupArnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelector

    $type?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateCognitoItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 authenticate cognito items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values are deny, allow and authenticate.
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        ARN of the Cognito user pool.
    userPoolClientId : str, default is Undefined, optional
        ID of the Cognito user pool client.
    userPoolDomain : str, default is Undefined, optional
        Domain prefix or fully-qualified domain name of the Cognito user pool.
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolClientId?: str

    userPoolDomain?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 authenticate oidc items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        Authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        OAuth 2.0 client identifier.
    clientSecretSecretRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef, default is Undefined, optional
        client secret secret ref
    issuer : str, default is Undefined, optional
        OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        Token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        User info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef:
    r"""
    OAuth 2.0 client secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0FixedResponseItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 fixed response items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        Content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        Message body.
    statusCode : str, default is Undefined, optional
        HTTP response code. Valid values are 2XX, 4XX, or 5XX.
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 forward items0

    Attributes
    ----------
    stickiness : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0StickinessItems0], default is Undefined, optional
        Configuration block for target group stickiness for the rule. Detailed below.
    targetGroup : [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0], default is Undefined, optional
        Set of 1-5 target group blocks. Detailed below.
    """


    stickiness?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0StickinessItems0]

    targetGroup?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0StickinessItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 forward items0 stickiness items0

    Attributes
    ----------
    duration : float, default is Undefined, optional
        Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Whether target group stickiness is enabled. Default is false.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 forward items0 target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target group.
    arnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector, default is Undefined, optional
        arn selector
    weight : float, default is Undefined, optional
        Weight. The range is 0 to 999.
    """


    arn?: str

    arnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef

    arnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector

    weight?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0RedirectItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider default action items0 redirect items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        Hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        Port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        Protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderDefaultActionItems0TargetGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRef:
    r"""
    Reference to a LB in elbv2 to populate loadBalancerArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelector:
    r"""
    Selector for a LB in elbv2 to populate loadBalancerArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderLoadBalancerArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecForProviderMutualAuthenticationItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec for provider mutual authentication items0

    Attributes
    ----------
    advertiseTrustStoreCaNames : str, default is Undefined, optional
        Valid values are off and on.
    ignoreClientCertificateExpiry : bool, default is Undefined, optional
        Whether client certificate expiry is ignored. Default is false.
    mode : str, default is Undefined, optional
        Valid values are off, verify and passthrough.
    trustStoreArn : str, default is Undefined, optional
        ARN of the elbv2 Trust Store.
    """


    advertiseTrustStoreCaNames?: str

    ignoreClientCertificateExpiry?: bool

    mode?: str

    trustStoreArn?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alpnPolicy : str, default is Undefined, optional
        Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if protocol is TLS. Valid values are HTTP1Only, HTTP2Only, HTTP2Optional, HTTP2Preferred, and None.
    certificateArn : str, default is Undefined, optional
        ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the aws_lb_listener_certificate resource.
    defaultAction : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0], default is Undefined, optional
        Configuration block for default actions. Detailed below.
    loadBalancerArn : str, default is Undefined, optional
        ARN of the load balancer.
    loadBalancerArnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRef, default is Undefined, optional
        load balancer arn ref
    loadBalancerArnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelector, default is Undefined, optional
        load balancer arn selector
    mutualAuthentication : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderMutualAuthenticationItems0], default is Undefined, optional
        The mutual authentication configuration information. Detailed below.
    port : float, default is Undefined, optional
        Port on which the load balancer is listening. Not valid for Gateway Load Balancers.
    $protocol : str, default is Undefined, optional
        Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are HTTP and HTTPS, with a default of HTTP. For Network Load Balancers, valid values are TCP, TLS, UDP, and TCP_UDP. Not valid to use UDP or TCP_UDP if dual-stack mode is enabled. Not valid for Gateway Load Balancers.
    sslPolicy : str, default is Undefined, optional
        Name of the SSL Policy for the listener. Required if protocol is HTTPS or TLS.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        TCP idle timeout value in seconds. Can only be set if protocol is TCP on Network Load Balancer, or with a Gateway Load Balancer. Not supported for Application Load Balancers. Valid values are between 60 and 6000 inclusive. Default: 350.
    """


    alpnPolicy?: str

    certificateArn?: str

    defaultAction?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0]

    loadBalancerArn?: str

    loadBalancerArnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRef

    loadBalancerArnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelector

    mutualAuthentication?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderMutualAuthenticationItems0]

    port?: float

    $protocol?: str

    sslPolicy?: str

    tags?: {str:str}

    tcpIdleTimeoutSeconds?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0

    Attributes
    ----------
    authenticateCognito : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateCognitoItems0], default is Undefined, optional
        Configuration block for using Amazon Cognito to authenticate users. Specify only when type is authenticate-cognito. Detailed below.
    authenticateOidc : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0], default is Undefined, optional
        Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when type is authenticate-oidc. Detailed below.
    fixedResponse : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0FixedResponseItems0], default is Undefined, optional
        Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.
    forward : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0], default is Undefined, optional
        Configuration block for creating an action that distributes requests among one or more target groups.
        Specify only if type is forward.
        Cannot be specified with target_group_arn.
        Detailed below.
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0RedirectItems0], default is Undefined, optional
        Configuration block for creating a redirect action. Required if type is redirect. Detailed below.
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    targetGroupArnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    $type : str, default is Undefined, optional
        Type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateCognitoItems0]

    authenticateOidc?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0]

    fixedResponse?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0FixedResponseItems0]

    forward?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0]

    order?: float

    redirect?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0RedirectItems0]

    targetGroupArn?: str

    targetGroupArnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelector

    $type?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateCognitoItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 authenticate cognito items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values are deny, allow and authenticate.
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        ARN of the Cognito user pool.
    userPoolClientId : str, default is Undefined, optional
        ID of the Cognito user pool client.
    userPoolDomain : str, default is Undefined, optional
        Domain prefix or fully-qualified domain name of the Cognito user pool.
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolClientId?: str

    userPoolDomain?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 authenticate oidc items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        Authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        OAuth 2.0 client identifier.
    clientSecretSecretRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    issuer : str, default is Undefined, optional
        OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        Token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        User info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0AuthenticateOidcItems0ClientSecretSecretRef:
    r"""
    OAuth 2.0 client secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0FixedResponseItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 fixed response items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        Content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        Message body.
    statusCode : str, default is Undefined, optional
        HTTP response code. Valid values are 2XX, 4XX, or 5XX.
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 forward items0

    Attributes
    ----------
    stickiness : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0StickinessItems0], default is Undefined, optional
        Configuration block for target group stickiness for the rule. Detailed below.
    targetGroup : [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0], default is Undefined, optional
        Set of 1-5 target group blocks. Detailed below.
    """


    stickiness?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0StickinessItems0]

    targetGroup?: [Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0StickinessItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 forward items0 stickiness items0

    Attributes
    ----------
    duration : float, default is Undefined, optional
        Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Whether target group stickiness is enabled. Default is false.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 forward items0 target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target group.
    arnRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector, default is Undefined, optional
        arn selector
    weight : float, default is Undefined, optional
        Weight. The range is 0 to 999.
    """


    arn?: str

    arnRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef

    arnSelector?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector

    weight?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0ForwardItems0TargetGroupItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0RedirectItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider default action items0 redirect items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        Hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        Port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        Protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderDefaultActionItems0TargetGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRef:
    r"""
    Reference to a LB in elbv2 to populate loadBalancerArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelector:
    r"""
    Selector for a LB in elbv2 to populate loadBalancerArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderLoadBalancerArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecInitProviderMutualAuthenticationItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener spec init provider mutual authentication items0

    Attributes
    ----------
    advertiseTrustStoreCaNames : str, default is Undefined, optional
        Valid values are off and on.
    ignoreClientCertificateExpiry : bool, default is Undefined, optional
        Whether client certificate expiry is ignored. Default is false.
    mode : str, default is Undefined, optional
        Valid values are off, verify and passthrough.
    trustStoreArn : str, default is Undefined, optional
        ARN of the elbv2 Trust Store.
    """


    advertiseTrustStoreCaNames?: str

    ignoreClientCertificateExpiry?: bool

    mode?: str

    trustStoreArn?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRef

    metadata?: Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToMetadata

    name: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRefPolicy


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatus:
    r"""
    LBListenerStatus defines the observed state of LBListener.

    Attributes
    ----------
    atProvider : Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Elbv2AwsUpboundIoV1beta1LBListenerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProvider

    conditions?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusConditionsItems0]

    observedGeneration?: int


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProvider:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider

    Attributes
    ----------
    alpnPolicy : str, default is Undefined, optional
        Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if protocol is TLS. Valid values are HTTP1Only, HTTP2Only, HTTP2Optional, HTTP2Preferred, and None.
    arn : str, default is Undefined, optional
        ARN of the listener (matches id).
    certificateArn : str, default is Undefined, optional
        ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the aws_lb_listener_certificate resource.
    defaultAction : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0], default is Undefined, optional
        Configuration block for default actions. Detailed below.
    id : str, default is Undefined, optional
        ARN of the listener (matches arn).
    loadBalancerArn : str, default is Undefined, optional
        ARN of the load balancer.
    mutualAuthentication : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderMutualAuthenticationItems0], default is Undefined, optional
        The mutual authentication configuration information. Detailed below.
    port : float, default is Undefined, optional
        Port on which the load balancer is listening. Not valid for Gateway Load Balancers.
    $protocol : str, default is Undefined, optional
        Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are HTTP and HTTPS, with a default of HTTP. For Network Load Balancers, valid values are TCP, TLS, UDP, and TCP_UDP. Not valid to use UDP or TCP_UDP if dual-stack mode is enabled. Not valid for Gateway Load Balancers.
    sslPolicy : str, default is Undefined, optional
        Name of the SSL Policy for the listener. Required if protocol is HTTPS or TLS.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tcpIdleTimeoutSeconds : float, default is Undefined, optional
        TCP idle timeout value in seconds. Can only be set if protocol is TCP on Network Load Balancer, or with a Gateway Load Balancer. Not supported for Application Load Balancers. Valid values are between 60 and 6000 inclusive. Default: 350.
    """


    alpnPolicy?: str

    arn?: str

    certificateArn?: str

    defaultAction?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0]

    id?: str

    loadBalancerArn?: str

    mutualAuthentication?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderMutualAuthenticationItems0]

    port?: float

    $protocol?: str

    sslPolicy?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tcpIdleTimeoutSeconds?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0

    Attributes
    ----------
    authenticateCognito : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateCognitoItems0], default is Undefined, optional
        Configuration block for using Amazon Cognito to authenticate users. Specify only when type is authenticate-cognito. Detailed below.
    authenticateOidc : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateOidcItems0], default is Undefined, optional
        Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when type is authenticate-oidc. Detailed below.
    fixedResponse : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0FixedResponseItems0], default is Undefined, optional
        Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.
    forward : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0], default is Undefined, optional
        Configuration block for creating an action that distributes requests among one or more target groups.
        Specify only if type is forward.
        Cannot be specified with target_group_arn.
        Detailed below.
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0RedirectItems0], default is Undefined, optional
        Configuration block for creating a redirect action. Required if type is redirect. Detailed below.
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    $type : str, default is Undefined, optional
        Type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateCognitoItems0]

    authenticateOidc?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateOidcItems0]

    fixedResponse?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0FixedResponseItems0]

    forward?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0]

    order?: float

    redirect?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0RedirectItems0]

    targetGroupArn?: str

    $type?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateCognitoItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 authenticate cognito items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values are deny, allow and authenticate.
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        ARN of the Cognito user pool.
    userPoolClientId : str, default is Undefined, optional
        ID of the Cognito user pool client.
    userPoolDomain : str, default is Undefined, optional
        Domain prefix or fully-qualified domain name of the Cognito user pool.
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolClientId?: str

    userPoolDomain?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0AuthenticateOidcItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 authenticate oidc items0

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        Authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        OAuth 2.0 client identifier.
    issuer : str, default is Undefined, optional
        OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        Behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        Set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        Name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        Maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        Token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        User info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0FixedResponseItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 fixed response items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        Content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        Message body.
    statusCode : str, default is Undefined, optional
        HTTP response code. Valid values are 2XX, 4XX, or 5XX.
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 forward items0

    Attributes
    ----------
    stickiness : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0StickinessItems0], default is Undefined, optional
        Configuration block for target group stickiness for the rule. Detailed below.
    targetGroup : [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0TargetGroupItems0], default is Undefined, optional
        Set of 1-5 target group blocks. Detailed below.
    """


    stickiness?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0StickinessItems0]

    targetGroup?: [Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0TargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0StickinessItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 forward items0 stickiness items0

    Attributes
    ----------
    duration : float, default is Undefined, optional
        Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Whether target group stickiness is enabled. Default is false.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0ForwardItems0TargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 forward items0 target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target group.
    weight : float, default is Undefined, optional
        Weight. The range is 0 to 999.
    """


    arn?: str

    weight?: float


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderDefaultActionItems0RedirectItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider default action items0 redirect items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        Hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        Port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        Protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusAtProviderMutualAuthenticationItems0:
    r"""
    elbv2 aws upbound io v1beta1 l b listener status at provider mutual authentication items0

    Attributes
    ----------
    advertiseTrustStoreCaNames : str, default is Undefined, optional
        Valid values are off and on.
    ignoreClientCertificateExpiry : bool, default is Undefined, optional
        Whether client certificate expiry is ignored. Default is false.
    mode : str, default is Undefined, optional
        Valid values are off, verify and passthrough.
    trustStoreArn : str, default is Undefined, optional
        ARN of the elbv2 Trust Store.
    """


    advertiseTrustStoreCaNames?: str

    ignoreClientCertificateExpiry?: bool

    mode?: str

    trustStoreArn?: str


schema Elbv2AwsUpboundIoV1beta1LBListenerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


