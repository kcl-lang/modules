"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stack:
    r"""
    Stack is the Schema for the Stacks API. Provides an OpsWorks stack resource.

    Attributes
    ----------
    apiVersion : str, default is "opsworks.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stack", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpsworksAwsUpboundIoV1beta2StackSpec, default is Undefined, required
        spec
    status : OpsworksAwsUpboundIoV1beta2StackStatus, default is Undefined, optional
        status
    """


    apiVersion: "opsworks.aws.upbound.io/v1beta2" = "opsworks.aws.upbound.io/v1beta2"

    kind: "Stack" = "Stack"

    metadata?: v1.ObjectMeta

    spec: OpsworksAwsUpboundIoV1beta2StackSpec

    status?: OpsworksAwsUpboundIoV1beta2StackStatus


schema OpsworksAwsUpboundIoV1beta2StackSpec:
    r"""
    StackSpec defines the desired state of Stack

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OpsworksAwsUpboundIoV1beta2StackSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpsworksAwsUpboundIoV1beta2StackSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OpsworksAwsUpboundIoV1beta2StackSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OpsworksAwsUpboundIoV1beta2StackSpecForProvider

    initProvider?: OpsworksAwsUpboundIoV1beta2StackSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRef

    publishConnectionDetailsTo?: OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OpsworksAwsUpboundIoV1beta2StackSpecWriteConnectionSecretToRef


schema OpsworksAwsUpboundIoV1beta2StackSpecForProvider:
    r"""
    opsworks aws upbound io v1beta2 stack spec for provider

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        If set to "LATEST", OpsWorks will automatically install the latest version.
    berkshelfVersion : str, default is Undefined, optional
        If manage_berkshelf is enabled, the version of Berkshelf to use.
    color : str, default is Undefined, optional
        Color to paint next to the stack's resources in the OpsWorks console.
    configurationManagerName : str, default is Undefined, optional
        Name of the configuration manager to use. Defaults to "Chef".
    configurationManagerVersion : str, default is Undefined, optional
        Version of the configuration manager to use. Defaults to "11.4".
    customCookbooksSource : OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSource, default is Undefined, optional
        custom cookbooks source
    customJson : str, default is Undefined, optional
        User defined JSON passed to "Chef". Use a "here doc" for multiline JSON.
    defaultAvailabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
        Cannot be set when vpc_id is set.
    defaultInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM Instance Profile that created instances will have by default.
    defaultInstanceProfileArnRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRef, default is Undefined, optional
        default instance profile arn ref
    defaultInstanceProfileArnSelector : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelector, default is Undefined, optional
        default instance profile arn selector
    defaultOs : str, default is Undefined, optional
        Name of OS that will be installed on instances by default.
    defaultRootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default.
    defaultSshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    defaultSubnetId : str, default is Undefined, optional
        ID of the subnet in which instances will be created by default.
        Required if vpc_id is set to a VPC other than the default VPC, and forbidden if it isn't.
    defaultSubnetIdRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRef, default is Undefined, optional
        default subnet Id ref
    defaultSubnetIdSelector : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelector, default is Undefined, optional
        default subnet Id selector
    hostnameTheme : str, default is Undefined, optional
        Keyword representing the naming scheme that will be used for instance hostnames within this stack.
    manageBerkshelf : bool, default is Undefined, optional
        Boolean value controlling whether Opsworks will run Berkshelf for this stack.
    name : str, default is Undefined, optional
        The name of the stack.
    region : str, default is Undefined, required
        The name of the region where the stack will exist.
    serviceRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that the OpsWorks service will act as.
    serviceRoleArnRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    useCustomCookbooks : bool, default is Undefined, optional
        Boolean value controlling whether the custom cookbook settings are enabled.
    useOpsworksSecurityGroups : bool, default is Undefined, optional
        Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
    vpcId : str, default is Undefined, optional
        ID of the VPC that this stack belongs to.
        Defaults to the region's default VPC.
    vpcIdRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    agentVersion?: str

    berkshelfVersion?: str

    color?: str

    configurationManagerName?: str

    configurationManagerVersion?: str

    customCookbooksSource?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSource

    customJson?: str

    defaultAvailabilityZone?: str

    defaultInstanceProfileArn?: str

    defaultInstanceProfileArnRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRef

    defaultInstanceProfileArnSelector?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelector

    defaultOs?: str

    defaultRootDeviceType?: str

    defaultSshKeyName?: str

    defaultSubnetId?: str

    defaultSubnetIdRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRef

    defaultSubnetIdSelector?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelector

    hostnameTheme?: str

    manageBerkshelf?: bool

    name?: str

    region: str

    serviceRoleArn?: str

    serviceRoleArnRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRef

    serviceRoleArnSelector?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelector

    tags?: {str:str}

    useCustomCookbooks?: bool

    useOpsworksSecurityGroups?: bool

    vpcId?: str

    vpcIdRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRef

    vpcIdSelector?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelector


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSource:
    r"""
    When use_custom_cookbooks is set, provide this sub-object as described below.

    Attributes
    ----------
    passwordSecretRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourcePasswordSecretRef, default is Undefined, optional
        password secret ref
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    sshKeySecretRef : OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourceSSHKeySecretRef, default is Undefined, optional
        ssh key secret ref
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the cookbooks resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    passwordSecretRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourcePasswordSecretRef

    revision?: str

    sshKeySecretRef?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourceSSHKeySecretRef

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourcePasswordSecretRef:
    r"""
    Password to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderCustomCookbooksSourceSSHKeySecretRef:
    r"""
    SSH key to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRef:
    r"""
    Reference to a InstanceProfile in iam to populate defaultInstanceProfileArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelector:
    r"""
    Selector for a InstanceProfile in iam to populate defaultInstanceProfileArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultInstanceProfileArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate defaultSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate defaultSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderDefaultSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecForProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        If set to "LATEST", OpsWorks will automatically install the latest version.
    berkshelfVersion : str, default is Undefined, optional
        If manage_berkshelf is enabled, the version of Berkshelf to use.
    color : str, default is Undefined, optional
        Color to paint next to the stack's resources in the OpsWorks console.
    configurationManagerName : str, default is Undefined, optional
        Name of the configuration manager to use. Defaults to "Chef".
    configurationManagerVersion : str, default is Undefined, optional
        Version of the configuration manager to use. Defaults to "11.4".
    customCookbooksSource : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSource, default is Undefined, optional
        custom cookbooks source
    customJson : str, default is Undefined, optional
        User defined JSON passed to "Chef". Use a "here doc" for multiline JSON.
    defaultAvailabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
        Cannot be set when vpc_id is set.
    defaultInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM Instance Profile that created instances will have by default.
    defaultInstanceProfileArnRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRef, default is Undefined, optional
        default instance profile arn ref
    defaultInstanceProfileArnSelector : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelector, default is Undefined, optional
        default instance profile arn selector
    defaultOs : str, default is Undefined, optional
        Name of OS that will be installed on instances by default.
    defaultRootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default.
    defaultSshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    defaultSubnetId : str, default is Undefined, optional
        ID of the subnet in which instances will be created by default.
        Required if vpc_id is set to a VPC other than the default VPC, and forbidden if it isn't.
    defaultSubnetIdRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRef, default is Undefined, optional
        default subnet Id ref
    defaultSubnetIdSelector : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelector, default is Undefined, optional
        default subnet Id selector
    hostnameTheme : str, default is Undefined, optional
        Keyword representing the naming scheme that will be used for instance hostnames within this stack.
    manageBerkshelf : bool, default is Undefined, optional
        Boolean value controlling whether Opsworks will run Berkshelf for this stack.
    name : str, default is Undefined, optional
        The name of the stack.
    serviceRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that the OpsWorks service will act as.
    serviceRoleArnRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    useCustomCookbooks : bool, default is Undefined, optional
        Boolean value controlling whether the custom cookbook settings are enabled.
    useOpsworksSecurityGroups : bool, default is Undefined, optional
        Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
    vpcId : str, default is Undefined, optional
        ID of the VPC that this stack belongs to.
        Defaults to the region's default VPC.
    vpcIdRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    agentVersion?: str

    berkshelfVersion?: str

    color?: str

    configurationManagerName?: str

    configurationManagerVersion?: str

    customCookbooksSource?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSource

    customJson?: str

    defaultAvailabilityZone?: str

    defaultInstanceProfileArn?: str

    defaultInstanceProfileArnRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRef

    defaultInstanceProfileArnSelector?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelector

    defaultOs?: str

    defaultRootDeviceType?: str

    defaultSshKeyName?: str

    defaultSubnetId?: str

    defaultSubnetIdRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRef

    defaultSubnetIdSelector?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelector

    hostnameTheme?: str

    manageBerkshelf?: bool

    name?: str

    serviceRoleArn?: str

    serviceRoleArnRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRef

    serviceRoleArnSelector?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelector

    tags?: {str:str}

    useCustomCookbooks?: bool

    useOpsworksSecurityGroups?: bool

    vpcId?: str

    vpcIdRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRef

    vpcIdSelector?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelector


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSource:
    r"""
    When use_custom_cookbooks is set, provide this sub-object as described below.

    Attributes
    ----------
    passwordSecretRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourcePasswordSecretRef, default is Undefined, optional
        password secret ref
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    sshKeySecretRef : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourceSSHKeySecretRef, default is Undefined, optional
        ssh key secret ref
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the cookbooks resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    passwordSecretRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourcePasswordSecretRef

    revision?: str

    sshKeySecretRef?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourceSSHKeySecretRef

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourcePasswordSecretRef:
    r"""
    Password to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderCustomCookbooksSourceSSHKeySecretRef:
    r"""
    SSH key to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRef:
    r"""
    Reference to a InstanceProfile in iam to populate defaultInstanceProfileArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelector:
    r"""
    Selector for a InstanceProfile in iam to populate defaultInstanceProfileArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultInstanceProfileArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate defaultSubnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate defaultSubnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderDefaultSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecInitProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRef

    metadata?: OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToMetadata

    name: str


schema OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StackSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OpsworksAwsUpboundIoV1beta2StackSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StackStatus:
    r"""
    StackStatus defines the observed state of Stack.

    Attributes
    ----------
    atProvider : OpsworksAwsUpboundIoV1beta2StackStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpsworksAwsUpboundIoV1beta2StackStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpsworksAwsUpboundIoV1beta2StackStatusAtProvider

    conditions?: [OpsworksAwsUpboundIoV1beta2StackStatusConditionsItems0]

    observedGeneration?: int


schema OpsworksAwsUpboundIoV1beta2StackStatusAtProvider:
    r"""
    opsworks aws upbound io v1beta2 stack status at provider

    Attributes
    ----------
    agentVersion : str, default is Undefined, optional
        If set to "LATEST", OpsWorks will automatically install the latest version.
    arn : str, default is Undefined, optional
        arn
    berkshelfVersion : str, default is Undefined, optional
        If manage_berkshelf is enabled, the version of Berkshelf to use.
    color : str, default is Undefined, optional
        Color to paint next to the stack's resources in the OpsWorks console.
    configurationManagerName : str, default is Undefined, optional
        Name of the configuration manager to use. Defaults to "Chef".
    configurationManagerVersion : str, default is Undefined, optional
        Version of the configuration manager to use. Defaults to "11.4".
    customCookbooksSource : OpsworksAwsUpboundIoV1beta2StackStatusAtProviderCustomCookbooksSource, default is Undefined, optional
        custom cookbooks source
    customJson : str, default is Undefined, optional
        User defined JSON passed to "Chef". Use a "here doc" for multiline JSON.
    defaultAvailabilityZone : str, default is Undefined, optional
        Name of the availability zone where instances will be created by default.
        Cannot be set when vpc_id is set.
    defaultInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM Instance Profile that created instances will have by default.
    defaultOs : str, default is Undefined, optional
        Name of OS that will be installed on instances by default.
    defaultRootDeviceType : str, default is Undefined, optional
        Name of the type of root device instances will have by default.
    defaultSshKeyName : str, default is Undefined, optional
        Name of the SSH keypair that instances will have by default.
    defaultSubnetId : str, default is Undefined, optional
        ID of the subnet in which instances will be created by default.
        Required if vpc_id is set to a VPC other than the default VPC, and forbidden if it isn't.
    hostnameTheme : str, default is Undefined, optional
        Keyword representing the naming scheme that will be used for instance hostnames within this stack.
    id : str, default is Undefined, optional
        The id of the stack.
    manageBerkshelf : bool, default is Undefined, optional
        Boolean value controlling whether Opsworks will run Berkshelf for this stack.
    name : str, default is Undefined, optional
        The name of the stack.
    region : str, default is Undefined, optional
        The name of the region where the stack will exist.
    serviceRoleArn : str, default is Undefined, optional
        The ARN of an IAM role that the OpsWorks service will act as.
    stackEndpoint : str, default is Undefined, optional
        stack endpoint
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    useCustomCookbooks : bool, default is Undefined, optional
        Boolean value controlling whether the custom cookbook settings are enabled.
    useOpsworksSecurityGroups : bool, default is Undefined, optional
        Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
    vpcId : str, default is Undefined, optional
        ID of the VPC that this stack belongs to.
        Defaults to the region's default VPC.
    """


    agentVersion?: str

    arn?: str

    berkshelfVersion?: str

    color?: str

    configurationManagerName?: str

    configurationManagerVersion?: str

    customCookbooksSource?: OpsworksAwsUpboundIoV1beta2StackStatusAtProviderCustomCookbooksSource

    customJson?: str

    defaultAvailabilityZone?: str

    defaultInstanceProfileArn?: str

    defaultOs?: str

    defaultRootDeviceType?: str

    defaultSshKeyName?: str

    defaultSubnetId?: str

    hostnameTheme?: str

    id?: str

    manageBerkshelf?: bool

    name?: str

    region?: str

    serviceRoleArn?: str

    stackEndpoint?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    useCustomCookbooks?: bool

    useOpsworksSecurityGroups?: bool

    vpcId?: str


schema OpsworksAwsUpboundIoV1beta2StackStatusAtProviderCustomCookbooksSource:
    r"""
    When use_custom_cookbooks is set, provide this sub-object as described below.

    Attributes
    ----------
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the cookbooks resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    revision?: str

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta2StackStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


