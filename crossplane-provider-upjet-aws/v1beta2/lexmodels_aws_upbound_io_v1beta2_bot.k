"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Bot:
    r"""
    Bot is the Schema for the Bots API. Provides an Amazon Lex bot resource.

    Attributes
    ----------
    apiVersion : str, default is "lexmodels.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Bot", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LexmodelsAwsUpboundIoV1beta2BotSpec, default is Undefined, required
        spec
    status : LexmodelsAwsUpboundIoV1beta2BotStatus, default is Undefined, optional
        status
    """


    apiVersion: "lexmodels.aws.upbound.io/v1beta2" = "lexmodels.aws.upbound.io/v1beta2"

    kind: "Bot" = "Bot"

    metadata?: v1.ObjectMeta

    spec: LexmodelsAwsUpboundIoV1beta2BotSpec

    status?: LexmodelsAwsUpboundIoV1beta2BotStatus


schema LexmodelsAwsUpboundIoV1beta2BotSpec:
    r"""
    BotSpec defines the desired state of Bot

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LexmodelsAwsUpboundIoV1beta2BotSpecForProvider, default is Undefined, required
        for provider
    initProvider : LexmodelsAwsUpboundIoV1beta2BotSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LexmodelsAwsUpboundIoV1beta2BotSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LexmodelsAwsUpboundIoV1beta2BotSpecForProvider

    initProvider?: LexmodelsAwsUpboundIoV1beta2BotSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRef

    publishConnectionDetailsTo?: LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LexmodelsAwsUpboundIoV1beta2BotSpecWriteConnectionSecretToRef


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProvider:
    r"""
    lexmodels aws upbound io v1beta2 bot spec for provider

    Attributes
    ----------
    abortStatement : LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatement, default is Undefined, optional
        abort statement
    childDirected : bool, default is Undefined, optional
        By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.
    clarificationPrompt : LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPrompt, default is Undefined, optional
        clarification prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    detectSentiment : bool, default is Undefined, optional
        When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.
    enableModelImprovements : bool, default is Undefined, optional
        Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.
    idleSessionTtlInSeconds : float, default is Undefined, optional
        The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).
    intent : [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderIntentItems0], default is Undefined, optional
        A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
    locale : str, default is Undefined, optional
        Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.
    nluIntentConfidenceThreshold : float, default is Undefined, optional
        Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.
    processBehavior : str, default is Undefined, optional
        If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    voiceId : str, default is Undefined, optional
        The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.
    """


    abortStatement?: LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatement

    childDirected?: bool

    clarificationPrompt?: LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPrompt

    createVersion?: bool

    description?: str

    detectSentiment?: bool

    enableModelImprovements?: bool

    idleSessionTtlInSeconds?: float

    intent?: [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderIntentItems0]

    locale?: str

    nluIntentConfidenceThreshold?: float

    processBehavior?: str

    region: str

    voiceId?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatement:
    r"""
    The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProviderAbortStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec for provider abort statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPrompt:
    r"""
    The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information.
    message : [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProviderClarificationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec for provider clarification prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotSpecForProviderIntentItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec for provider intent items0

    Attributes
    ----------
    intentName : str, default is Undefined, optional
        The name of the intent. Must be less than or equal to 100 characters in length.
    intentVersion : str, default is Undefined, optional
        The version of the intent. Must be less than or equal to 64 characters in length.
    """


    intentName?: str

    intentVersion?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    abortStatement : LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatement, default is Undefined, optional
        abort statement
    childDirected : bool, default is Undefined, optional
        By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.
    clarificationPrompt : LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPrompt, default is Undefined, optional
        clarification prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    detectSentiment : bool, default is Undefined, optional
        When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.
    enableModelImprovements : bool, default is Undefined, optional
        Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.
    idleSessionTtlInSeconds : float, default is Undefined, optional
        The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).
    intent : [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderIntentItems0], default is Undefined, optional
        A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
    locale : str, default is Undefined, optional
        Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.
    nluIntentConfidenceThreshold : float, default is Undefined, optional
        Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.
    processBehavior : str, default is Undefined, optional
        If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.
    voiceId : str, default is Undefined, optional
        The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.
    """


    abortStatement?: LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatement

    childDirected?: bool

    clarificationPrompt?: LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPrompt

    createVersion?: bool

    description?: str

    detectSentiment?: bool

    enableModelImprovements?: bool

    idleSessionTtlInSeconds?: float

    intent?: [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderIntentItems0]

    locale?: str

    nluIntentConfidenceThreshold?: float

    processBehavior?: str

    voiceId?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatement:
    r"""
    The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderAbortStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec init provider abort statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPrompt:
    r"""
    The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information.
    message : [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderClarificationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec init provider clarification prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotSpecInitProviderIntentItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot spec init provider intent items0

    Attributes
    ----------
    intentName : str, default is Undefined, optional
        The name of the intent. Must be less than or equal to 100 characters in length.
    intentVersion : str, default is Undefined, optional
        The version of the intent. Must be less than or equal to 64 characters in length.
    """


    intentName?: str

    intentVersion?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRefPolicy


schema LexmodelsAwsUpboundIoV1beta2BotSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRef

    metadata?: LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToMetadata

    name: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRefPolicy


schema LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LexmodelsAwsUpboundIoV1beta2BotSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LexmodelsAwsUpboundIoV1beta2BotSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LexmodelsAwsUpboundIoV1beta2BotStatus:
    r"""
    BotStatus defines the observed state of Bot.

    Attributes
    ----------
    atProvider : LexmodelsAwsUpboundIoV1beta2BotStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LexmodelsAwsUpboundIoV1beta2BotStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LexmodelsAwsUpboundIoV1beta2BotStatusAtProvider

    conditions?: [LexmodelsAwsUpboundIoV1beta2BotStatusConditionsItems0]

    observedGeneration?: int


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProvider:
    r"""
    lexmodels aws upbound io v1beta2 bot status at provider

    Attributes
    ----------
    abortStatement : LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatement, default is Undefined, optional
        abort statement
    arn : str, default is Undefined, optional
        arn
    checksum : str, default is Undefined, optional
        Checksum identifying the version of the bot that was created. The checksum is not
        included as an argument because the resource will add it automatically when updating the bot.
    childDirected : bool, default is Undefined, optional
        By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.
    clarificationPrompt : LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPrompt, default is Undefined, optional
        clarification prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.
    createdDate : str, default is Undefined, optional
        The date when the bot version was created.
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    detectSentiment : bool, default is Undefined, optional
        When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.
    enableModelImprovements : bool, default is Undefined, optional
        Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.
    failureReason : str, default is Undefined, optional
        If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.
    id : str, default is Undefined, optional
        id
    idleSessionTtlInSeconds : float, default is Undefined, optional
        The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).
    intent : [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderIntentItems0], default is Undefined, optional
        A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
    lastUpdatedDate : str, default is Undefined, optional
        The date when the $LATEST version of this bot was updated.
    locale : str, default is Undefined, optional
        Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.
    nluIntentConfidenceThreshold : float, default is Undefined, optional
        Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.
    processBehavior : str, default is Undefined, optional
        If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.
    status : str, default is Undefined, optional
        When you send a request to create or update a bot, Amazon Lex sets the status response
        element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
        build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
        failure_reason response element.
    version : str, default is Undefined, optional
        The version of the bot.
    voiceId : str, default is Undefined, optional
        The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.
    """


    abortStatement?: LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatement

    arn?: str

    checksum?: str

    childDirected?: bool

    clarificationPrompt?: LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPrompt

    createVersion?: bool

    createdDate?: str

    description?: str

    detectSentiment?: bool

    enableModelImprovements?: bool

    failureReason?: str

    id?: str

    idleSessionTtlInSeconds?: float

    intent?: [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderIntentItems0]

    lastUpdatedDate?: str

    locale?: str

    nluIntentConfidenceThreshold?: float

    processBehavior?: str

    status?: str

    version?: str

    voiceId?: str


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatement:
    r"""
    The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderAbortStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot status at provider abort statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPrompt:
    r"""
    The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information.
    message : [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderClarificationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot status at provider clarification prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response.
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2BotStatusAtProviderIntentItems0:
    r"""
    lexmodels aws upbound io v1beta2 bot status at provider intent items0

    Attributes
    ----------
    intentName : str, default is Undefined, optional
        The name of the intent. Must be less than or equal to 100 characters in length.
    intentVersion : str, default is Undefined, optional
        The version of the intent. Must be less than or equal to 64 characters in length.
    """


    intentName?: str

    intentVersion?: str


schema LexmodelsAwsUpboundIoV1beta2BotStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


