"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConnectAttachment:
    r"""
    ConnectAttachment is the Schema for the ConnectAttachments API.

    Attributes
    ----------
    apiVersion : str, default is "networkmanager.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConnectAttachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpec, default is Undefined, required
        spec
    status : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkmanager.aws.upbound.io/v1beta1" = "networkmanager.aws.upbound.io/v1beta1"

    kind: "ConnectAttachment" = "ConnectAttachment"

    metadata?: v1.ObjectMeta

    spec: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpec

    status?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatus


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpec:
    r"""
    ConnectAttachmentSpec defines the desired state of ConnectAttachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProvider

    initProvider?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecWriteConnectionSecretToRef


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProvider:
    r"""
    networkmanager aws upbound io v1beta1 connect attachment spec for provider

    Attributes
    ----------
    coreNetworkId : str, default is Undefined, optional
        The ID of a core network where you want to create the attachment.
    coreNetworkIdRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRef, default is Undefined, optional
        core network Id ref
    coreNetworkIdSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelector, default is Undefined, optional
        core network Id selector
    edgeLocation : str, default is Undefined, optional
        The Region where the edge is located.
    edgeLocationRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRef, default is Undefined, optional
        edge location ref
    edgeLocationSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelector, default is Undefined, optional
        edge location selector
    options : [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderOptionsItems0], default is Undefined, optional
        Options block. See options for more information.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transportAttachmentId : str, default is Undefined, optional
        The ID of the attachment between the two connections.
    transportAttachmentIdRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRef, default is Undefined, optional
        transport attachment Id ref
    transportAttachmentIdSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelector, default is Undefined, optional
        transport attachment Id selector
    """


    coreNetworkId?: str

    coreNetworkIdRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRef

    coreNetworkIdSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelector

    edgeLocation?: str

    edgeLocationRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRef

    edgeLocationSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelector

    options?: [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderOptionsItems0]

    region: str

    tags?: {str:str}

    transportAttachmentId?: str

    transportAttachmentIdRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRef

    transportAttachmentIdSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelector


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRef:
    r"""
    Reference to a CoreNetwork in networkmanager to populate coreNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelector:
    r"""
    Selector for a CoreNetwork in networkmanager to populate coreNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderCoreNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate edgeLocation.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate edgeLocation.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderEdgeLocationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderOptionsItems0:
    r"""
    networkmanager aws upbound io v1beta1 connect attachment spec for provider options items0

    Attributes
    ----------
    $protocol : str, default is Undefined, optional
        The protocol used for the attachment connection. Possible values are GRE and NO_ENCAP.
    """


    $protocol?: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate transportAttachmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate transportAttachmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecForProviderTransportAttachmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    coreNetworkId : str, default is Undefined, optional
        The ID of a core network where you want to create the attachment.
    coreNetworkIdRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRef, default is Undefined, optional
        core network Id ref
    coreNetworkIdSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelector, default is Undefined, optional
        core network Id selector
    edgeLocation : str, default is Undefined, optional
        The Region where the edge is located.
    edgeLocationRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRef, default is Undefined, optional
        edge location ref
    edgeLocationSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelector, default is Undefined, optional
        edge location selector
    options : [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderOptionsItems0], default is Undefined, optional
        Options block. See options for more information.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transportAttachmentId : str, default is Undefined, optional
        The ID of the attachment between the two connections.
    transportAttachmentIdRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRef, default is Undefined, optional
        transport attachment Id ref
    transportAttachmentIdSelector : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelector, default is Undefined, optional
        transport attachment Id selector
    """


    coreNetworkId?: str

    coreNetworkIdRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRef

    coreNetworkIdSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelector

    edgeLocation?: str

    edgeLocationRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRef

    edgeLocationSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelector

    options?: [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderOptionsItems0]

    tags?: {str:str}

    transportAttachmentId?: str

    transportAttachmentIdRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRef

    transportAttachmentIdSelector?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelector


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRef:
    r"""
    Reference to a CoreNetwork in networkmanager to populate coreNetworkId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelector:
    r"""
    Selector for a CoreNetwork in networkmanager to populate coreNetworkId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderCoreNetworkIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate edgeLocation.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate edgeLocation.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderEdgeLocationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderOptionsItems0:
    r"""
    networkmanager aws upbound io v1beta1 connect attachment spec init provider options items0

    Attributes
    ----------
    $protocol : str, default is Undefined, optional
        The protocol used for the attachment connection. Possible values are GRE and NO_ENCAP.
    """


    $protocol?: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRef:
    r"""
    Reference to a VPCAttachment in networkmanager to populate transportAttachmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelector:
    r"""
    Selector for a VPCAttachment in networkmanager to populate transportAttachmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelectorPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecInitProviderTransportAttachmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatus:
    r"""
    ConnectAttachmentStatus defines the observed state of ConnectAttachment.

    Attributes
    ----------
    atProvider : NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProvider

    conditions?: [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusConditionsItems0]

    observedGeneration?: int


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProvider:
    r"""
    networkmanager aws upbound io v1beta1 connect attachment status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the attachment.
    attachmentId : str, default is Undefined, optional
        The ID of the attachment.
    attachmentPolicyRuleNumber : float, default is Undefined, optional
        The policy rule number associated with the attachment.
    attachmentType : str, default is Undefined, optional
        The type of attachment.
    coreNetworkArn : str, default is Undefined, optional
        The ARN of a core network.
    coreNetworkId : str, default is Undefined, optional
        The ID of a core network where you want to create the attachment.
    edgeLocation : str, default is Undefined, optional
        The Region where the edge is located.
    id : str, default is Undefined, optional
        The ID of the attachment.
    options : [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProviderOptionsItems0], default is Undefined, optional
        Options block. See options for more information.
    ownerAccountId : str, default is Undefined, optional
        The ID of the attachment account owner.
    resourceArn : str, default is Undefined, optional
        The attachment resource ARN.
    segmentName : str, default is Undefined, optional
        The name of the segment attachment.
    state : str, default is Undefined, optional
        The state of the attachment.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    transportAttachmentId : str, default is Undefined, optional
        The ID of the attachment between the two connections.
    """


    arn?: str

    attachmentId?: str

    attachmentPolicyRuleNumber?: float

    attachmentType?: str

    coreNetworkArn?: str

    coreNetworkId?: str

    edgeLocation?: str

    id?: str

    options?: [NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProviderOptionsItems0]

    ownerAccountId?: str

    resourceArn?: str

    segmentName?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    transportAttachmentId?: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusAtProviderOptionsItems0:
    r"""
    networkmanager aws upbound io v1beta1 connect attachment status at provider options items0

    Attributes
    ----------
    $protocol : str, default is Undefined, optional
        The protocol used for the attachment connection. Possible values are GRE and NO_ENCAP.
    """


    $protocol?: str


schema NetworkmanagerAwsUpboundIoV1beta1ConnectAttachmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


