"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    r"""
    Application is the Schema for the Applications API. Manages a Kinesis Analytics v2 Application.

    Attributes
    ----------
    apiVersion : str, default is "kinesisanalyticsv2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpec, default is Undefined, required
        spec
    status : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "kinesisanalyticsv2.aws.upbound.io/v1beta2" = "kinesisanalyticsv2.aws.upbound.io/v1beta2"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpec

    status?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatus


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpec:
    r"""
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProvider

    initProvider?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProvider:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider

    Attributes
    ----------
    applicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfiguration, default is Undefined, optional
        application configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    cloudwatchLoggingOptions : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    serviceExecutionRoleRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRef, default is Undefined, optional
        service execution role ref
    serviceExecutionRoleSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelector, default is Undefined, optional
        service execution role selector
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfiguration

    applicationMode?: str

    cloudwatchLoggingOptions?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions

    description?: str

    forceStop?: bool

    region: str

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    serviceExecutionRoleRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRef

    serviceExecutionRoleSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelector

    startApplication?: bool

    tags?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfiguration:
    r"""
    The application's configuration

    Attributes
    ----------
    applicationCodeConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfiguration, default is Undefined, optional
        application code configuration
    applicationSnapshotConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationSnapshotConfiguration, default is Undefined, optional
        application snapshot configuration
    environmentProperties : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentProperties, default is Undefined, optional
        environment properties
    flinkApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfiguration, default is Undefined, optional
        flink application configuration
    runConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfiguration, default is Undefined, optional
        run configuration
    sqlApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfiguration, default is Undefined, optional
        sql application configuration
    vpcConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfiguration, default is Undefined, optional
        vpc configuration
    """


    applicationCodeConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfiguration

    applicationSnapshotConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationSnapshotConfiguration

    environmentProperties?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentProperties

    flinkApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfiguration

    runConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfiguration

    sqlApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfiguration

    vpcConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfiguration:
    r"""
    The code location and type parameters for the application.

    Attributes
    ----------
    codeContent : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContent, default is Undefined, optional
        code content
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContent

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContent:
    r"""
    The location and type of the application code.

    Attributes
    ----------
    s3ContentLocation : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation, default is Undefined, optional
        s3 content location
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation:
    r"""
    Information about the Amazon S3 bucket containing the application code.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    fileKeyRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector

    fileKey?: str

    fileKeyRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef

    fileKeySelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationApplicationSnapshotConfiguration:
    r"""
    Describes whether snapshots are enabled for a Flink-based application.

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentProperties:
    r"""
    Describes execution properties for a Flink-based application.

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider application configuration environment properties property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfiguration:
    r"""
    The configuration of a Flink-based application.

    Attributes
    ----------
    checkpointConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration, default is Undefined, optional
        checkpoint configuration
    monitoringConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration, default is Undefined, optional
        monitoring configuration
    parallelismConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration, default is Undefined, optional
        parallelism configuration
    """


    checkpointConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration

    monitoringConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration

    parallelismConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration:
    r"""
    Describes an application's checkpointing configuration.

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration:
    r"""
    Describes configuration parameters for CloudWatch logging for an application.

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration:
    r"""
    Describes parameters for how an application executes multiple tasks simultaneously.

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfiguration:
    r"""
    Describes the starting properties for a Flink-based application.

    Attributes
    ----------
    applicationRestoreConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration, default is Undefined, optional
        application restore configuration
    flinkRunConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration, default is Undefined, optional
        flink run configuration
    """


    applicationRestoreConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration

    flinkRunConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration:
    r"""
    The restore behavior of a restarting application.

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration:
    r"""
    The starting parameters for a Flink-based Kinesis Data Analytics application.

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfiguration:
    r"""
    The configuration of a SQL-based application.

    Attributes
    ----------
    input : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInput, default is Undefined, optional
        input
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource, default is Undefined, optional
        reference data source
    """


    input?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInput

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0]

    referenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInput:
    r"""
    The input stream used by the application.

    Attributes
    ----------
    inputParallelism : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism, default is Undefined, optional
        input parallelism
    inputProcessingConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration, default is Undefined, optional
        input processing configuration
    inputSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema, default is Undefined, optional
        input schema
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput, default is Undefined, optional
        kinesis firehose input
    kinesisStreamsInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput, default is Undefined, optional
        kinesis streams input
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inputParallelism?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism

    inputProcessingConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration

    inputSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput

    kinesisStreamsInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism:
    r"""
    Describes the number of in-application streams to create.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration:
    r"""
    The input processing configuration for the input.
    An input processor transforms records as they are received from the stream, before the application's SQL code executes.

    Attributes
    ----------
    inputLambdaProcessor : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor, default is Undefined, optional
        input lambda processor
    """


    inputLambdaProcessor?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor:
    r"""
    Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider application configuration SQL application configuration input input schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider application configuration SQL application configuration input input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput:
    r"""
    If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput:
    r"""
    If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider application configuration SQL application configuration output items0

    Attributes
    ----------
    destinationSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema, default is Undefined, optional
        destination schema
    kinesisFirehoseOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput, default is Undefined, optional
        kinesis firehose output
    kinesisStreamsOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput, default is Undefined, optional
        kinesis streams output
    lambdaOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput, default is Undefined, optional
        lambda output
    name : str, default is Undefined, optional
        The name of the application.
    """


    destinationSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema

    kinesisFirehoseOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput

    kinesisStreamsOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput

    lambdaOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput

    name?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema:
    r"""
    Describes the data format when records are written to the destination.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput:
    r"""
    Identifies a Kinesis Data Firehose delivery stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput:
    r"""
    Identifies a Kinesis data stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput:
    r"""
    Identifies a Lambda function as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef:
    r"""
    Reference to a Function in lambda to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector:
    r"""
    Selector for a Function in lambda to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource:
    r"""
    The reference data source used by the application.

    Attributes
    ----------
    referenceSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema, default is Undefined, optional
        reference schema
    s3ReferenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource, default is Undefined, optional
        s3 reference data source
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema

    s3ReferenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec for provider application configuration SQL application configuration reference data source reference schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource:
    r"""
    Identifies the S3 bucket and object that contains the reference data.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfiguration:
    r"""
    The VPC configuration of a Flink-based application.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    securityGroupIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    subnetIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0]

    subnetIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptions:
    r"""
    A CloudWatch log stream to monitor application configuration errors.

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    logStreamArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef

    logStreamArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfiguration, default is Undefined, optional
        application configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    cloudwatchLoggingOptions : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    serviceExecutionRoleRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRef, default is Undefined, optional
        service execution role ref
    serviceExecutionRoleSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelector, default is Undefined, optional
        service execution role selector
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfiguration

    applicationMode?: str

    cloudwatchLoggingOptions?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions

    description?: str

    forceStop?: bool

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    serviceExecutionRoleRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRef

    serviceExecutionRoleSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelector

    startApplication?: bool

    tags?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfiguration:
    r"""
    The application's configuration

    Attributes
    ----------
    applicationCodeConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfiguration, default is Undefined, optional
        application code configuration
    applicationSnapshotConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationSnapshotConfiguration, default is Undefined, optional
        application snapshot configuration
    environmentProperties : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentProperties, default is Undefined, optional
        environment properties
    flinkApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfiguration, default is Undefined, optional
        flink application configuration
    runConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfiguration, default is Undefined, optional
        run configuration
    sqlApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfiguration, default is Undefined, optional
        sql application configuration
    vpcConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfiguration, default is Undefined, optional
        vpc configuration
    """


    applicationCodeConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfiguration

    applicationSnapshotConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationSnapshotConfiguration

    environmentProperties?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentProperties

    flinkApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfiguration

    runConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfiguration

    sqlApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfiguration

    vpcConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfiguration:
    r"""
    The code location and type parameters for the application.

    Attributes
    ----------
    codeContent : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContent, default is Undefined, optional
        code content
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContent

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContent:
    r"""
    The location and type of the application code.

    Attributes
    ----------
    s3ContentLocation : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation, default is Undefined, optional
        s3 content location
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation:
    r"""
    Information about the Amazon S3 bucket containing the application code.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    fileKeyRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector

    fileKey?: str

    fileKeyRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef

    fileKeySelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationFileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationApplicationSnapshotConfiguration:
    r"""
    Describes whether snapshots are enabled for a Flink-based application.

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentProperties:
    r"""
    Describes execution properties for a Flink-based application.

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec init provider application configuration environment properties property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfiguration:
    r"""
    The configuration of a Flink-based application.

    Attributes
    ----------
    checkpointConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration, default is Undefined, optional
        checkpoint configuration
    monitoringConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration, default is Undefined, optional
        monitoring configuration
    parallelismConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration, default is Undefined, optional
        parallelism configuration
    """


    checkpointConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration

    monitoringConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration

    parallelismConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration:
    r"""
    Describes an application's checkpointing configuration.

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration:
    r"""
    Describes configuration parameters for CloudWatch logging for an application.

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration:
    r"""
    Describes parameters for how an application executes multiple tasks simultaneously.

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfiguration:
    r"""
    Describes the starting properties for a Flink-based application.

    Attributes
    ----------
    applicationRestoreConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration, default is Undefined, optional
        application restore configuration
    flinkRunConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration, default is Undefined, optional
        flink run configuration
    """


    applicationRestoreConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration

    flinkRunConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration:
    r"""
    The restore behavior of a restarting application.

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration:
    r"""
    The starting parameters for a Flink-based Kinesis Data Analytics application.

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfiguration:
    r"""
    The configuration of a SQL-based application.

    Attributes
    ----------
    input : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInput, default is Undefined, optional
        input
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource, default is Undefined, optional
        reference data source
    """


    input?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInput

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0]

    referenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInput:
    r"""
    The input stream used by the application.

    Attributes
    ----------
    inputParallelism : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism, default is Undefined, optional
        input parallelism
    inputProcessingConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration, default is Undefined, optional
        input processing configuration
    inputSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema, default is Undefined, optional
        input schema
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput, default is Undefined, optional
        kinesis firehose input
    kinesisStreamsInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput, default is Undefined, optional
        kinesis streams input
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inputParallelism?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism

    inputProcessingConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration

    inputSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput

    kinesisStreamsInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism:
    r"""
    Describes the number of in-application streams to create.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration:
    r"""
    The input processing configuration for the input.
    An input processor transforms records as they are received from the stream, before the application's SQL code executes.

    Attributes
    ----------
    inputLambdaProcessor : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor, default is Undefined, optional
        input lambda processor
    """


    inputLambdaProcessor?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor:
    r"""
    Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec init provider application configuration SQL application configuration input input schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec init provider application configuration SQL application configuration input input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput:
    r"""
    If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput:
    r"""
    If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec init provider application configuration SQL application configuration output items0

    Attributes
    ----------
    destinationSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema, default is Undefined, optional
        destination schema
    kinesisFirehoseOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput, default is Undefined, optional
        kinesis firehose output
    kinesisStreamsOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput, default is Undefined, optional
        kinesis streams output
    lambdaOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput, default is Undefined, optional
        lambda output
    name : str, default is Undefined, optional
        The name of the application.
    """


    destinationSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema

    kinesisFirehoseOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput

    kinesisStreamsOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput

    lambdaOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput

    name?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema:
    r"""
    Describes the data format when records are written to the destination.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput:
    r"""
    Identifies a Kinesis Data Firehose delivery stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput:
    r"""
    Identifies a Kinesis data stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput:
    r"""
    Identifies a Lambda function as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRef:
    r"""
    Reference to a Function in lambda to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelector:
    r"""
    Selector for a Function in lambda to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutputResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource:
    r"""
    The reference data source used by the application.

    Attributes
    ----------
    referenceSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema, default is Undefined, optional
        reference schema
    s3ReferenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource, default is Undefined, optional
        s3 reference data source
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema

    s3ReferenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application spec init provider application configuration SQL application configuration reference data source reference schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource:
    r"""
    Identifies the S3 bucket and object that contains the reference data.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfiguration:
    r"""
    The VPC configuration of a Flink-based application.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    securityGroupIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    subnetIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0]

    subnetIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderApplicationConfigurationVpcConfigurationSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptions:
    r"""
    A CloudWatch log stream to monitor application configuration errors.

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    logStreamArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef

    logStreamArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderCloudwatchLoggingOptionsLogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatus:
    r"""
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProvider

    conditions?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusConditionsItems0]

    observedGeneration?: int


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProvider:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider

    Attributes
    ----------
    applicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfiguration, default is Undefined, optional
        application configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    arn : str, default is Undefined, optional
        The ARN of the application.
    cloudwatchLoggingOptions : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions, default is Undefined, optional
        cloudwatch logging options
    createTimestamp : str, default is Undefined, optional
        The current timestamp when the application was created.
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    id : str, default is Undefined, optional
        The application identifier.
    lastUpdateTimestamp : str, default is Undefined, optional
        The current timestamp when the application was last updated.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    status : str, default is Undefined, optional
        The status of the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    versionId : float, default is Undefined, optional
        The current application version. Kinesis Data Analytics updates the version_id each time the application is updated.
    """


    applicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfiguration

    applicationMode?: str

    arn?: str

    cloudwatchLoggingOptions?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions

    createTimestamp?: str

    description?: str

    forceStop?: bool

    id?: str

    lastUpdateTimestamp?: str

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    startApplication?: bool

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    versionId?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfiguration:
    r"""
    The application's configuration

    Attributes
    ----------
    applicationCodeConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfiguration, default is Undefined, optional
        application code configuration
    applicationSnapshotConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationSnapshotConfiguration, default is Undefined, optional
        application snapshot configuration
    environmentProperties : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentProperties, default is Undefined, optional
        environment properties
    flinkApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfiguration, default is Undefined, optional
        flink application configuration
    runConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfiguration, default is Undefined, optional
        run configuration
    sqlApplicationConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfiguration, default is Undefined, optional
        sql application configuration
    vpcConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationVpcConfiguration, default is Undefined, optional
        vpc configuration
    """


    applicationCodeConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfiguration

    applicationSnapshotConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationSnapshotConfiguration

    environmentProperties?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentProperties

    flinkApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfiguration

    runConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfiguration

    sqlApplicationConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfiguration

    vpcConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationVpcConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfiguration:
    r"""
    The code location and type parameters for the application.

    Attributes
    ----------
    codeContent : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContent, default is Undefined, optional
        code content
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContent

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContent:
    r"""
    The location and type of the application code.

    Attributes
    ----------
    s3ContentLocation : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation, default is Undefined, optional
        s3 content location
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation:
    r"""
    Information about the Amazon S3 bucket containing the application code.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    fileKey?: str

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationApplicationSnapshotConfiguration:
    r"""
    Describes whether snapshots are enabled for a Flink-based application.

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentProperties:
    r"""
    Describes execution properties for a Flink-based application.

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationEnvironmentPropertiesPropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider application configuration environment properties property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfiguration:
    r"""
    The configuration of a Flink-based application.

    Attributes
    ----------
    checkpointConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration, default is Undefined, optional
        checkpoint configuration
    monitoringConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration, default is Undefined, optional
        monitoring configuration
    parallelismConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration, default is Undefined, optional
        parallelism configuration
    """


    checkpointConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration

    monitoringConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration

    parallelismConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration:
    r"""
    Describes an application's checkpointing configuration.

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration:
    r"""
    Describes configuration parameters for CloudWatch logging for an application.

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration:
    r"""
    Describes parameters for how an application executes multiple tasks simultaneously.

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfiguration:
    r"""
    Describes the starting properties for a Flink-based application.

    Attributes
    ----------
    applicationRestoreConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration, default is Undefined, optional
        application restore configuration
    flinkRunConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration, default is Undefined, optional
        flink run configuration
    """


    applicationRestoreConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration

    flinkRunConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationApplicationRestoreConfiguration:
    r"""
    The restore behavior of a restarting application.

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationRunConfigurationFlinkRunConfiguration:
    r"""
    The starting parameters for a Flink-based Kinesis Data Analytics application.

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfiguration:
    r"""
    The configuration of a SQL-based application.

    Attributes
    ----------
    input : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInput, default is Undefined, optional
        input
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource, default is Undefined, optional
        reference data source
    """


    input?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInput

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0]

    referenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInput:
    r"""
    The input stream used by the application.

    Attributes
    ----------
    inAppStreamNames : [str], default is Undefined, optional
        in app stream names
    inputId : str, default is Undefined, optional
        The application identifier.
    inputParallelism : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism, default is Undefined, optional
        input parallelism
    inputProcessingConfiguration : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration, default is Undefined, optional
        input processing configuration
    inputSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema, default is Undefined, optional
        input schema
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput, default is Undefined, optional
        kinesis firehose input
    kinesisStreamsInput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput, default is Undefined, optional
        kinesis streams input
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inAppStreamNames?: [str]

    inputId?: str

    inputParallelism?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism

    inputProcessingConfiguration?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration

    inputSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput

    kinesisStreamsInput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputParallelism:
    r"""
    Describes the number of in-application streams to create.

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfiguration:
    r"""
    The input processing configuration for the input.
    An input processor transforms records as they are received from the stream, before the application's SQL code executes.

    Attributes
    ----------
    inputLambdaProcessor : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor, default is Undefined, optional
        input lambda processor
    """


    inputLambdaProcessor?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor:
    r"""
    Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider application configuration SQL application configuration input input schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputInputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider application configuration SQL application configuration input input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisFirehoseInput:
    r"""
    If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationInputKinesisStreamsInput:
    r"""
    If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider application configuration SQL application configuration output items0

    Attributes
    ----------
    destinationSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema, default is Undefined, optional
        destination schema
    kinesisFirehoseOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput, default is Undefined, optional
        kinesis firehose output
    kinesisStreamsOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput, default is Undefined, optional
        kinesis streams output
    lambdaOutput : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput, default is Undefined, optional
        lambda output
    name : str, default is Undefined, optional
        The name of the application.
    outputId : str, default is Undefined, optional
        The application identifier.
    """


    destinationSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema

    kinesisFirehoseOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput

    kinesisStreamsOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput

    lambdaOutput?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput

    name?: str

    outputId?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0DestinationSchema:
    r"""
    Describes the data format when records are written to the destination.

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisFirehoseOutput:
    r"""
    Identifies a Kinesis Data Firehose delivery stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0KinesisStreamsOutput:
    r"""
    Identifies a Kinesis data stream as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationOutputItems0LambdaOutput:
    r"""
    Identifies a Lambda function as the destination.

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSource:
    r"""
    The reference data source used by the application.

    Attributes
    ----------
    referenceId : str, default is Undefined, optional
        The application identifier.
    referenceSchema : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema, default is Undefined, optional
        reference schema
    s3ReferenceDataSource : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource, default is Undefined, optional
        s3 reference data source
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceId?: str

    referenceSchema?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema

    s3ReferenceDataSource?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchema:
    r"""
    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat, default is Undefined, optional
        record format
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0]

    recordEncoding?: str

    recordFormat?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta2 application status at provider application configuration SQL application configuration reference data source reference schema record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat:
    r"""
    Specifies the format of the records on the streaming source.

    Attributes
    ----------
    mappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters, default is Undefined, optional
        mapping parameters
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters:
    r"""
    Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

    Attributes
    ----------
    csvMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters, default is Undefined, optional
        csv mapping parameters
    jsonMappingParameters : Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters, default is Undefined, optional
        json mapping parameters
    """


    csvMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters

    jsonMappingParameters?: Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters:
    r"""
    Provides additional mapping information when the record format uses delimiters (for example, CSV).

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJSONMappingParameters:
    r"""
    Provides additional mapping information when JSON is the record format on the streaming source.

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationSQLApplicationConfigurationReferenceDataSourceS3ReferenceDataSource:
    r"""
    Identifies the S3 bucket and object that contains the reference data.

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderApplicationConfigurationVpcConfiguration:
    r"""
    The VPC configuration of a Flink-based application.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    vpcConfigurationId : str, default is Undefined, optional
        The application identifier.
    vpcId : str, default is Undefined, optional
        The application identifier.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcConfigurationId?: str

    vpcId?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusAtProviderCloudwatchLoggingOptions:
    r"""
    A CloudWatch log stream to monitor application configuration errors.

    Attributes
    ----------
    cloudwatchLoggingOptionId : str, default is Undefined, optional
        The application identifier.
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    """


    cloudwatchLoggingOptionId?: str

    logStreamArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta2ApplicationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


