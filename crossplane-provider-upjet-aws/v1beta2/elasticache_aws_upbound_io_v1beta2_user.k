"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema User:
    r"""
    User is the Schema for the Users API. Provides an ElastiCache user.

    Attributes
    ----------
    apiVersion : str, default is "elasticache.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticacheAwsUpboundIoV1beta2UserSpec, default is Undefined, required
        spec
    status : ElasticacheAwsUpboundIoV1beta2UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticache.aws.upbound.io/v1beta2" = "elasticache.aws.upbound.io/v1beta2"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: ElasticacheAwsUpboundIoV1beta2UserSpec

    status?: ElasticacheAwsUpboundIoV1beta2UserStatus


schema ElasticacheAwsUpboundIoV1beta2UserSpec:
    r"""
    UserSpec defines the desired state of User

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElasticacheAwsUpboundIoV1beta2UserSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElasticacheAwsUpboundIoV1beta2UserSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticacheAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticacheAwsUpboundIoV1beta2UserSpecForProvider

    initProvider?: ElasticacheAwsUpboundIoV1beta2UserSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRef

    publishConnectionDetailsTo?: ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticacheAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef


schema ElasticacheAwsUpboundIoV1beta2UserSpecForProvider:
    r"""
    elasticache aws upbound io v1beta2 user spec for provider

    Attributes
    ----------
    accessString : str, default is Undefined, optional
        Access permissions string used for this user. See Specifying Permissions Using an Access String for more details.
    authenticationMode : ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationMode, default is Undefined, optional
        authentication mode
    engine : str, default is Undefined, optional
        The current supported value is REDIS.
    noPasswordRequired : bool, default is Undefined, optional
        Indicates a password is not required for this user.
    passwordsSecretRef : [ElasticacheAwsUpboundIoV1beta2UserSpecForProviderPasswordsSecretRefItems0], default is Undefined, optional
        Passwords used for this user. You can create up to two passwords for each user.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userName : str, default is Undefined, optional
        The username of the user.
    """


    accessString?: str

    authenticationMode?: ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationMode

    engine?: str

    noPasswordRequired?: bool

    passwordsSecretRef?: [ElasticacheAwsUpboundIoV1beta2UserSpecForProviderPasswordsSecretRefItems0]

    region: str

    tags?: {str:str}

    userName?: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationMode:
    r"""
    Denotes the user's authentication properties. Detailed below.

    Attributes
    ----------
    passwordsSecretRef : [ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationModePasswordsSecretRefItems0], default is Undefined, optional
        Specifies the passwords to use for authentication if type is set to password.
    $type : str, default is Undefined, optional
        Specifies the authentication type. Possible options are: password, no-password-required or iam.
    """


    passwordsSecretRef?: [ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationModePasswordsSecretRefItems0]

    $type?: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecForProviderAuthenticationModePasswordsSecretRefItems0:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecForProviderPasswordsSecretRefItems0:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessString : str, default is Undefined, optional
        Access permissions string used for this user. See Specifying Permissions Using an Access String for more details.
    authenticationMode : ElasticacheAwsUpboundIoV1beta2UserSpecInitProviderAuthenticationMode, default is Undefined, optional
        authentication mode
    engine : str, default is Undefined, optional
        The current supported value is REDIS.
    noPasswordRequired : bool, default is Undefined, optional
        Indicates a password is not required for this user.
    passwordsSecretRef : [str], default is Undefined, optional
        passwords secret ref
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userName : str, default is Undefined, optional
        The username of the user.
    """


    accessString?: str

    authenticationMode?: ElasticacheAwsUpboundIoV1beta2UserSpecInitProviderAuthenticationMode

    engine?: str

    noPasswordRequired?: bool

    passwordsSecretRef?: [str]

    tags?: {str:str}

    userName?: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecInitProviderAuthenticationMode:
    r"""
    Denotes the user's authentication properties. Detailed below.

    Attributes
    ----------
    passwordsSecretRef : [str], default is Undefined, optional
        passwords secret ref
    $type : str, default is Undefined, optional
        Specifies the authentication type. Possible options are: password, no-password-required or iam.
    """


    passwordsSecretRef?: [str]

    $type?: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticacheAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2UserStatus:
    r"""
    UserStatus defines the observed state of User.

    Attributes
    ----------
    atProvider : ElasticacheAwsUpboundIoV1beta2UserStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticacheAwsUpboundIoV1beta2UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElasticacheAwsUpboundIoV1beta2UserStatusAtProvider

    conditions?: [ElasticacheAwsUpboundIoV1beta2UserStatusConditionsItems0]

    observedGeneration?: int


schema ElasticacheAwsUpboundIoV1beta2UserStatusAtProvider:
    r"""
    elasticache aws upbound io v1beta2 user status at provider

    Attributes
    ----------
    accessString : str, default is Undefined, optional
        Access permissions string used for this user. See Specifying Permissions Using an Access String for more details.
    arn : str, default is Undefined, optional
        The ARN of the created ElastiCache User.
    authenticationMode : ElasticacheAwsUpboundIoV1beta2UserStatusAtProviderAuthenticationMode, default is Undefined, optional
        authentication mode
    engine : str, default is Undefined, optional
        The current supported value is REDIS.
    id : str, default is Undefined, optional
        id
    noPasswordRequired : bool, default is Undefined, optional
        Indicates a password is not required for this user.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    userName : str, default is Undefined, optional
        The username of the user.
    """


    accessString?: str

    arn?: str

    authenticationMode?: ElasticacheAwsUpboundIoV1beta2UserStatusAtProviderAuthenticationMode

    engine?: str

    id?: str

    noPasswordRequired?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    userName?: str


schema ElasticacheAwsUpboundIoV1beta2UserStatusAtProviderAuthenticationMode:
    r"""
    Denotes the user's authentication properties. Detailed below.

    Attributes
    ----------
    passwordCount : float, default is Undefined, optional
        password count
    $type : str, default is Undefined, optional
        Specifies the authentication type. Possible options are: password, no-password-required or iam.
    """


    passwordCount?: float

    $type?: str


schema ElasticacheAwsUpboundIoV1beta2UserStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


