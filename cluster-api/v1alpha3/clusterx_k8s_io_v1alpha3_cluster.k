"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the clusters API.

    Attributes
    ----------
    apiVersion : str, default is "cluster.x-k8s.io/v1alpha3", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ClusterxK8sIoV1alpha3ClusterSpec, default is Undefined, optional
        spec
    status : ClusterxK8sIoV1alpha3ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "cluster.x-k8s.io/v1alpha3" = "cluster.x-k8s.io/v1alpha3"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec?: ClusterxK8sIoV1alpha3ClusterSpec

    status?: ClusterxK8sIoV1alpha3ClusterStatus


schema ClusterxK8sIoV1alpha3ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster.

    Attributes
    ----------
    clusterNetwork : ClusterxK8sIoV1alpha3ClusterSpecClusterNetwork, default is Undefined, optional
        cluster network
    controlPlaneEndpoint : ClusterxK8sIoV1alpha3ClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    controlPlaneRef : ClusterxK8sIoV1alpha3ClusterSpecControlPlaneRef, default is Undefined, optional
        control plane ref
    infrastructureRef : ClusterxK8sIoV1alpha3ClusterSpecInfrastructureRef, default is Undefined, optional
        infrastructure ref
    paused : bool, default is Undefined, optional
        Paused can be used to prevent controllers from processing the Cluster and all its associated objects.
    """


    clusterNetwork?: ClusterxK8sIoV1alpha3ClusterSpecClusterNetwork

    controlPlaneEndpoint?: ClusterxK8sIoV1alpha3ClusterSpecControlPlaneEndpoint

    controlPlaneRef?: ClusterxK8sIoV1alpha3ClusterSpecControlPlaneRef

    infrastructureRef?: ClusterxK8sIoV1alpha3ClusterSpecInfrastructureRef

    paused?: bool


schema ClusterxK8sIoV1alpha3ClusterSpecClusterNetwork:
    r"""
    Cluster network configuration.

    Attributes
    ----------
    apiServerPort : int, default is Undefined, optional
        APIServerPort specifies the port the API Server should bind to.
        Defaults to 6443.
    pods : ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkPods, default is Undefined, optional
        pods
    serviceDomain : str, default is Undefined, optional
        Domain name for services.
    services : ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkServices, default is Undefined, optional
        services
    """


    apiServerPort?: int

    pods?: ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkPods

    serviceDomain?: str

    services?: ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkServices


schema ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkPods:
    r"""
    The network ranges from which Pod networks are allocated.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, required
        cidr blocks
    """


    cidrBlocks: [str]


schema ClusterxK8sIoV1alpha3ClusterSpecClusterNetworkServices:
    r"""
    The network ranges from which service VIPs are allocated.

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, required
        cidr blocks
    """


    cidrBlocks: [str]


schema ClusterxK8sIoV1alpha3ClusterSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema ClusterxK8sIoV1alpha3ClusterSpecControlPlaneRef:
    r"""
    ControlPlaneRef is an optional reference to a provider-specific resource that holds
    the details for provisioning the Control Plane for a Cluster.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
        TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema ClusterxK8sIoV1alpha3ClusterSpecInfrastructureRef:
    r"""
    InfrastructureRef is a reference to a provider-specific resource that holds the details
    for provisioning infrastructure for a cluster in said provider.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
        TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema ClusterxK8sIoV1alpha3ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    conditions : [ClusterxK8sIoV1alpha3ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the cluster.
    controlPlaneInitialized : bool, default is Undefined, optional
        ControlPlaneInitialized defines if the control plane has been initialized.
    controlPlaneReady : bool, default is Undefined, optional
        ControlPlaneReady defines if the control plane is ready.
    failureDomains : {str:ClusterxK8sIoV1alpha3ClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains is a slice of failure domain objects synced from the infrastructure provider.
    failureMessage : str, default is Undefined, optional
        FailureMessage indicates that there is a fatal problem reconciling the
        state, and will be set to a descriptive error message.
    failureReason : str, default is Undefined, optional
        FailureReason indicates that there is a fatal problem reconciling the
        state, and will be set to a token value suitable for
        programmatic interpretation.
    infrastructureReady : bool, default is Undefined, optional
        InfrastructureReady is the state of the infrastructure provider.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest generation observed by the controller.
    phase : str, default is Undefined, optional
        Phase represents the current phase of cluster actuation.
        E.g. Pending, Running, Terminating, Failed etc.
    """


    conditions?: [ClusterxK8sIoV1alpha3ClusterStatusConditionsItems0]

    controlPlaneInitialized?: bool

    controlPlaneReady?: bool

    failureDomains?: {str:ClusterxK8sIoV1alpha3ClusterStatusFailureDomainsAnon}

    failureMessage?: str

    failureReason?: str

    infrastructureReady?: bool

    observedGeneration?: int

    phase?: str


schema ClusterxK8sIoV1alpha3ClusterStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema ClusterxK8sIoV1alpha3ClusterStatusFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


