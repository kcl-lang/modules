"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RemediationConfiguration:
    r"""
    RemediationConfiguration is the Schema for the RemediationConfigurations API. Provides an AWS Config Remediation Configuration.

    Attributes
    ----------
    apiVersion : str, default is "configservice.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RemediationConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpec, default is Undefined, required
        spec
    status : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "configservice.aws.upbound.io/v1beta2" = "configservice.aws.upbound.io/v1beta2"

    kind: "RemediationConfiguration" = "RemediationConfiguration"

    metadata?: v1.ObjectMeta

    spec: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpec

    status?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatus


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpec:
    r"""
    RemediationConfigurationSpec defines the desired state of RemediationConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProvider

    initProvider?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecWriteConnectionSecretToRef


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProvider:
    r"""
    configservice aws upbound io v1beta2 remediation configuration spec for provider

    Attributes
    ----------
    automatic : bool, default is Undefined, optional
        Remediation is triggered automatically if true.
    executionControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControls, default is Undefined, optional
        execution controls
    maximumAutomaticAttempts : float, default is Undefined, optional
        Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
    parameter : [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderParameterItems0], default is Undefined, optional
        Can be specified multiple times for each parameter. Each parameter block supports arguments below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceType : str, default is Undefined, optional
        Type of resource.
    retryAttemptSeconds : float, default is Undefined, optional
        Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
    targetId : str, default is Undefined, optional
        Target ID is the name of the public document.
    targetType : str, default is Undefined, optional
        Type of the target. Target executes remediation. For example, SSM document.
    targetVersion : str, default is Undefined, optional
        Version of the target. For example, version of the SSM document
    """


    automatic?: bool

    executionControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControls

    maximumAutomaticAttempts?: float

    parameter?: [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderParameterItems0]

    region: str

    resourceType?: str

    retryAttemptSeconds?: float

    targetId?: str

    targetType?: str

    targetVersion?: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControls:
    r"""
    Configuration block for execution controls. See below.

    Attributes
    ----------
    ssmControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControlsSsmControls, default is Undefined, optional
        ssm controls
    """


    ssmControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControlsSsmControls


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderExecutionControlsSsmControls:
    r"""
    Configuration block for SSM controls. See below.

    Attributes
    ----------
    concurrentExecutionRatePercentage : float, default is Undefined, optional
        Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
    errorPercentage : float, default is Undefined, optional
        Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
    """


    concurrentExecutionRatePercentage?: float

    errorPercentage?: float


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecForProviderParameterItems0:
    r"""
    configservice aws upbound io v1beta2 remediation configuration spec for provider parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute.
    resourceValue : str, default is Undefined, optional
        Value is dynamic and changes at run-time.
    staticValue : str, default is Undefined, optional
        Value is static and does not change at run-time.
    staticValues : [str], default is Undefined, optional
        List of static values.
    """


    name?: str

    resourceValue?: str

    staticValue?: str

    staticValues?: [str]


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    automatic : bool, default is Undefined, optional
        Remediation is triggered automatically if true.
    executionControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControls, default is Undefined, optional
        execution controls
    maximumAutomaticAttempts : float, default is Undefined, optional
        Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
    parameter : [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderParameterItems0], default is Undefined, optional
        Can be specified multiple times for each parameter. Each parameter block supports arguments below.
    resourceType : str, default is Undefined, optional
        Type of resource.
    retryAttemptSeconds : float, default is Undefined, optional
        Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
    targetId : str, default is Undefined, optional
        Target ID is the name of the public document.
    targetType : str, default is Undefined, optional
        Type of the target. Target executes remediation. For example, SSM document.
    targetVersion : str, default is Undefined, optional
        Version of the target. For example, version of the SSM document
    """


    automatic?: bool

    executionControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControls

    maximumAutomaticAttempts?: float

    parameter?: [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderParameterItems0]

    resourceType?: str

    retryAttemptSeconds?: float

    targetId?: str

    targetType?: str

    targetVersion?: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControls:
    r"""
    Configuration block for execution controls. See below.

    Attributes
    ----------
    ssmControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControlsSsmControls, default is Undefined, optional
        ssm controls
    """


    ssmControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControlsSsmControls


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderExecutionControlsSsmControls:
    r"""
    Configuration block for SSM controls. See below.

    Attributes
    ----------
    concurrentExecutionRatePercentage : float, default is Undefined, optional
        Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
    errorPercentage : float, default is Undefined, optional
        Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
    """


    concurrentExecutionRatePercentage?: float

    errorPercentage?: float


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecInitProviderParameterItems0:
    r"""
    configservice aws upbound io v1beta2 remediation configuration spec init provider parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute.
    resourceValue : str, default is Undefined, optional
        Value is dynamic and changes at run-time.
    staticValue : str, default is Undefined, optional
        Value is static and does not change at run-time.
    staticValues : [str], default is Undefined, optional
        List of static values.
    """


    name?: str

    resourceValue?: str

    staticValue?: str

    staticValues?: [str]


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatus:
    r"""
    RemediationConfigurationStatus defines the observed state of RemediationConfiguration.

    Attributes
    ----------
    atProvider : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProvider

    conditions?: [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProvider:
    r"""
    configservice aws upbound io v1beta2 remediation configuration status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Config Remediation Configuration.
    automatic : bool, default is Undefined, optional
        Remediation is triggered automatically if true.
    executionControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControls, default is Undefined, optional
        execution controls
    id : str, default is Undefined, optional
        id
    maximumAutomaticAttempts : float, default is Undefined, optional
        Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
    parameter : [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderParameterItems0], default is Undefined, optional
        Can be specified multiple times for each parameter. Each parameter block supports arguments below.
    resourceType : str, default is Undefined, optional
        Type of resource.
    retryAttemptSeconds : float, default is Undefined, optional
        Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
    targetId : str, default is Undefined, optional
        Target ID is the name of the public document.
    targetType : str, default is Undefined, optional
        Type of the target. Target executes remediation. For example, SSM document.
    targetVersion : str, default is Undefined, optional
        Version of the target. For example, version of the SSM document
    """


    arn?: str

    automatic?: bool

    executionControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControls

    id?: str

    maximumAutomaticAttempts?: float

    parameter?: [ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderParameterItems0]

    resourceType?: str

    retryAttemptSeconds?: float

    targetId?: str

    targetType?: str

    targetVersion?: str


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControls:
    r"""
    Configuration block for execution controls. See below.

    Attributes
    ----------
    ssmControls : ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControlsSsmControls, default is Undefined, optional
        ssm controls
    """


    ssmControls?: ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControlsSsmControls


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderExecutionControlsSsmControls:
    r"""
    Configuration block for SSM controls. See below.

    Attributes
    ----------
    concurrentExecutionRatePercentage : float, default is Undefined, optional
        Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
    errorPercentage : float, default is Undefined, optional
        Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
    """


    concurrentExecutionRatePercentage?: float

    errorPercentage?: float


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusAtProviderParameterItems0:
    r"""
    configservice aws upbound io v1beta2 remediation configuration status at provider parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute.
    resourceValue : str, default is Undefined, optional
        Value is dynamic and changes at run-time.
    staticValue : str, default is Undefined, optional
        Value is static and does not change at run-time.
    staticValues : [str], default is Undefined, optional
        List of static values.
    """


    name?: str

    resourceValue?: str

    staticValue?: str

    staticValues?: [str]


schema ConfigserviceAwsUpboundIoV1beta2RemediationConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


