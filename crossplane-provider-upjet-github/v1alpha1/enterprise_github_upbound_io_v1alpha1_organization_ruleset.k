"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema OrganizationRuleset:
    r"""
    OrganizationRuleset is the Schema for the OrganizationRulesets API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "enterprise.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "OrganizationRuleset", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpec, default is Undefined, required
        spec
    status : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatus, default is Undefined, optional
        status
    """


    apiVersion: "enterprise.github.upbound.io/v1alpha1" = "enterprise.github.upbound.io/v1alpha1"

    kind: "OrganizationRuleset" = "OrganizationRuleset"

    metadata?: v1.ObjectMeta

    spec: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpec

    status?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatus


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpec:
    r"""
    OrganizationRulesetSpec defines the desired state of OrganizationRuleset

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProvider, default is Undefined, required
        for provider
    initProvider : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProvider

    initProvider?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRef

    publishConnectionDetailsTo?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecWriteConnectionSecretToRef


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProvider:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider

    Attributes
    ----------
    bypassActors : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderBypassActorsItems0], default is Undefined, optional
        The actors that can bypass the rules in this ruleset.
    conditions : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0], default is Undefined, optional
        Parameters for an organization ruleset condition. `ref_name` is required alongside one of `repository_name` or `repository_id`.
    enforcement : str, default is Undefined, optional
        Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
    name : str, default is Undefined, optional
        The name of the ruleset.
    rules : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0], default is Undefined, optional
        Rules within the ruleset.
    target : str, default is Undefined, optional
        Possible values are `branch`, `tag` and `push`. Note: The `push` target is in beta and is subject to change.
    """


    bypassActors?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderBypassActorsItems0]

    conditions?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0]

    enforcement?: str

    name?: str

    rules?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0]

    target?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderBypassActorsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider bypass actors items0

    Attributes
    ----------
    actorId : int, default is Undefined, optional
        The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
    actorType : str, default is Undefined, optional
        The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
    bypassMode : str, default is Undefined, optional
        When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
    """


    actorId?: int

    actorType?: str

    bypassMode?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider conditions items0

    Attributes
    ----------
    refName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RefNameItems0], default is Undefined, optional
        ref name
    repositoryId : [int], default is Undefined, optional
        The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass.
    repositoryName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RepositoryNameItems0], default is Undefined, optional
        repository name
    """


    refName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RefNameItems0]

    repositoryId?: [int]

    repositoryName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RepositoryNameItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RefNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider conditions items0 ref name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
    """


    exclude?: [str]

    include?: [str]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderConditionsItems0RepositoryNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider conditions items0 repository name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
    protected : bool, default is Undefined, optional
        Whether renaming of target repositories is prevented.
    """


    exclude?: [str]

    include?: [str]

    protected?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0

    Attributes
    ----------
    branchNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0BranchNamePatternItems0], default is Undefined, optional
        Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
    commitAuthorEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitAuthorEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the commit_author_email_pattern rule.
    commitMessagePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitMessagePatternItems0], default is Undefined, optional
        Parameters to be used for the commit_message_pattern rule.
    committerEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitterEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the committer_email_pattern rule.
    creation : bool, default is Undefined, optional
        Only allow users with bypass permission to create matching refs.
    deletion : bool, default is Undefined, optional
        Only allow users with bypass permissions to delete matching refs.
    nonFastForward : bool, default is Undefined, optional
        Prevent users with push access from force pushing to branches.
    pullRequest : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0PullRequestItems0], default is Undefined, optional
        Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
    requiredLinearHistory : bool, default is Undefined, optional
        Prevent merge commits from being pushed to matching branches.
    requiredSignatures : bool, default is Undefined, optional
        Commits pushed to matching branches must have verified signatures.
    requiredStatusChecks : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0], default is Undefined, optional
        Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
    requiredWorkflows : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0], default is Undefined, optional
        Choose which Actions workflows must pass before branches can be merged into a branch that matches this rule.
    tagNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0TagNamePatternItems0], default is Undefined, optional
        Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
    update : bool, default is Undefined, optional
        Only allow users with bypass permission to update matching refs.
    """


    branchNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0BranchNamePatternItems0]

    commitAuthorEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitAuthorEmailPatternItems0]

    commitMessagePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitMessagePatternItems0]

    committerEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitterEmailPatternItems0]

    creation?: bool

    deletion?: bool

    nonFastForward?: bool

    pullRequest?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0PullRequestItems0]

    requiredLinearHistory?: bool

    requiredSignatures?: bool

    requiredStatusChecks?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0]

    requiredWorkflows?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0]

    tagNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0TagNamePatternItems0]

    update?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0BranchNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 branch name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitAuthorEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 commit author email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitMessagePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 commit message pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0CommitterEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 committer email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0PullRequestItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 pull request items0

    Attributes
    ----------
    dismissStaleReviewsOnPush : bool, default is Undefined, optional
        New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
    requireCodeOwnerReview : bool, default is Undefined, optional
        Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
    requireLastPushApproval : bool, default is Undefined, optional
        Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
    requiredApprovingReviewCount : int, default is Undefined, optional
        The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
    requiredReviewThreadResolution : bool, default is Undefined, optional
        All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
    """


    dismissStaleReviewsOnPush?: bool

    requireCodeOwnerReview?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    requiredReviewThreadResolution?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 required status checks items0

    Attributes
    ----------
    requiredCheck : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0], default is Undefined, optional
        Status checks that are required. Several can be defined.
    strictRequiredStatusChecksPolicy : bool, default is Undefined, optional
        Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
    """


    requiredCheck?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0]

    strictRequiredStatusChecksPolicy?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 required status checks items0 required check items0

    Attributes
    ----------
    context : str, default is Undefined, optional
        The status check context name that must be present on the commit.
    integrationId : int, default is Undefined, optional
        The optional integration ID that this status check must originate from.
    """


    context?: str

    integrationId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 required workflows items0

    Attributes
    ----------
    requiredWorkflow : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0], default is Undefined, optional
        Actions workflows that are required. Several can be defined.
    """


    requiredWorkflow?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 required workflows items0 required workflow items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The path to the workflow YAML definition file.
    ref : str, default is Undefined, optional
        The ref (branch or tag) of the workflow file to use.
    repositoryId : int, default is Undefined, optional
        The repository in which the workflow is defined.
    """


    path?: str

    ref?: str

    repositoryId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecForProviderRulesItems0TagNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec for provider rules items0 tag name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bypassActors : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderBypassActorsItems0], default is Undefined, optional
        The actors that can bypass the rules in this ruleset.
    conditions : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0], default is Undefined, optional
        Parameters for an organization ruleset condition. `ref_name` is required alongside one of `repository_name` or `repository_id`.
    enforcement : str, default is Undefined, optional
        Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
    name : str, default is Undefined, optional
        The name of the ruleset.
    rules : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0], default is Undefined, optional
        Rules within the ruleset.
    target : str, default is Undefined, optional
        Possible values are `branch`, `tag` and `push`. Note: The `push` target is in beta and is subject to change.
    """


    bypassActors?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderBypassActorsItems0]

    conditions?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0]

    enforcement?: str

    name?: str

    rules?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0]

    target?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderBypassActorsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider bypass actors items0

    Attributes
    ----------
    actorId : int, default is Undefined, optional
        The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
    actorType : str, default is Undefined, optional
        The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
    bypassMode : str, default is Undefined, optional
        When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
    """


    actorId?: int

    actorType?: str

    bypassMode?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider conditions items0

    Attributes
    ----------
    refName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RefNameItems0], default is Undefined, optional
        ref name
    repositoryId : [int], default is Undefined, optional
        The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass.
    repositoryName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RepositoryNameItems0], default is Undefined, optional
        repository name
    """


    refName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RefNameItems0]

    repositoryId?: [int]

    repositoryName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RepositoryNameItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RefNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider conditions items0 ref name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
    """


    exclude?: [str]

    include?: [str]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderConditionsItems0RepositoryNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider conditions items0 repository name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
    protected : bool, default is Undefined, optional
        Whether renaming of target repositories is prevented.
    """


    exclude?: [str]

    include?: [str]

    protected?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0

    Attributes
    ----------
    branchNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0BranchNamePatternItems0], default is Undefined, optional
        Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
    commitAuthorEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitAuthorEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the commit_author_email_pattern rule.
    commitMessagePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitMessagePatternItems0], default is Undefined, optional
        Parameters to be used for the commit_message_pattern rule.
    committerEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitterEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the committer_email_pattern rule.
    creation : bool, default is Undefined, optional
        Only allow users with bypass permission to create matching refs.
    deletion : bool, default is Undefined, optional
        Only allow users with bypass permissions to delete matching refs.
    nonFastForward : bool, default is Undefined, optional
        Prevent users with push access from force pushing to branches.
    pullRequest : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0PullRequestItems0], default is Undefined, optional
        Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
    requiredLinearHistory : bool, default is Undefined, optional
        Prevent merge commits from being pushed to matching branches.
    requiredSignatures : bool, default is Undefined, optional
        Commits pushed to matching branches must have verified signatures.
    requiredStatusChecks : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0], default is Undefined, optional
        Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
    requiredWorkflows : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0], default is Undefined, optional
        Choose which Actions workflows must pass before branches can be merged into a branch that matches this rule.
    tagNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0TagNamePatternItems0], default is Undefined, optional
        Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
    update : bool, default is Undefined, optional
        Only allow users with bypass permission to update matching refs.
    """


    branchNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0BranchNamePatternItems0]

    commitAuthorEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitAuthorEmailPatternItems0]

    commitMessagePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitMessagePatternItems0]

    committerEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitterEmailPatternItems0]

    creation?: bool

    deletion?: bool

    nonFastForward?: bool

    pullRequest?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0PullRequestItems0]

    requiredLinearHistory?: bool

    requiredSignatures?: bool

    requiredStatusChecks?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0]

    requiredWorkflows?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0]

    tagNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0TagNamePatternItems0]

    update?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0BranchNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 branch name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitAuthorEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 commit author email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitMessagePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 commit message pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0CommitterEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 committer email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0PullRequestItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 pull request items0

    Attributes
    ----------
    dismissStaleReviewsOnPush : bool, default is Undefined, optional
        New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
    requireCodeOwnerReview : bool, default is Undefined, optional
        Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
    requireLastPushApproval : bool, default is Undefined, optional
        Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
    requiredApprovingReviewCount : int, default is Undefined, optional
        The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
    requiredReviewThreadResolution : bool, default is Undefined, optional
        All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
    """


    dismissStaleReviewsOnPush?: bool

    requireCodeOwnerReview?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    requiredReviewThreadResolution?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 required status checks items0

    Attributes
    ----------
    requiredCheck : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0], default is Undefined, optional
        Status checks that are required. Several can be defined.
    strictRequiredStatusChecksPolicy : bool, default is Undefined, optional
        Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
    """


    requiredCheck?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0]

    strictRequiredStatusChecksPolicy?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 required status checks items0 required check items0

    Attributes
    ----------
    context : str, default is Undefined, optional
        The status check context name that must be present on the commit.
    integrationId : int, default is Undefined, optional
        The optional integration ID that this status check must originate from.
    """


    context?: str

    integrationId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 required workflows items0

    Attributes
    ----------
    requiredWorkflow : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0], default is Undefined, optional
        Actions workflows that are required. Several can be defined.
    """


    requiredWorkflow?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 required workflows items0 required workflow items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The path to the workflow YAML definition file.
    ref : str, default is Undefined, optional
        The ref (branch or tag) of the workflow file to use.
    repositoryId : int, default is Undefined, optional
        The repository in which the workflow is defined.
    """


    path?: str

    ref?: str

    repositoryId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecInitProviderRulesItems0TagNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset spec init provider rules items0 tag name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRefPolicy


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRef

    metadata?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToMetadata

    name: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRefPolicy


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatus:
    r"""
    OrganizationRulesetStatus defines the observed state of OrganizationRuleset.

    Attributes
    ----------
    atProvider : EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProvider

    conditions?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusConditionsItems0]

    observedGeneration?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProvider:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider

    Attributes
    ----------
    bypassActors : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderBypassActorsItems0], default is Undefined, optional
        The actors that can bypass the rules in this ruleset.
    conditions : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0], default is Undefined, optional
        Parameters for an organization ruleset condition. `ref_name` is required alongside one of `repository_name` or `repository_id`.
    enforcement : str, default is Undefined, optional
        Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
    etag : str, default is Undefined, optional
        etag
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        The name of the ruleset.
    nodeId : str, default is Undefined, optional
        GraphQL global node id for use with v4 API.
    rules : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0], default is Undefined, optional
        Rules within the ruleset.
    rulesetId : int, default is Undefined, optional
        GitHub ID for the ruleset.
    target : str, default is Undefined, optional
        Possible values are `branch`, `tag` and `push`. Note: The `push` target is in beta and is subject to change.
    """


    bypassActors?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderBypassActorsItems0]

    conditions?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0]

    enforcement?: str

    etag?: str

    id?: str

    name?: str

    nodeId?: str

    rules?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0]

    rulesetId?: int

    target?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderBypassActorsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider bypass actors items0

    Attributes
    ----------
    actorId : int, default is Undefined, optional
        The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
    actorType : str, default is Undefined, optional
        The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
    bypassMode : str, default is Undefined, optional
        When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
    """


    actorId?: int

    actorType?: str

    bypassMode?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider conditions items0

    Attributes
    ----------
    refName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RefNameItems0], default is Undefined, optional
        ref name
    repositoryId : [int], default is Undefined, optional
        The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass.
    repositoryName : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RepositoryNameItems0], default is Undefined, optional
        repository name
    """


    refName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RefNameItems0]

    repositoryId?: [int]

    repositoryName?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RepositoryNameItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RefNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider conditions items0 ref name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
    """


    exclude?: [str]

    include?: [str]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderConditionsItems0RepositoryNameItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider conditions items0 repository name items0

    Attributes
    ----------
    exclude : [str], default is Undefined, optional
        Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
    include : [str], default is Undefined, optional
        Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
    protected : bool, default is Undefined, optional
        Whether renaming of target repositories is prevented.
    """


    exclude?: [str]

    include?: [str]

    protected?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0

    Attributes
    ----------
    branchNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0BranchNamePatternItems0], default is Undefined, optional
        Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
    commitAuthorEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitAuthorEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the commit_author_email_pattern rule.
    commitMessagePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitMessagePatternItems0], default is Undefined, optional
        Parameters to be used for the commit_message_pattern rule.
    committerEmailPattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitterEmailPatternItems0], default is Undefined, optional
        Parameters to be used for the committer_email_pattern rule.
    creation : bool, default is Undefined, optional
        Only allow users with bypass permission to create matching refs.
    deletion : bool, default is Undefined, optional
        Only allow users with bypass permissions to delete matching refs.
    nonFastForward : bool, default is Undefined, optional
        Prevent users with push access from force pushing to branches.
    pullRequest : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0PullRequestItems0], default is Undefined, optional
        Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
    requiredLinearHistory : bool, default is Undefined, optional
        Prevent merge commits from being pushed to matching branches.
    requiredSignatures : bool, default is Undefined, optional
        Commits pushed to matching branches must have verified signatures.
    requiredStatusChecks : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0], default is Undefined, optional
        Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
    requiredWorkflows : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0], default is Undefined, optional
        Choose which Actions workflows must pass before branches can be merged into a branch that matches this rule.
    tagNamePattern : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0TagNamePatternItems0], default is Undefined, optional
        Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
    update : bool, default is Undefined, optional
        Only allow users with bypass permission to update matching refs.
    """


    branchNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0BranchNamePatternItems0]

    commitAuthorEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitAuthorEmailPatternItems0]

    commitMessagePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitMessagePatternItems0]

    committerEmailPattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitterEmailPatternItems0]

    creation?: bool

    deletion?: bool

    nonFastForward?: bool

    pullRequest?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0PullRequestItems0]

    requiredLinearHistory?: bool

    requiredSignatures?: bool

    requiredStatusChecks?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0]

    requiredWorkflows?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0]

    tagNamePattern?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0TagNamePatternItems0]

    update?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0BranchNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 branch name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitAuthorEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 commit author email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitMessagePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 commit message pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0CommitterEmailPatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 committer email pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0PullRequestItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 pull request items0

    Attributes
    ----------
    dismissStaleReviewsOnPush : bool, default is Undefined, optional
        New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
    requireCodeOwnerReview : bool, default is Undefined, optional
        Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
    requireLastPushApproval : bool, default is Undefined, optional
        Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
    requiredApprovingReviewCount : int, default is Undefined, optional
        The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
    requiredReviewThreadResolution : bool, default is Undefined, optional
        All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
    """


    dismissStaleReviewsOnPush?: bool

    requireCodeOwnerReview?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    requiredReviewThreadResolution?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 required status checks items0

    Attributes
    ----------
    requiredCheck : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0], default is Undefined, optional
        Status checks that are required. Several can be defined.
    strictRequiredStatusChecksPolicy : bool, default is Undefined, optional
        Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
    """


    requiredCheck?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0]

    strictRequiredStatusChecksPolicy?: bool


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredStatusChecksItems0RequiredCheckItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 required status checks items0 required check items0

    Attributes
    ----------
    context : str, default is Undefined, optional
        The status check context name that must be present on the commit.
    integrationId : int, default is Undefined, optional
        The optional integration ID that this status check must originate from.
    """


    context?: str

    integrationId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 required workflows items0

    Attributes
    ----------
    requiredWorkflow : [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0], default is Undefined, optional
        Actions workflows that are required. Several can be defined.
    """


    requiredWorkflow?: [EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0]


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0RequiredWorkflowsItems0RequiredWorkflowItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 required workflows items0 required workflow items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The path to the workflow YAML definition file.
    ref : str, default is Undefined, optional
        The ref (branch or tag) of the workflow file to use.
    repositoryId : int, default is Undefined, optional
        The repository in which the workflow is defined.
    """


    path?: str

    ref?: str

    repositoryId?: int


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusAtProviderRulesItems0TagNamePatternItems0:
    r"""
    enterprise github upbound io v1alpha1 organization ruleset status at provider rules items0 tag name pattern items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        How this rule will appear to users.
    negate : bool, default is Undefined, optional
        If true, the rule will fail if the pattern matches.
    operator : str, default is Undefined, optional
        The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
    pattern : str, default is Undefined, optional
        The pattern to match with.
    """


    name?: str

    negate?: bool

    operator?: str

    pattern?: str


schema EnterpriseGithubUpboundIoV1alpha1OrganizationRulesetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


