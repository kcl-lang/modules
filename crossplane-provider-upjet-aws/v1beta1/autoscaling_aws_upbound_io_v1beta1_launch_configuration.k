"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LaunchConfiguration:
    r"""
    LaunchConfiguration is the Schema for the LaunchConfigurations API. Provides a resource to create a new launch configuration, used for autoscaling groups.

    Attributes
    ----------
    apiVersion : str, default is "autoscaling.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LaunchConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpec, default is Undefined, required
        spec
    status : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "autoscaling.aws.upbound.io/v1beta1" = "autoscaling.aws.upbound.io/v1beta1"

    kind: "LaunchConfiguration" = "LaunchConfiguration"

    metadata?: v1.ObjectMeta

    spec: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpec

    status?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatus


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpec:
    r"""
    LaunchConfigurationSpec defines the desired state of LaunchConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProvider

    initProvider?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecWriteConnectionSecretToRef


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProvider:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec for provider

    Attributes
    ----------
    associatePublicIpAddress : bool, default is Undefined, optional
        Associate a public ip address with an instance in a VPC.
    ebsBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEbsBlockDeviceItems0], default is Undefined, optional
        Additional EBS block devices to attach to the instance. See Block Devices below for details.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    enableMonitoring : bool, default is Undefined, optional
        Enables/disables detailed monitoring. This is enabled by default.
    ephemeralBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details.
    iamInstanceProfile : str, default is Undefined, optional
        The name attribute of the IAM instance profile to associate with launched instances.
    imageId : str, default is Undefined, optional
        The EC2 image ID to launch.
    instanceType : str, default is Undefined, optional
        The size of instance to launch.
    keyName : str, default is Undefined, optional
        The key name that should be used for the instance.
    metadataOptions : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderMetadataOptionsItems0], default is Undefined, optional
        The metadata options for the instance.
    placementTenancy : str, default is Undefined, optional
        The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rootBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderRootBlockDeviceItems0], default is Undefined, optional
        Customize details about the root block device of the instance. See Block Devices below for details.
    securityGroups : [str], default is Undefined, optional
        A list of associated security group IDS.
    spotPrice : str, default is Undefined, optional
        The maximum price to use for reserving spot instances.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
    """


    associatePublicIpAddress?: bool

    ebsBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enableMonitoring?: bool

    ephemeralBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEphemeralBlockDeviceItems0]

    iamInstanceProfile?: str

    imageId?: str

    instanceType?: str

    keyName?: str

    metadataOptions?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderMetadataOptionsItems0]

    placementTenancy?: str

    region: str

    rootBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderRootBlockDeviceItems0]

    securityGroups?: [str]

    spotPrice?: str

    userData?: str

    userDataBase64?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEbsBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec for provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed
        on instance termination (Default: true).
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned
        IOPS.
        This must be set with a volume_type of "io1".
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    noDevice?: bool

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderEphemeralBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec for provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name.
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderMetadataOptionsItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec for provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        The state of the metadata service: enabled, disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests.
    httpTokens : str, default is Undefined, optional
        If session tokens are required: optional, required.
    """


    httpEndpoint?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecForProviderRootBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec for provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. This must be set with a volume_type of io1.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    associatePublicIpAddress : bool, default is Undefined, optional
        Associate a public ip address with an instance in a VPC.
    ebsBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEbsBlockDeviceItems0], default is Undefined, optional
        Additional EBS block devices to attach to the instance. See Block Devices below for details.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    enableMonitoring : bool, default is Undefined, optional
        Enables/disables detailed monitoring. This is enabled by default.
    ephemeralBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details.
    iamInstanceProfile : str, default is Undefined, optional
        The name attribute of the IAM instance profile to associate with launched instances.
    imageId : str, default is Undefined, optional
        The EC2 image ID to launch.
    instanceType : str, default is Undefined, optional
        The size of instance to launch.
    keyName : str, default is Undefined, optional
        The key name that should be used for the instance.
    metadataOptions : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderMetadataOptionsItems0], default is Undefined, optional
        The metadata options for the instance.
    placementTenancy : str, default is Undefined, optional
        The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.
    rootBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderRootBlockDeviceItems0], default is Undefined, optional
        Customize details about the root block device of the instance. See Block Devices below for details.
    securityGroups : [str], default is Undefined, optional
        A list of associated security group IDS.
    spotPrice : str, default is Undefined, optional
        The maximum price to use for reserving spot instances.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
    """


    associatePublicIpAddress?: bool

    ebsBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enableMonitoring?: bool

    ephemeralBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEphemeralBlockDeviceItems0]

    iamInstanceProfile?: str

    imageId?: str

    instanceType?: str

    keyName?: str

    metadataOptions?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderMetadataOptionsItems0]

    placementTenancy?: str

    rootBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderRootBlockDeviceItems0]

    securityGroups?: [str]

    spotPrice?: str

    userData?: str

    userDataBase64?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEbsBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec init provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed
        on instance termination (Default: true).
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned
        IOPS.
        This must be set with a volume_type of "io1".
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    noDevice?: bool

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderEphemeralBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec init provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name.
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderMetadataOptionsItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec init provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        The state of the metadata service: enabled, disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests.
    httpTokens : str, default is Undefined, optional
        If session tokens are required: optional, required.
    """


    httpEndpoint?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecInitProviderRootBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration spec init provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. This must be set with a volume_type of io1.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatus:
    r"""
    LaunchConfigurationStatus defines the observed state of LaunchConfiguration.

    Attributes
    ----------
    atProvider : AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProvider

    conditions?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProvider:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name of the launch configuration.
    associatePublicIpAddress : bool, default is Undefined, optional
        Associate a public ip address with an instance in a VPC.
    ebsBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEbsBlockDeviceItems0], default is Undefined, optional
        Additional EBS block devices to attach to the instance. See Block Devices below for details.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    enableMonitoring : bool, default is Undefined, optional
        Enables/disables detailed monitoring. This is enabled by default.
    ephemeralBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details.
    iamInstanceProfile : str, default is Undefined, optional
        The name attribute of the IAM instance profile to associate with launched instances.
    id : str, default is Undefined, optional
        The ID of the launch configuration.
    imageId : str, default is Undefined, optional
        The EC2 image ID to launch.
    instanceType : str, default is Undefined, optional
        The size of instance to launch.
    keyName : str, default is Undefined, optional
        The key name that should be used for the instance.
    metadataOptions : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderMetadataOptionsItems0], default is Undefined, optional
        The metadata options for the instance.
    placementTenancy : str, default is Undefined, optional
        The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.
    rootBlockDevice : [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderRootBlockDeviceItems0], default is Undefined, optional
        Customize details about the root block device of the instance. See Block Devices below for details.
    securityGroups : [str], default is Undefined, optional
        A list of associated security group IDS.
    spotPrice : str, default is Undefined, optional
        The maximum price to use for reserving spot instances.
    userData : str, default is Undefined, optional
        The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
    """


    arn?: str

    associatePublicIpAddress?: bool

    ebsBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enableMonitoring?: bool

    ephemeralBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEphemeralBlockDeviceItems0]

    iamInstanceProfile?: str

    id?: str

    imageId?: str

    instanceType?: str

    keyName?: str

    metadataOptions?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderMetadataOptionsItems0]

    placementTenancy?: str

    rootBlockDevice?: [AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderRootBlockDeviceItems0]

    securityGroups?: [str]

    spotPrice?: str

    userData?: str

    userDataBase64?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEbsBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration status at provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed
        on instance termination (Default: true).
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned
        IOPS.
        This must be set with a volume_type of "io1".
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    noDevice?: bool

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderEphemeralBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration status at provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Whether the device in the block device mapping of the AMI is suppressed.
    virtualName : str, default is Undefined, optional
        The Instance Store Device Name.
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderMetadataOptionsItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration status at provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        The state of the metadata service: enabled, disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests.
    httpTokens : str, default is Undefined, optional
        If session tokens are required: optional, required.
    """


    httpEndpoint?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusAtProviderRootBlockDeviceItems0:
    r"""
    autoscaling aws upbound io v1beta1 launch configuration status at provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    encrypted : bool, default is Undefined, optional
        Whether the volume should be encrypted or not. Defaults to false.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. This must be set with a volume_type of io1.
    throughput : float, default is Undefined, optional
        The throughput (MiBps) to provision for a gp3 volume.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema AutoscalingAwsUpboundIoV1beta1LaunchConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


