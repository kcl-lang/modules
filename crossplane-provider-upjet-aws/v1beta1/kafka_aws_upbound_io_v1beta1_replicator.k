"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Replicator:
    r"""
    Replicator is the Schema for the Replicators API.

    Attributes
    ----------
    apiVersion : str, default is "kafka.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Replicator", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaAwsUpboundIoV1beta1ReplicatorSpec, default is Undefined, required
        spec
    status : KafkaAwsUpboundIoV1beta1ReplicatorStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafka.aws.upbound.io/v1beta1" = "kafka.aws.upbound.io/v1beta1"

    kind: "Replicator" = "Replicator"

    metadata?: v1.ObjectMeta

    spec: KafkaAwsUpboundIoV1beta1ReplicatorSpec

    status?: KafkaAwsUpboundIoV1beta1ReplicatorStatus


schema KafkaAwsUpboundIoV1beta1ReplicatorSpec:
    r"""
    ReplicatorSpec defines the desired state of Replicator

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProvider, default is Undefined, required
        for provider
    initProvider : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProvider

    initProvider?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRef

    publishConnectionDetailsTo?: KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecWriteConnectionSecretToRef


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProvider:
    r"""
    kafka aws upbound io v1beta1 replicator spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A summary description of the replicator.
    kafkaCluster : [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0], default is Undefined, optional
        A list of Kafka clusters which are targets of the replicator.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationInfoList : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoList, default is Undefined, optional
        replication info list
    replicatorName : str, default is Undefined, optional
        The name of the replicator.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The ARN of the IAM role used by the replicator to access resources in the customer's account (e.g source and target clusters).
    serviceExecutionRoleArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRef, default is Undefined, optional
        service execution role arn ref
    serviceExecutionRoleArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelector, default is Undefined, optional
        service execution role arn selector
    tags : {str:str}, default is Undefined, optional
        tags
    """


    description?: str

    kafkaCluster?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0]

    region: str

    replicationInfoList?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoList

    replicatorName?: str

    serviceExecutionRoleArn?: str

    serviceExecutionRoleArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRef

    serviceExecutionRoleArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelector

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec for provider kafka cluster items0

    Attributes
    ----------
    amazonMskCluster : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskCluster, default is Undefined, optional
        amazon msk cluster
    vpcConfig : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfig, default is Undefined, optional
        vpc config
    """


    amazonMskCluster?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskCluster

    vpcConfig?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfig


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskCluster:
    r"""
    Details of an Amazon MSK cluster.

    Attributes
    ----------
    mskClusterArn : str, default is Undefined, optional
        The ARN of an Amazon MSK cluster.
    mskClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef, default is Undefined, optional
        msk cluster arn ref
    mskClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector, default is Undefined, optional
        msk cluster arn selector
    """


    mskClusterArn?: str

    mskClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef

    mskClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate mskClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate mskClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfig:
    r"""
    Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.

    Attributes
    ----------
    securityGroupsIds : [str], default is Undefined, optional
        The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
    securityGroupsIdsRefs : [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupsIds.
    securityGroupsIdsSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector, default is Undefined, optional
        security groups ids selector
    subnetIds : [str], default is Undefined, optional
        The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
    subnetIdsRefs : [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupsIds?: [str]

    securityGroupsIdsRefs?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0]

    securityGroupsIdsSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelector


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupsIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoList:
    r"""
    A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.

    Attributes
    ----------
    consumerGroupReplication : [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListConsumerGroupReplicationItems0], default is Undefined, optional
        Configuration relating to consumer group replication.
    sourceKafkaClusterArn : str, default is Undefined, optional
        The ARN of the source Kafka cluster.
    sourceKafkaClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRef, default is Undefined, optional
        source kafka cluster arn ref
    sourceKafkaClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelector, default is Undefined, optional
        source kafka cluster arn selector
    targetCompressionType : str, default is Undefined, optional
        The type of compression to use writing records to target Kafka cluster.
    targetKafkaClusterArn : str, default is Undefined, optional
        The ARN of the target Kafka cluster.
    targetKafkaClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRef, default is Undefined, optional
        target kafka cluster arn ref
    targetKafkaClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelector, default is Undefined, optional
        target kafka cluster arn selector
    topicReplication : [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0], default is Undefined, optional
        Configuration relating to topic replication.
    """


    consumerGroupReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListConsumerGroupReplicationItems0]

    sourceKafkaClusterArn?: str

    sourceKafkaClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRef

    sourceKafkaClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelector

    targetCompressionType?: str

    targetKafkaClusterArn?: str

    targetKafkaClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRef

    targetKafkaClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelector

    topicReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0]


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListConsumerGroupReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec for provider replication info list consumer group replication items0

    Attributes
    ----------
    consumerGroupsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups that should not be replicated.
    consumerGroupsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups to copy.
    detectAndCopyNewConsumerGroups : bool, default is Undefined, optional
        Whether to periodically check for new consumer groups.
    synchroniseConsumerGroupOffsets : bool, default is Undefined, optional
        Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
    """


    consumerGroupsToExclude?: [str]

    consumerGroupsToReplicate?: [str]

    detectAndCopyNewConsumerGroups?: bool

    synchroniseConsumerGroupOffsets?: bool


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate sourceKafkaClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate sourceKafkaClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate targetKafkaClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate targetKafkaClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec for provider replication info list topic replication items0

    Attributes
    ----------
    copyAccessControlListsForTopics : bool, default is Undefined, optional
        Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
    copyTopicConfigurations : bool, default is Undefined, optional
        Whether to periodically configure remote topics to match their corresponding upstream topics.
    detectAndCopyNewTopics : bool, default is Undefined, optional
        Whether to periodically check for new topics and partitions.
    startingPosition : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0StartingPosition, default is Undefined, optional
        starting position
    topicNameConfiguration : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration, default is Undefined, optional
        topic name configuration
    topicsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics that should not be replica.
    topicsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics to copy.
    """


    copyAccessControlListsForTopics?: bool

    copyTopicConfigurations?: bool

    detectAndCopyNewTopics?: bool

    startingPosition?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0StartingPosition

    topicNameConfiguration?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration

    topicsToExclude?: [str]

    topicsToReplicate?: [str]


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0StartingPosition:
    r"""
    Configuration for specifying the position in the topics to start replicating from.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration:
    r"""
    kafka aws upbound io v1beta1 replicator spec for provider replication info list topic replication items0 topic name configuration

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecForProviderServiceExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A summary description of the replicator.
    kafkaCluster : [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0], default is Undefined, optional
        A list of Kafka clusters which are targets of the replicator.
    replicationInfoList : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoList, default is Undefined, optional
        replication info list
    replicatorName : str, default is Undefined, optional
        The name of the replicator.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The ARN of the IAM role used by the replicator to access resources in the customer's account (e.g source and target clusters).
    serviceExecutionRoleArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRef, default is Undefined, optional
        service execution role arn ref
    serviceExecutionRoleArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelector, default is Undefined, optional
        service execution role arn selector
    tags : {str:str}, default is Undefined, optional
        tags
    """


    description?: str

    kafkaCluster?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0]

    replicationInfoList?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoList

    replicatorName?: str

    serviceExecutionRoleArn?: str

    serviceExecutionRoleArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRef

    serviceExecutionRoleArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelector

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec init provider kafka cluster items0

    Attributes
    ----------
    amazonMskCluster : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskCluster, default is Undefined, optional
        amazon msk cluster
    vpcConfig : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfig, default is Undefined, optional
        vpc config
    """


    amazonMskCluster?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskCluster

    vpcConfig?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfig


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskCluster:
    r"""
    Details of an Amazon MSK cluster.

    Attributes
    ----------
    mskClusterArn : str, default is Undefined, optional
        The ARN of an Amazon MSK cluster.
    mskClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef, default is Undefined, optional
        msk cluster arn ref
    mskClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector, default is Undefined, optional
        msk cluster arn selector
    """


    mskClusterArn?: str

    mskClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef

    mskClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate mskClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate mskClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0AmazonMskClusterMskClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfig:
    r"""
    Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.

    Attributes
    ----------
    securityGroupsIds : [str], default is Undefined, optional
        The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
    securityGroupsIdsRefs : [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupsIds.
    securityGroupsIdsSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector, default is Undefined, optional
        security groups ids selector
    subnetIds : [str], default is Undefined, optional
        The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
    subnetIdsRefs : [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupsIds?: [str]

    securityGroupsIdsRefs?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0]

    securityGroupsIdsSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0]

    subnetIdsSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelector


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupsIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSecurityGroupsIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderKafkaClusterItems0VpcConfigSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoList:
    r"""
    A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.

    Attributes
    ----------
    consumerGroupReplication : [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListConsumerGroupReplicationItems0], default is Undefined, optional
        Configuration relating to consumer group replication.
    sourceKafkaClusterArn : str, default is Undefined, optional
        The ARN of the source Kafka cluster.
    sourceKafkaClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRef, default is Undefined, optional
        source kafka cluster arn ref
    sourceKafkaClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelector, default is Undefined, optional
        source kafka cluster arn selector
    targetCompressionType : str, default is Undefined, optional
        The type of compression to use writing records to target Kafka cluster.
    targetKafkaClusterArn : str, default is Undefined, optional
        The ARN of the target Kafka cluster.
    targetKafkaClusterArnRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRef, default is Undefined, optional
        target kafka cluster arn ref
    targetKafkaClusterArnSelector : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelector, default is Undefined, optional
        target kafka cluster arn selector
    topicReplication : [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0], default is Undefined, optional
        Configuration relating to topic replication.
    """


    consumerGroupReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListConsumerGroupReplicationItems0]

    sourceKafkaClusterArn?: str

    sourceKafkaClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRef

    sourceKafkaClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelector

    targetCompressionType?: str

    targetKafkaClusterArn?: str

    targetKafkaClusterArnRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRef

    targetKafkaClusterArnSelector?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelector

    topicReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0]


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListConsumerGroupReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec init provider replication info list consumer group replication items0

    Attributes
    ----------
    consumerGroupsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups that should not be replicated.
    consumerGroupsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups to copy.
    detectAndCopyNewConsumerGroups : bool, default is Undefined, optional
        Whether to periodically check for new consumer groups.
    synchroniseConsumerGroupOffsets : bool, default is Undefined, optional
        Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
    """


    consumerGroupsToExclude?: [str]

    consumerGroupsToReplicate?: [str]

    detectAndCopyNewConsumerGroups?: bool

    synchroniseConsumerGroupOffsets?: bool


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate sourceKafkaClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate sourceKafkaClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListSourceKafkaClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRef:
    r"""
    Reference to a Cluster in kafka to populate targetKafkaClusterArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelector:
    r"""
    Selector for a Cluster in kafka to populate targetKafkaClusterArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTargetKafkaClusterArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator spec init provider replication info list topic replication items0

    Attributes
    ----------
    copyAccessControlListsForTopics : bool, default is Undefined, optional
        Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
    copyTopicConfigurations : bool, default is Undefined, optional
        Whether to periodically configure remote topics to match their corresponding upstream topics.
    detectAndCopyNewTopics : bool, default is Undefined, optional
        Whether to periodically check for new topics and partitions.
    startingPosition : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0StartingPosition, default is Undefined, optional
        starting position
    topicNameConfiguration : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration, default is Undefined, optional
        topic name configuration
    topicsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics that should not be replica.
    topicsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics to copy.
    """


    copyAccessControlListsForTopics?: bool

    copyTopicConfigurations?: bool

    detectAndCopyNewTopics?: bool

    startingPosition?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0StartingPosition

    topicNameConfiguration?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration

    topicsToExclude?: [str]

    topicsToReplicate?: [str]


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0StartingPosition:
    r"""
    Configuration for specifying the position in the topics to start replicating from.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration:
    r"""
    kafka aws upbound io v1beta1 replicator spec init provider replication info list topic replication items0 topic name configuration

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecInitProviderServiceExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRef

    metadata?: KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToMetadata

    name: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRefPolicy


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KafkaAwsUpboundIoV1beta1ReplicatorStatus:
    r"""
    ReplicatorStatus defines the observed state of Replicator.

    Attributes
    ----------
    atProvider : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KafkaAwsUpboundIoV1beta1ReplicatorStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProvider

    conditions?: [KafkaAwsUpboundIoV1beta1ReplicatorStatusConditionsItems0]

    observedGeneration?: int


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProvider:
    r"""
    kafka aws upbound io v1beta1 replicator status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Replicator. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
    currentVersion : str, default is Undefined, optional
        current version
    description : str, default is Undefined, optional
        A summary description of the replicator.
    id : str, default is Undefined, optional
        id
    kafkaCluster : [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0], default is Undefined, optional
        A list of Kafka clusters which are targets of the replicator.
    replicationInfoList : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoList, default is Undefined, optional
        replication info list
    replicatorName : str, default is Undefined, optional
        The name of the replicator.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The ARN of the IAM role used by the replicator to access resources in the customer's account (e.g source and target clusters).
    tags : {str:str}, default is Undefined, optional
        tags
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    """


    arn?: str

    currentVersion?: str

    description?: str

    id?: str

    kafkaCluster?: [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0]

    replicationInfoList?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoList

    replicatorName?: str

    serviceExecutionRoleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0:
    r"""
    kafka aws upbound io v1beta1 replicator status at provider kafka cluster items0

    Attributes
    ----------
    amazonMskCluster : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0AmazonMskCluster, default is Undefined, optional
        amazon msk cluster
    vpcConfig : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0VpcConfig, default is Undefined, optional
        vpc config
    """


    amazonMskCluster?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0AmazonMskCluster

    vpcConfig?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0VpcConfig


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0AmazonMskCluster:
    r"""
    Details of an Amazon MSK cluster.

    Attributes
    ----------
    mskClusterArn : str, default is Undefined, optional
        The ARN of an Amazon MSK cluster.
    """


    mskClusterArn?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderKafkaClusterItems0VpcConfig:
    r"""
    Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.

    Attributes
    ----------
    securityGroupsIds : [str], default is Undefined, optional
        The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
    subnetIds : [str], default is Undefined, optional
        The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
    """


    securityGroupsIds?: [str]

    subnetIds?: [str]


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoList:
    r"""
    A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.

    Attributes
    ----------
    consumerGroupReplication : [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListConsumerGroupReplicationItems0], default is Undefined, optional
        Configuration relating to consumer group replication.
    sourceKafkaClusterAlias : str, default is Undefined, optional
        source kafka cluster alias
    sourceKafkaClusterArn : str, default is Undefined, optional
        The ARN of the source Kafka cluster.
    targetCompressionType : str, default is Undefined, optional
        The type of compression to use writing records to target Kafka cluster.
    targetKafkaClusterAlias : str, default is Undefined, optional
        target kafka cluster alias
    targetKafkaClusterArn : str, default is Undefined, optional
        The ARN of the target Kafka cluster.
    topicReplication : [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0], default is Undefined, optional
        Configuration relating to topic replication.
    """


    consumerGroupReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListConsumerGroupReplicationItems0]

    sourceKafkaClusterAlias?: str

    sourceKafkaClusterArn?: str

    targetCompressionType?: str

    targetKafkaClusterAlias?: str

    targetKafkaClusterArn?: str

    topicReplication?: [KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0]


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListConsumerGroupReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator status at provider replication info list consumer group replication items0

    Attributes
    ----------
    consumerGroupsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups that should not be replicated.
    consumerGroupsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the consumer groups to copy.
    detectAndCopyNewConsumerGroups : bool, default is Undefined, optional
        Whether to periodically check for new consumer groups.
    synchroniseConsumerGroupOffsets : bool, default is Undefined, optional
        Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
    """


    consumerGroupsToExclude?: [str]

    consumerGroupsToReplicate?: [str]

    detectAndCopyNewConsumerGroups?: bool

    synchroniseConsumerGroupOffsets?: bool


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0:
    r"""
    kafka aws upbound io v1beta1 replicator status at provider replication info list topic replication items0

    Attributes
    ----------
    copyAccessControlListsForTopics : bool, default is Undefined, optional
        Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
    copyTopicConfigurations : bool, default is Undefined, optional
        Whether to periodically configure remote topics to match their corresponding upstream topics.
    detectAndCopyNewTopics : bool, default is Undefined, optional
        Whether to periodically check for new topics and partitions.
    startingPosition : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0StartingPosition, default is Undefined, optional
        starting position
    topicNameConfiguration : KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration, default is Undefined, optional
        topic name configuration
    topicsToExclude : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics that should not be replica.
    topicsToReplicate : [str], default is Undefined, optional
        List of regular expression patterns indicating the topics to copy.
    """


    copyAccessControlListsForTopics?: bool

    copyTopicConfigurations?: bool

    detectAndCopyNewTopics?: bool

    startingPosition?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0StartingPosition

    topicNameConfiguration?: KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration

    topicsToExclude?: [str]

    topicsToReplicate?: [str]


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0StartingPosition:
    r"""
    Configuration for specifying the position in the topics to start replicating from.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusAtProviderReplicationInfoListTopicReplicationItems0TopicNameConfiguration:
    r"""
    kafka aws upbound io v1beta1 replicator status at provider replication info list topic replication items0 topic name configuration

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of topic configuration name. Supports PREFIXED_WITH_SOURCE_CLUSTER_ALIAS and IDENTICAL.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta1ReplicatorStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


