"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Policy:
    r"""
    Policy is the Schema for the Policys API. Provides an Application AutoScaling Policy resource.

    Attributes
    ----------
    apiVersion : str, default is "appautoscaling.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Policy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppautoscalingAwsUpboundIoV1beta2PolicySpec, default is Undefined, required
        spec
    status : AppautoscalingAwsUpboundIoV1beta2PolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "appautoscaling.aws.upbound.io/v1beta2" = "appautoscaling.aws.upbound.io/v1beta2"

    kind: "Policy" = "Policy"

    metadata?: v1.ObjectMeta

    spec: AppautoscalingAwsUpboundIoV1beta2PolicySpec

    status?: AppautoscalingAwsUpboundIoV1beta2PolicyStatus


schema AppautoscalingAwsUpboundIoV1beta2PolicySpec:
    r"""
    PolicySpec defines the desired state of Policy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProvider

    initProvider?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef

    publishConnectionDetailsTo?: AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProvider:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec for provider

    Attributes
    ----------
    policyType : str, default is Undefined, optional
        Policy type. Valid values are StepScaling and TargetTrackingScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies and Step Scaling Policies documentation.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceId : str, default is Undefined, optional
        Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    resourceIdRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRef, default is Undefined, optional
        resource Id ref
    resourceIdSelector : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelector, default is Undefined, optional
        resource Id selector
    scalableDimension : str, default is Undefined, optional
        Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference
    scalableDimensionRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRef, default is Undefined, optional
        scalable dimension ref
    scalableDimensionSelector : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelector, default is Undefined, optional
        scalable dimension selector
    serviceNamespace : str, default is Undefined, optional
        AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference
    serviceNamespaceRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRef, default is Undefined, optional
        service namespace ref
    serviceNamespaceSelector : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelector, default is Undefined, optional
        service namespace selector
    stepScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfiguration, default is Undefined, optional
        step scaling policy configuration
    targetTrackingScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfiguration, default is Undefined, optional
        target tracking scaling policy configuration
    """


    policyType?: str

    region: str

    resourceId?: str

    resourceIdRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRef

    resourceIdSelector?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelector

    scalableDimension?: str

    scalableDimensionRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRef

    scalableDimensionSelector?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelector

    serviceNamespace?: str

    serviceNamespaceRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRef

    serviceNamespaceSelector?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelector

    stepScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfiguration

    targetTrackingScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfiguration


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRef:
    r"""
    Reference to a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRefPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelector:
    r"""
    Selector for a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderResourceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRef:
    r"""
    Reference to a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRefPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelector:
    r"""
    Selector for a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderScalableDimensionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRef:
    r"""
    Reference to a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRefPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelector:
    r"""
    Selector for a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderServiceNamespaceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfiguration:
    r"""
    Step scaling policy configuration, requires policy_type = "StepScaling" (default). See supported fields below.

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
    stepAdjustment : [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfigurationStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage scaling. These have the following structure:
    """


    adjustmentType?: str

    cooldown?: float

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    stepAdjustment?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfigurationStepAdjustmentItems0]


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepScalingPolicyConfigurationStepAdjustmentItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec for provider step scaling policy configuration step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfiguration:
    r"""
    Target tracking policy, requires policy_type = "TargetTrackingScaling". See supported fields below.

    Attributes
    ----------
    customizedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.
    predefinedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification:
    r"""
    Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0]

    metricName?: str

    metrics?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec for provider target tracking scaling policy configuration customized metric specification dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec for provider target tracking scaling policy configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec for provider target tracking scaling policy configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. See supported fields below.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    policyType : str, default is Undefined, optional
        Policy type. Valid values are StepScaling and TargetTrackingScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies and Step Scaling Policies documentation.
    stepScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfiguration, default is Undefined, optional
        step scaling policy configuration
    targetTrackingScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfiguration, default is Undefined, optional
        target tracking scaling policy configuration
    """


    policyType?: str

    stepScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfiguration

    targetTrackingScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfiguration


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfiguration:
    r"""
    Step scaling policy configuration, requires policy_type = "StepScaling" (default). See supported fields below.

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
    stepAdjustment : [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfigurationStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage scaling. These have the following structure:
    """


    adjustmentType?: str

    cooldown?: float

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    stepAdjustment?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfigurationStepAdjustmentItems0]


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepScalingPolicyConfigurationStepAdjustmentItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec init provider step scaling policy configuration step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfiguration:
    r"""
    Target tracking policy, requires policy_type = "TargetTrackingScaling". See supported fields below.

    Attributes
    ----------
    customizedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.
    predefinedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification:
    r"""
    Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0]

    metricName?: str

    metrics?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec init provider target tracking scaling policy configuration customized metric specification dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec init provider target tracking scaling policy configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy spec init provider target tracking scaling policy configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. See supported fields below.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef

    metadata?: AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata

    name: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatus:
    r"""
    PolicyStatus defines the observed state of Policy.

    Attributes
    ----------
    atProvider : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppautoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider

    conditions?: [AppautoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0]

    observedGeneration?: int


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider:
    r"""
    appautoscaling aws upbound io v1beta2 policy status at provider

    Attributes
    ----------
    alarmArns : [str], default is Undefined, optional
        List of CloudWatch alarm ARNs associated with the scaling policy.
    arn : str, default is Undefined, optional
        ARN assigned by AWS to the scaling policy.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    policyType : str, default is Undefined, optional
        Policy type. Valid values are StepScaling and TargetTrackingScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies and Step Scaling Policies documentation.
    resourceId : str, default is Undefined, optional
        Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    scalableDimension : str, default is Undefined, optional
        Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference
    stepScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfiguration, default is Undefined, optional
        step scaling policy configuration
    targetTrackingScalingPolicyConfiguration : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfiguration, default is Undefined, optional
        target tracking scaling policy configuration
    """


    alarmArns?: [str]

    arn?: str

    id?: str

    policyType?: str

    resourceId?: str

    scalableDimension?: str

    serviceNamespace?: str

    stepScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfiguration

    targetTrackingScalingPolicyConfiguration?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfiguration


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfiguration:
    r"""
    Step scaling policy configuration, requires policy_type = "StepScaling" (default). See supported fields below.

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
    stepAdjustment : [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfigurationStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage scaling. These have the following structure:
    """


    adjustmentType?: str

    cooldown?: float

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    stepAdjustment?: [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfigurationStepAdjustmentItems0]


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepScalingPolicyConfigurationStepAdjustmentItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy status at provider step scaling policy configuration step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfiguration:
    r"""
    Target tracking policy, requires policy_type = "TargetTrackingScaling". See supported fields below.

    Attributes
    ----------
    customizedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.
    predefinedMetricSpecification : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification:
    r"""
    Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0]

    metricName?: str

    metrics?: [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy status at provider target tracking scaling policy configuration customized metric specification dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy status at provider target tracking scaling policy configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    appautoscaling aws upbound io v1beta2 policy status at provider target tracking scaling policy configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the dimension.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. See supported fields below.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AppautoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


