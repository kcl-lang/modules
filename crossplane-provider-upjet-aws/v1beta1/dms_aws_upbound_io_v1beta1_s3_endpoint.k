"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema S3Endpoint:
    r"""
    S3Endpoint is the Schema for the S3Endpoints API. Provides a DMS (Data Migration Service) S3 endpoint resource.

    Attributes
    ----------
    apiVersion : str, default is "dms.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "S3Endpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DmsAwsUpboundIoV1beta1S3EndpointSpec, default is Undefined, required
        spec
    status : DmsAwsUpboundIoV1beta1S3EndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "dms.aws.upbound.io/v1beta1" = "dms.aws.upbound.io/v1beta1"

    kind: "S3Endpoint" = "S3Endpoint"

    metadata?: v1.ObjectMeta

    spec: DmsAwsUpboundIoV1beta1S3EndpointSpec

    status?: DmsAwsUpboundIoV1beta1S3EndpointStatus


schema DmsAwsUpboundIoV1beta1S3EndpointSpec:
    r"""
    S3EndpointSpec defines the desired state of S3Endpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DmsAwsUpboundIoV1beta1S3EndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DmsAwsUpboundIoV1beta1S3EndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DmsAwsUpboundIoV1beta1S3EndpointSpecForProvider

    initProvider?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRef

    publishConnectionDetailsTo?: DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecWriteConnectionSecretToRef


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProvider:
    r"""
    dms aws upbound io v1beta1 s3 endpoint spec for provider

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    addTrailingPaddingCharacter : bool, default is Undefined, optional
        Whether to add padding. Default is false. (Ignored for source endpoints.)
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. (AWS default is 60.)
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. (AWS default is 32000 KB.)
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Valid values are GZIP and NONE. Default is NONE. (Ignored for source endpoints.)
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        Only applies if output files for a CDC load are written in .csv format. If use_csv_no_sup_value is set to true, string to use for all columns not included in the supplemental log. If you do not specify a string value, DMS uses the null value for these columns regardless of use_csv_no_sup_value. (Ignored for source endpoints.)
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target. (AWS default is NULL.)
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is newline (i.e., \n).
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet.  (Ignored for source endpoints -- only csv is valid.)
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. (AWS default is 1 MiB, i.e., 1048576.)
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. (AWS default is SLASH.) (Ignored for source endpoints.)
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false. (Ignored for source endpoints.)
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. (AWS default is YYYYMMDD.) (Ignored for source endpoints.)
    datePartitionTimezone : str, default is Undefined, optional
        Convert the current UTC time to a timezone. The conversion occurs when a date partition folder is created and a CDC filename is generated. The timezone format is Area/Location (e.g., Europe/Paris). Use this when date_partition_enabled is true. (Ignored for source endpoints.)
    detachTargetOnLobLookupFailureParquet : bool, default is Undefined, optional
        Undocumented argument for use as directed by AWS Support.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. (AWS default is 1 MiB, i.e., 1048576.)
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. (AWS default is rle_dictionary.)
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. (AWS default is SSE_S3.) (Ignored for source endpoints -- only SSE_S3 is valid.)
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    expectedBucketOwner : str, default is Undefined, optional
        Bucket owner to prevent sniping. Value is an AWS account ID.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. (AWS default is 0.)
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. (AWS default is 1 GB, i.e., 1048576.)
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false. (Ignored for source endpoints.)
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Valid values are parquet-1-0 and parquet-2-0. (AWS default is parquet-1-0.) (Ignored for source endpoints.)
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false. (Ignored for source endpoints.)
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. (AWS default is 10000.)
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        When encryption_mode is SSE_KMS, ARN for the AWS KMS key. (Ignored for source endpoints -- only SSE_S3 encryption_mode is valid.)
    serverSideEncryptionKmsKeyIdRef : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRef, default is Undefined, optional
        server side encryption kms key Id ref
    serverSideEncryptionKmsKeyIdSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelector, default is Undefined, optional
        server side encryption kms key Id selector
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to the S3 Bucket.
    serviceAccessRoleArnRef : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRef, default is Undefined, optional
        service access role arn ref
    serviceAccessRoleArnSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelector, default is Undefined, optional
        service access role arn selector
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full. (AWS default is none.)
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log. (Ignored for source endpoints.)
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time.When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    addTrailingPaddingCharacter?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    certificateArn?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    datePartitionTimezone?: str

    detachTargetOnLobLookupFailureParquet?: bool

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    endpointType?: str

    expectedBucketOwner?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelector

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    region: str

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serverSideEncryptionKmsKeyIdRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRef

    serverSideEncryptionKmsKeyIdSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelector

    serviceAccessRoleArn?: str

    serviceAccessRoleArnRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRef

    serviceAccessRoleArnSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelector

    sslMode?: str

    tags?: {str:str}

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate serverSideEncryptionKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate serverSideEncryptionKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServerSideEncryptionKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecForProviderServiceAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    addTrailingPaddingCharacter : bool, default is Undefined, optional
        Whether to add padding. Default is false. (Ignored for source endpoints.)
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. (AWS default is 60.)
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. (AWS default is 32000 KB.)
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Valid values are GZIP and NONE. Default is NONE. (Ignored for source endpoints.)
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        Only applies if output files for a CDC load are written in .csv format. If use_csv_no_sup_value is set to true, string to use for all columns not included in the supplemental log. If you do not specify a string value, DMS uses the null value for these columns regardless of use_csv_no_sup_value. (Ignored for source endpoints.)
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target. (AWS default is NULL.)
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is newline (i.e., \n).
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet.  (Ignored for source endpoints -- only csv is valid.)
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. (AWS default is 1 MiB, i.e., 1048576.)
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. (AWS default is SLASH.) (Ignored for source endpoints.)
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false. (Ignored for source endpoints.)
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. (AWS default is YYYYMMDD.) (Ignored for source endpoints.)
    datePartitionTimezone : str, default is Undefined, optional
        Convert the current UTC time to a timezone. The conversion occurs when a date partition folder is created and a CDC filename is generated. The timezone format is Area/Location (e.g., Europe/Paris). Use this when date_partition_enabled is true. (Ignored for source endpoints.)
    detachTargetOnLobLookupFailureParquet : bool, default is Undefined, optional
        Undocumented argument for use as directed by AWS Support.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. (AWS default is 1 MiB, i.e., 1048576.)
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. (AWS default is rle_dictionary.)
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. (AWS default is SSE_S3.) (Ignored for source endpoints -- only SSE_S3 is valid.)
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    expectedBucketOwner : str, default is Undefined, optional
        Bucket owner to prevent sniping. Value is an AWS account ID.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. (AWS default is 0.)
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. (AWS default is 1 GB, i.e., 1048576.)
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false. (Ignored for source endpoints.)
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Valid values are parquet-1-0 and parquet-2-0. (AWS default is parquet-1-0.) (Ignored for source endpoints.)
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false. (Ignored for source endpoints.)
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. (AWS default is 10000.)
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        When encryption_mode is SSE_KMS, ARN for the AWS KMS key. (Ignored for source endpoints -- only SSE_S3 encryption_mode is valid.)
    serverSideEncryptionKmsKeyIdRef : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRef, default is Undefined, optional
        server side encryption kms key Id ref
    serverSideEncryptionKmsKeyIdSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelector, default is Undefined, optional
        server side encryption kms key Id selector
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to the S3 Bucket.
    serviceAccessRoleArnRef : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRef, default is Undefined, optional
        service access role arn ref
    serviceAccessRoleArnSelector : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelector, default is Undefined, optional
        service access role arn selector
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full. (AWS default is none.)
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log. (Ignored for source endpoints.)
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time.When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    addTrailingPaddingCharacter?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    certificateArn?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    datePartitionTimezone?: str

    detachTargetOnLobLookupFailureParquet?: bool

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    endpointType?: str

    expectedBucketOwner?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelector

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serverSideEncryptionKmsKeyIdRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRef

    serverSideEncryptionKmsKeyIdSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelector

    serviceAccessRoleArn?: str

    serviceAccessRoleArnRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRef

    serviceAccessRoleArnSelector?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelector

    sslMode?: str

    tags?: {str:str}

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate serverSideEncryptionKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate serverSideEncryptionKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServerSideEncryptionKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecInitProviderServiceAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1S3EndpointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DmsAwsUpboundIoV1beta1S3EndpointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta1S3EndpointStatus:
    r"""
    S3EndpointStatus defines the observed state of S3Endpoint.

    Attributes
    ----------
    atProvider : DmsAwsUpboundIoV1beta1S3EndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DmsAwsUpboundIoV1beta1S3EndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DmsAwsUpboundIoV1beta1S3EndpointStatusAtProvider

    conditions?: [DmsAwsUpboundIoV1beta1S3EndpointStatusConditionsItems0]

    observedGeneration?: int


schema DmsAwsUpboundIoV1beta1S3EndpointStatusAtProvider:
    r"""
    dms aws upbound io v1beta1 s3 endpoint status at provider

    Attributes
    ----------
    addColumnName : bool, default is Undefined, optional
        Whether to add column name information to the .csv output file. Default is false.
    addTrailingPaddingCharacter : bool, default is Undefined, optional
        Whether to add padding. Default is false. (Ignored for source endpoints.)
    bucketFolder : str, default is Undefined, optional
        S3 object prefix.
    bucketName : str, default is Undefined, optional
        S3 bucket name.
    cannedAclForObjects : str, default is Undefined, optional
        Predefined (canned) access control list for objects created in an S3 bucket. Valid values include none, private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Default is none.
    cdcInsertsAndUpdates : bool, default is Undefined, optional
        Whether to write insert and update operations to .csv or .parquet output files. Default is false.
    cdcInsertsOnly : bool, default is Undefined, optional
        Whether to write insert operations to .csv or .parquet output files. Default is false.
    cdcMaxBatchInterval : float, default is Undefined, optional
        Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. (AWS default is 60.)
    cdcMinFileSize : float, default is Undefined, optional
        Minimum file size condition as defined in kilobytes to output a file to Amazon S3. (AWS default is 32000 KB.)
    cdcPath : str, default is Undefined, optional
        Folder path of CDC files. If cdc_path is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    compressionType : str, default is Undefined, optional
        Set to compress target files. Valid values are GZIP and NONE. Default is NONE. (Ignored for source endpoints.)
    csvDelimiter : str, default is Undefined, optional
        Delimiter used to separate columns in the source files. Default is ,.
    csvNoSupValue : str, default is Undefined, optional
        Only applies if output files for a CDC load are written in .csv format. If use_csv_no_sup_value is set to true, string to use for all columns not included in the supplemental log. If you do not specify a string value, DMS uses the null value for these columns regardless of use_csv_no_sup_value. (Ignored for source endpoints.)
    csvNullValue : str, default is Undefined, optional
        String to as null when writing to the target. (AWS default is NULL.)
    csvRowDelimiter : str, default is Undefined, optional
        Delimiter used to separate rows in the source files. Default is newline (i.e., \n).
    dataFormat : str, default is Undefined, optional
        Output format for the files that AWS DMS uses to create S3 objects. Valid values are csv and parquet.  (Ignored for source endpoints -- only csv is valid.)
    dataPageSize : float, default is Undefined, optional
        Size of one data page in bytes. (AWS default is 1 MiB, i.e., 1048576.)
    datePartitionDelimiter : str, default is Undefined, optional
        Date separating delimiter to use during folder partitioning. Valid values are SLASH, UNDERSCORE, DASH, and NONE. (AWS default is SLASH.) (Ignored for source endpoints.)
    datePartitionEnabled : bool, default is Undefined, optional
        Partition S3 bucket folders based on transaction commit dates. Default is false. (Ignored for source endpoints.)
    datePartitionSequence : str, default is Undefined, optional
        Date format to use during folder partitioning. Use this parameter when date_partition_enabled is set to true. Valid values are YYYYMMDD, YYYYMMDDHH, YYYYMM, MMYYYYDD, and DDMMYYYY. (AWS default is YYYYMMDD.) (Ignored for source endpoints.)
    datePartitionTimezone : str, default is Undefined, optional
        Convert the current UTC time to a timezone. The conversion occurs when a date partition folder is created and a CDC filename is generated. The timezone format is Area/Location (e.g., Europe/Paris). Use this when date_partition_enabled is true. (Ignored for source endpoints.)
    detachTargetOnLobLookupFailureParquet : bool, default is Undefined, optional
        Undocumented argument for use as directed by AWS Support.
    dictPageSizeLimit : float, default is Undefined, optional
        Maximum size in bytes of an encoded dictionary page of a column. (AWS default is 1 MiB, i.e., 1048576.)
    enableStatistics : bool, default is Undefined, optional
        Whether to enable statistics for Parquet pages and row groups. Default is true.
    encodingType : str, default is Undefined, optional
        Type of encoding to use. Value values are rle_dictionary, plain, and plain_dictionary. (AWS default is rle_dictionary.)
    encryptionMode : str, default is Undefined, optional
        Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are SSE_S3 and SSE_KMS. (AWS default is SSE_S3.) (Ignored for source endpoints -- only SSE_S3 is valid.)
    endpointArn : str, default is Undefined, optional
        ARN for the endpoint.
    endpointType : str, default is Undefined, optional
        Type of endpoint. Valid values are source, target.
    engineDisplayName : str, default is Undefined, optional
        Expanded name for the engine name.
    expectedBucketOwner : str, default is Undefined, optional
        Bucket owner to prevent sniping. Value is an AWS account ID.
    externalId : str, default is Undefined, optional
        Can be used for cross-account validation. Use it in another account with aws_dms_s3_endpoint to create the endpoint cross-account.
    externalTableDefinition : str, default is Undefined, optional
        JSON document that describes how AWS DMS should interpret the data.
    glueCatalogGeneration : bool, default is Undefined, optional
        Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS for more information. Default is false.
    id : str, default is Undefined, optional
        id
    ignoreHeaderRows : float, default is Undefined, optional
        When this value is set to 1, DMS ignores the first row header in a .csv file. (AWS default is 0.)
    includeOpForFullLoad : bool, default is Undefined, optional
        Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is false.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    maxFileSize : float, default is Undefined, optional
        Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from 1 to 1048576. (AWS default is 1 GB, i.e., 1048576.)
    parquetTimestampInMillisecond : bool, default is Undefined, optional
        - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is false. (Ignored for source endpoints.)
    parquetVersion : str, default is Undefined, optional
        Version of the .parquet file format. Valid values are parquet-1-0 and parquet-2-0. (AWS default is parquet-1-0.) (Ignored for source endpoints.)
    preserveTransactions : bool, default is Undefined, optional
        Whether DMS saves the transaction order for a CDC load on the S3 target specified by cdc_path. Default is false. (Ignored for source endpoints.)
    rfc4180 : bool, default is Undefined, optional
        For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is true.
    rowGroupLength : float, default is Undefined, optional
        Number of rows in a row group. (AWS default is 10000.)
    serverSideEncryptionKmsKeyId : str, default is Undefined, optional
        When encryption_mode is SSE_KMS, ARN for the AWS KMS key. (Ignored for source endpoints -- only SSE_S3 encryption_mode is valid.)
    serviceAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to the S3 Bucket.
    sslMode : str, default is Undefined, optional
        SSL mode to use for the connection. Valid values are none, require, verify-ca, verify-full. (AWS default is none.)
    status : str, default is Undefined, optional
        Status of the endpoint.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    timestampColumnName : str, default is Undefined, optional
        Column to add with timestamp information to the endpoint data for an Amazon S3 target.
    useCsvNoSupValue : bool, default is Undefined, optional
        Whether to use csv_no_sup_value for columns not included in the supplemental log. (Ignored for source endpoints.)
    useTaskStartTimeForFullLoadTimestamp : bool, default is Undefined, optional
        When set to true, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to true, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time.When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is false.
    """


    addColumnName?: bool

    addTrailingPaddingCharacter?: bool

    bucketFolder?: str

    bucketName?: str

    cannedAclForObjects?: str

    cdcInsertsAndUpdates?: bool

    cdcInsertsOnly?: bool

    cdcMaxBatchInterval?: float

    cdcMinFileSize?: float

    cdcPath?: str

    certificateArn?: str

    compressionType?: str

    csvDelimiter?: str

    csvNoSupValue?: str

    csvNullValue?: str

    csvRowDelimiter?: str

    dataFormat?: str

    dataPageSize?: float

    datePartitionDelimiter?: str

    datePartitionEnabled?: bool

    datePartitionSequence?: str

    datePartitionTimezone?: str

    detachTargetOnLobLookupFailureParquet?: bool

    dictPageSizeLimit?: float

    enableStatistics?: bool

    encodingType?: str

    encryptionMode?: str

    endpointArn?: str

    endpointType?: str

    engineDisplayName?: str

    expectedBucketOwner?: str

    externalId?: str

    externalTableDefinition?: str

    glueCatalogGeneration?: bool

    id?: str

    ignoreHeaderRows?: float

    includeOpForFullLoad?: bool

    kmsKeyArn?: str

    maxFileSize?: float

    parquetTimestampInMillisecond?: bool

    parquetVersion?: str

    preserveTransactions?: bool

    rfc4180?: bool

    rowGroupLength?: float

    serverSideEncryptionKmsKeyId?: str

    serviceAccessRoleArn?: str

    sslMode?: str

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    timestampColumnName?: str

    useCsvNoSupValue?: bool

    useTaskStartTimeForFullLoadTimestamp?: bool


schema DmsAwsUpboundIoV1beta1S3EndpointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


