"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Intent:
    r"""
    Intent is the Schema for the Intents API. Provides an Amazon Lex intent resource.

    Attributes
    ----------
    apiVersion : str, default is "lexmodels.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Intent", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LexmodelsAwsUpboundIoV1beta2IntentSpec, default is Undefined, required
        spec
    status : LexmodelsAwsUpboundIoV1beta2IntentStatus, default is Undefined, optional
        status
    """


    apiVersion: "lexmodels.aws.upbound.io/v1beta2" = "lexmodels.aws.upbound.io/v1beta2"

    kind: "Intent" = "Intent"

    metadata?: v1.ObjectMeta

    spec: LexmodelsAwsUpboundIoV1beta2IntentSpec

    status?: LexmodelsAwsUpboundIoV1beta2IntentStatus


schema LexmodelsAwsUpboundIoV1beta2IntentSpec:
    r"""
    IntentSpec defines the desired state of Intent

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LexmodelsAwsUpboundIoV1beta2IntentSpecForProvider, default is Undefined, required
        for provider
    initProvider : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LexmodelsAwsUpboundIoV1beta2IntentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LexmodelsAwsUpboundIoV1beta2IntentSpecForProvider

    initProvider?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRef

    publishConnectionDetailsTo?: LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LexmodelsAwsUpboundIoV1beta2IntentSpecWriteConnectionSecretToRef


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProvider:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider

    Attributes
    ----------
    conclusionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatement, default is Undefined, optional
        conclusion statement
    confirmationPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPrompt, default is Undefined, optional
        confirmation prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new slot type version is created when the initial
        resource is created and on each update. Defaults to false.
    description : str, default is Undefined, optional
        A description of the intent. Must be less than or equal to 200 characters in length.
    dialogCodeHook : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderDialogCodeHook, default is Undefined, optional
        dialog code hook
    followUpPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPrompt, default is Undefined, optional
        follow up prompt
    fulfillmentActivity : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivity, default is Undefined, optional
        fulfillment activity
    parentIntentSignature : str, default is Undefined, optional
        A unique identifier for the built-in intent to base this
        intent on. To find the signature for an intent, see
        Standard Built-in Intents
        in the Alexa Skills Kit.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatement, default is Undefined, optional
        rejection statement
    sampleUtterances : [str], default is Undefined, optional
        An array of utterances (strings) that a user might say to signal
        the intent. For example, "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
        In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slot : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0], default is Undefined, optional
        An list of intent slots. At runtime, Amazon Lex elicits required slot values
        from the user using prompts defined in the slots. Attributes are documented under slot.
    """


    conclusionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatement

    confirmationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPrompt

    createVersion?: bool

    description?: str

    dialogCodeHook?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderDialogCodeHook

    followUpPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPrompt

    fulfillmentActivity?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivity

    parentIntentSignature?: str

    region: str

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatement

    sampleUtterances?: [str]

    slot?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0]


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatement:
    r"""
    The statement that you want Amazon Lex to convey to the user
    after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
    you provide a Lambda function in the fulfillment_activity. If you return the intent to the client
    application, you can't specify this element. The follow_up_prompt and conclusion_statement are
    mutually exclusive. You can specify only one. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConclusionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider conclusion statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPrompt:
    r"""
    Prompts the user to confirm the intent. This question should
    have a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,
    or neither. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderConfirmationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider confirmation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderDialogCodeHook:
    r"""
    Specifies a Lambda function to invoke for each user input. You can
    invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPrompt:
    r"""
    Amazon Lex uses this prompt to solicit additional activity after
    fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
    user to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually
    exclusive. You can specify only one. Attributes are documented under follow_up_prompt.

    Attributes
    ----------
    prompt : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPrompt, default is Undefined, optional
        prompt
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatement, default is Undefined, optional
        rejection statement
    """


    prompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPrompt

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatement


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPrompt:
    r"""
    Prompts for information from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider follow up prompt prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatement:
    r"""
    If the user answers "no" to the question defined in the prompt field,
    Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
    documented below under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFollowUpPromptRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider follow up prompt rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivity:
    r"""
    Describes how the intent is fulfilled. For example, after a
    user provides all of the information for a pizza order, fulfillment_activity defines how the bot
    places an order with a local pizza store. Attributes are documented under fulfillment_activity.

    Attributes
    ----------
    codeHook : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivityCodeHook, default is Undefined, optional
        code hook
    $type : str, default is Undefined, optional
        How the intent should be fulfilled, either by running a Lambda function or by
        returning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.
    """


    codeHook?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivityCodeHook

    $type?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderFulfillmentActivityCodeHook:
    r"""
    A description of the Lambda function that is run to fulfill the intent.
    Required if type is CodeHook. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatement:
    r"""
    When the user answers "no" to the question defined in
    confirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was
    canceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.
    Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider slot items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    name : str, default is Undefined, optional
        The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
    priority : float, default is Undefined, optional
        Directs Lex the order in which to elicit this slot value from the user.
        For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
        the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
        values is arbitrary. Must be between 1 and 100.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    sampleUtterances : [str], default is Undefined, optional
        If you know a specific pattern with which users might respond to
        an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
        is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slotConstraint : str, default is Undefined, optional
        Specifies whether the slot is required or optional.
    slotType : str, default is Undefined, optional
        The type of the slot, either a custom slot type that you defined or one of
        the built-in slot types. Must be less than or equal to 100 characters in length.
    slotTypeVersion : str, default is Undefined, optional
        The version of the slot type. Must be less than or equal to 64 characters in length.
    valueElicitationPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPrompt, default is Undefined, optional
        value elicitation prompt
    """


    description?: str

    name?: str

    priority?: float

    responseCard?: str

    sampleUtterances?: [str]

    slotConstraint?: str

    slotType?: str

    slotTypeVersion?: str

    valueElicitationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPrompt


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPrompt:
    r"""
    The prompt that Amazon Lex uses to elicit the slot value
    from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecForProviderSlotItems0ValueElicitationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec for provider slot items0 value elicitation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    conclusionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatement, default is Undefined, optional
        conclusion statement
    confirmationPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPrompt, default is Undefined, optional
        confirmation prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new slot type version is created when the initial
        resource is created and on each update. Defaults to false.
    description : str, default is Undefined, optional
        A description of the intent. Must be less than or equal to 200 characters in length.
    dialogCodeHook : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderDialogCodeHook, default is Undefined, optional
        dialog code hook
    followUpPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPrompt, default is Undefined, optional
        follow up prompt
    fulfillmentActivity : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivity, default is Undefined, optional
        fulfillment activity
    parentIntentSignature : str, default is Undefined, optional
        A unique identifier for the built-in intent to base this
        intent on. To find the signature for an intent, see
        Standard Built-in Intents
        in the Alexa Skills Kit.
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatement, default is Undefined, optional
        rejection statement
    sampleUtterances : [str], default is Undefined, optional
        An array of utterances (strings) that a user might say to signal
        the intent. For example, "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
        In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slot : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0], default is Undefined, optional
        An list of intent slots. At runtime, Amazon Lex elicits required slot values
        from the user using prompts defined in the slots. Attributes are documented under slot.
    """


    conclusionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatement

    confirmationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPrompt

    createVersion?: bool

    description?: str

    dialogCodeHook?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderDialogCodeHook

    followUpPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPrompt

    fulfillmentActivity?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivity

    parentIntentSignature?: str

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatement

    sampleUtterances?: [str]

    slot?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0]


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatement:
    r"""
    The statement that you want Amazon Lex to convey to the user
    after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
    you provide a Lambda function in the fulfillment_activity. If you return the intent to the client
    application, you can't specify this element. The follow_up_prompt and conclusion_statement are
    mutually exclusive. You can specify only one. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConclusionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider conclusion statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPrompt:
    r"""
    Prompts the user to confirm the intent. This question should
    have a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,
    or neither. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderConfirmationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider confirmation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderDialogCodeHook:
    r"""
    Specifies a Lambda function to invoke for each user input. You can
    invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPrompt:
    r"""
    Amazon Lex uses this prompt to solicit additional activity after
    fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
    user to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually
    exclusive. You can specify only one. Attributes are documented under follow_up_prompt.

    Attributes
    ----------
    prompt : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPrompt, default is Undefined, optional
        prompt
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatement, default is Undefined, optional
        rejection statement
    """


    prompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPrompt

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatement


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPrompt:
    r"""
    Prompts for information from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider follow up prompt prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatement:
    r"""
    If the user answers "no" to the question defined in the prompt field,
    Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
    documented below under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFollowUpPromptRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider follow up prompt rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivity:
    r"""
    Describes how the intent is fulfilled. For example, after a
    user provides all of the information for a pizza order, fulfillment_activity defines how the bot
    places an order with a local pizza store. Attributes are documented under fulfillment_activity.

    Attributes
    ----------
    codeHook : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivityCodeHook, default is Undefined, optional
        code hook
    $type : str, default is Undefined, optional
        How the intent should be fulfilled, either by running a Lambda function or by
        returning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.
    """


    codeHook?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivityCodeHook

    $type?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderFulfillmentActivityCodeHook:
    r"""
    A description of the Lambda function that is run to fulfill the intent.
    Required if type is CodeHook. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatement:
    r"""
    When the user answers "no" to the question defined in
    confirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was
    canceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.
    Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider slot items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    name : str, default is Undefined, optional
        The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
    priority : float, default is Undefined, optional
        Directs Lex the order in which to elicit this slot value from the user.
        For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
        the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
        values is arbitrary. Must be between 1 and 100.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    sampleUtterances : [str], default is Undefined, optional
        If you know a specific pattern with which users might respond to
        an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
        is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slotConstraint : str, default is Undefined, optional
        Specifies whether the slot is required or optional.
    slotType : str, default is Undefined, optional
        The type of the slot, either a custom slot type that you defined or one of
        the built-in slot types. Must be less than or equal to 100 characters in length.
    slotTypeVersion : str, default is Undefined, optional
        The version of the slot type. Must be less than or equal to 64 characters in length.
    valueElicitationPrompt : LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPrompt, default is Undefined, optional
        value elicitation prompt
    """


    description?: str

    name?: str

    priority?: float

    responseCard?: str

    sampleUtterances?: [str]

    slotConstraint?: str

    slotType?: str

    slotTypeVersion?: str

    valueElicitationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPrompt


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPrompt:
    r"""
    The prompt that Amazon Lex uses to elicit the slot value
    from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecInitProviderSlotItems0ValueElicitationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent spec init provider slot items0 value elicitation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRefPolicy


schema LexmodelsAwsUpboundIoV1beta2IntentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRef

    metadata?: LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToMetadata

    name: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRefPolicy


schema LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LexmodelsAwsUpboundIoV1beta2IntentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LexmodelsAwsUpboundIoV1beta2IntentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatus:
    r"""
    IntentStatus defines the observed state of Intent.

    Attributes
    ----------
    atProvider : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LexmodelsAwsUpboundIoV1beta2IntentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProvider

    conditions?: [LexmodelsAwsUpboundIoV1beta2IntentStatusConditionsItems0]

    observedGeneration?: int


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProvider:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Lex intent.
    checksum : str, default is Undefined, optional
        Checksum identifying the version of the intent that was created. The checksum is not
        included as an argument because the resource will add it automatically when updating the intent.
    conclusionStatement : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatement, default is Undefined, optional
        conclusion statement
    confirmationPrompt : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPrompt, default is Undefined, optional
        confirmation prompt
    createVersion : bool, default is Undefined, optional
        Determines if a new slot type version is created when the initial
        resource is created and on each update. Defaults to false.
    createdDate : str, default is Undefined, optional
        The date when the intent version was created.
    description : str, default is Undefined, optional
        A description of the intent. Must be less than or equal to 200 characters in length.
    dialogCodeHook : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderDialogCodeHook, default is Undefined, optional
        dialog code hook
    followUpPrompt : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPrompt, default is Undefined, optional
        follow up prompt
    fulfillmentActivity : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivity, default is Undefined, optional
        fulfillment activity
    id : str, default is Undefined, optional
        id
    lastUpdatedDate : str, default is Undefined, optional
        The date when the $LATEST version of this intent was updated.
    parentIntentSignature : str, default is Undefined, optional
        A unique identifier for the built-in intent to base this
        intent on. To find the signature for an intent, see
        Standard Built-in Intents
        in the Alexa Skills Kit.
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatement, default is Undefined, optional
        rejection statement
    sampleUtterances : [str], default is Undefined, optional
        An array of utterances (strings) that a user might say to signal
        the intent. For example, "I want {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
        In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slot : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0], default is Undefined, optional
        An list of intent slots. At runtime, Amazon Lex elicits required slot values
        from the user using prompts defined in the slots. Attributes are documented under slot.
    version : str, default is Undefined, optional
        The version of the bot.
    """


    arn?: str

    checksum?: str

    conclusionStatement?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatement

    confirmationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPrompt

    createVersion?: bool

    createdDate?: str

    description?: str

    dialogCodeHook?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderDialogCodeHook

    followUpPrompt?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPrompt

    fulfillmentActivity?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivity

    id?: str

    lastUpdatedDate?: str

    parentIntentSignature?: str

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatement

    sampleUtterances?: [str]

    slot?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0]

    version?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatement:
    r"""
    The statement that you want Amazon Lex to convey to the user
    after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
    you provide a Lambda function in the fulfillment_activity. If you return the intent to the client
    application, you can't specify this element. The follow_up_prompt and conclusion_statement are
    mutually exclusive. You can specify only one. Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConclusionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider conclusion statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPrompt:
    r"""
    Prompts the user to confirm the intent. This question should
    have a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,
    or neither. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderConfirmationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider confirmation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderDialogCodeHook:
    r"""
    Specifies a Lambda function to invoke for each user input. You can
    invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPrompt:
    r"""
    Amazon Lex uses this prompt to solicit additional activity after
    fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
    user to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually
    exclusive. You can specify only one. Attributes are documented under follow_up_prompt.

    Attributes
    ----------
    prompt : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPrompt, default is Undefined, optional
        prompt
    rejectionStatement : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatement, default is Undefined, optional
        rejection statement
    """


    prompt?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPrompt

    rejectionStatement?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatement


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPrompt:
    r"""
    Prompts for information from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider follow up prompt prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatement:
    r"""
    If the user answers "no" to the question defined in the prompt field,
    Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
    documented below under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFollowUpPromptRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider follow up prompt rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivity:
    r"""
    Describes how the intent is fulfilled. For example, after a
    user provides all of the information for a pizza order, fulfillment_activity defines how the bot
    places an order with a local pizza store. Attributes are documented under fulfillment_activity.

    Attributes
    ----------
    codeHook : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivityCodeHook, default is Undefined, optional
        code hook
    $type : str, default is Undefined, optional
        How the intent should be fulfilled, either by running a Lambda function or by
        returning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.
    """


    codeHook?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivityCodeHook

    $type?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderFulfillmentActivityCodeHook:
    r"""
    A description of the Lambda function that is run to fulfill the intent.
    Required if type is CodeHook. Attributes are documented under code_hook.

    Attributes
    ----------
    messageVersion : str, default is Undefined, optional
        The version of the request-response that you want Amazon Lex to use
        to invoke your Lambda function. For more information, see
        Using Lambda Functions. Must be less than or equal to 5 characters in length.
    uri : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lambda function.
    """


    messageVersion?: str

    uri?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatement:
    r"""
    When the user answers "no" to the question defined in
    confirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was
    canceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.
    Attributes are documented under statement.

    Attributes
    ----------
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatementMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatementMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderRejectionStatementMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider rejection statement message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider slot items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the bot. Must be less than or equal to 200 characters in length.
    name : str, default is Undefined, optional
        The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
    priority : float, default is Undefined, optional
        Directs Lex the order in which to elicit this slot value from the user.
        For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
        the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
        values is arbitrary. Must be between 1 and 100.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    sampleUtterances : [str], default is Undefined, optional
        If you know a specific pattern with which users might respond to
        an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
        is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
    slotConstraint : str, default is Undefined, optional
        Specifies whether the slot is required or optional.
    slotType : str, default is Undefined, optional
        The type of the slot, either a custom slot type that you defined or one of
        the built-in slot types. Must be less than or equal to 100 characters in length.
    slotTypeVersion : str, default is Undefined, optional
        The version of the slot type. Must be less than or equal to 64 characters in length.
    valueElicitationPrompt : LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPrompt, default is Undefined, optional
        value elicitation prompt
    """


    description?: str

    name?: str

    priority?: float

    responseCard?: str

    sampleUtterances?: [str]

    slotConstraint?: str

    slotType?: str

    slotTypeVersion?: str

    valueElicitationPrompt?: LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPrompt


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPrompt:
    r"""
    The prompt that Amazon Lex uses to elicit the slot value
    from the user. Attributes are documented under prompt.

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
    message : [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPromptMessageItems0], default is Undefined, optional
        A set of messages, each of which provides a message string and its type.
        You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
        Attributes are documented under message. Must contain between 1 and 15 messages.
    responseCard : str, default is Undefined, optional
        The response card. Amazon Lex will substitute session attributes and
        slot values into the response card. For more information, see
        Example: Using a Response Card. Must be less than or equal to 50000 characters in length.
    """


    maxAttempts?: float

    message?: [LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPromptMessageItems0]

    responseCard?: str


schema LexmodelsAwsUpboundIoV1beta2IntentStatusAtProviderSlotItems0ValueElicitationPromptMessageItems0:
    r"""
    lexmodels aws upbound io v1beta2 intent status at provider slot items0 value elicitation prompt message items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the message. Must be less than or equal to 1000 characters in length.
    contentType : str, default is Undefined, optional
        The content type of the message string.
    groupNumber : float, default is Undefined, optional
        Identifies the message group that the message belongs to. When a group
        is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
    """


    content?: str

    contentType?: str

    groupNumber?: float


schema LexmodelsAwsUpboundIoV1beta2IntentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


