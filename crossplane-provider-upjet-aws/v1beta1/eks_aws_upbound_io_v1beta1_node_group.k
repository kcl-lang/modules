"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodeGroup:
    r"""
    NodeGroup is the Schema for the NodeGroups API. Manages an EKS Node Group

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodeGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta1NodeGroupSpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta1NodeGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta1" = "eks.aws.upbound.io/v1beta1"

    kind: "NodeGroup" = "NodeGroup"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta1NodeGroupSpec

    status?: EksAwsUpboundIoV1beta1NodeGroupStatus


schema EksAwsUpboundIoV1beta1NodeGroupSpec:
    r"""
    NodeGroupSpec defines the desired state of NodeGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta1NodeGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : EksAwsUpboundIoV1beta1NodeGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta1NodeGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta1NodeGroupSpecForProvider

    initProvider?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta1NodeGroupSpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProvider:
    r"""
    eks aws upbound io v1beta1 node group spec for provider

    Attributes
    ----------
    amiType : str, default is Undefined, optional
        Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the AWS documentation for valid values.
    capacityType : str, default is Undefined, optional
        Type of capacity associated with the EKS Node Group. Valid values: ON_DEMAND, SPOT.
    clusterName : str, default is Undefined, optional
        –  Name of the EKS Cluster.
    clusterNameRef : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    diskSize : float, default is Undefined, optional
        Disk size in GiB for worker nodes. Defaults to 50 for Windows, 20 all other node groups.
    forceUpdateVersion : bool, default is Undefined, optional
        Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
    instanceTypes : [str], default is Undefined, optional
        List of instance types associated with the EKS Node Group. Defaults to ["t3.medium"].
    labels : {str:str}, default is Undefined, optional
        Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
    launchTemplate : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderLaunchTemplateItems0], default is Undefined, optional
        Configuration block with Launch Template settings. See launch_template below for details. Conflicts with remote_access.
    nodeRoleArn : str, default is Undefined, optional
        –  Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
    nodeRoleArnRef : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRef, default is Undefined, optional
        node role arn ref
    nodeRoleArnSelector : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelector, default is Undefined, optional
        node role arn selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    releaseVersion : str, default is Undefined, optional
        –  AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
    remoteAccess : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0], default is Undefined, optional
        Configuration block with remote access settings. See remote_access below for details. Conflicts with launch_template.
    scalingConfig : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderScalingConfigItems0], default is Undefined, optional
        Configuration block with scaling settings. See scaling_config below for details.
    subnetIdRefs : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets to associate with the EKS Node Group. Amazon EKS managed node groups can be launched in both public and private subnets. If you plan to deploy load balancers to a subnet, the private subnet must have tag kubernetes.io/role/internal-elb, the public subnet must have tag kubernetes.io/role/elb.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taint : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderTaintItems0], default is Undefined, optional
        The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
    updateConfig : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderUpdateConfigItems0], default is Undefined, optional
        Configuration block with update settings. See update_config below for details.
    version : str, default is Undefined, optional
        –  Kubernetes version. Defaults to EKS Cluster Kubernetes version.
    versionRef : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRef, default is Undefined, optional
        version ref
    versionSelector : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelector, default is Undefined, optional
        version selector
    """


    amiType?: str

    capacityType?: str

    clusterName?: str

    clusterNameRef?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelector

    diskSize?: float

    forceUpdateVersion?: bool

    instanceTypes?: [str]

    labels?: {str:str}

    launchTemplate?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderLaunchTemplateItems0]

    nodeRoleArn?: str

    nodeRoleArnRef?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRef

    nodeRoleArnSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelector

    region: str

    releaseVersion?: str

    remoteAccess?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0]

    scalingConfig?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderScalingConfigItems0]

    subnetIdRefs?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    taint?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderTaintItems0]

    updateConfig?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderUpdateConfigItems0]

    version?: str

    versionRef?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRef

    versionSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelector


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRef:
    r"""
    Reference to a Cluster in eks to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelector:
    r"""
    Selector for a Cluster in eks to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderLaunchTemplateItems0:
    r"""
    eks aws upbound io v1beta1 node group spec for provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Identifier of the EC2 Launch Template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the EC2 Launch Template. Conflicts with id.
    version : str, default is Undefined, optional
        EC2 Launch Template version number. While the API accepts values like $Default and $Latest, the API will convert the value to the associated version number (e.g., 1). Using the default_version or latest_version attribute of the aws_launch_template resource or data source is recommended for this argument.
    """


    id?: str

    name?: str

    version?: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRef:
    r"""
    Reference to a Role in iam to populate nodeRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelector:
    r"""
    Selector for a Role in iam to populate nodeRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderNodeRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0:
    r"""
    eks aws upbound io v1beta1 node group spec for provider remote access items0

    Attributes
    ----------
    ec2SshKey : str, default is Undefined, optional
        EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify source_security_group_ids when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
    sourceSecurityGroupIdRefs : [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate sourceSecurityGroupIds.
    sourceSecurityGroupIdSelector : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelector, default is Undefined, optional
        source security group Id selector
    sourceSecurityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify ec2_ssh_key, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """


    ec2SshKey?: str

    sourceSecurityGroupIdRefs?: [EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0]

    sourceSecurityGroupIdSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelector

    sourceSecurityGroupIds?: [str]


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate sourceSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderScalingConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group spec for provider scaling config items0

    Attributes
    ----------
    desiredSize : float, default is Undefined, optional
        Desired number of worker nodes.
    maxSize : float, default is Undefined, optional
        Maximum number of worker nodes.
    minSize : float, default is Undefined, optional
        Minimum number of worker nodes.
    """


    desiredSize?: float

    maxSize?: float

    minSize?: float


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderTaintItems0:
    r"""
    eks aws upbound io v1beta1 node group spec for provider taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        The effect of the taint. Valid values: NO_SCHEDULE, NO_EXECUTE, PREFER_NO_SCHEDULE.
    key : str, default is Undefined, optional
        The key of the taint. Maximum length of 63.
    value : str, default is Undefined, optional
        The value of the taint. Maximum length of 63.
    """


    effect?: str

    key?: str

    value?: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderUpdateConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group spec for provider update config items0

    Attributes
    ----------
    maxUnavailable : float, default is Undefined, optional
        Desired max number of unavailable worker nodes during node group update.
    maxUnavailablePercentage : float, default is Undefined, optional
        Desired max percentage of unavailable worker nodes during node group update.
    """


    maxUnavailable?: float

    maxUnavailablePercentage?: float


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRef:
    r"""
    Reference to a Cluster in eks to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelector:
    r"""
    Selector for a Cluster in eks to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecForProviderVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    amiType : str, default is Undefined, optional
        Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the AWS documentation for valid values.
    capacityType : str, default is Undefined, optional
        Type of capacity associated with the EKS Node Group. Valid values: ON_DEMAND, SPOT.
    diskSize : float, default is Undefined, optional
        Disk size in GiB for worker nodes. Defaults to 50 for Windows, 20 all other node groups.
    forceUpdateVersion : bool, default is Undefined, optional
        Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
    instanceTypes : [str], default is Undefined, optional
        List of instance types associated with the EKS Node Group. Defaults to ["t3.medium"].
    labels : {str:str}, default is Undefined, optional
        Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
    launchTemplate : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderLaunchTemplateItems0], default is Undefined, optional
        Configuration block with Launch Template settings. See launch_template below for details. Conflicts with remote_access.
    nodeRoleArn : str, default is Undefined, optional
        –  Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
    nodeRoleArnRef : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRef, default is Undefined, optional
        node role arn ref
    nodeRoleArnSelector : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelector, default is Undefined, optional
        node role arn selector
    releaseVersion : str, default is Undefined, optional
        –  AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
    remoteAccess : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0], default is Undefined, optional
        Configuration block with remote access settings. See remote_access below for details. Conflicts with launch_template.
    scalingConfig : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderScalingConfigItems0], default is Undefined, optional
        Configuration block with scaling settings. See scaling_config below for details.
    subnetIdRefs : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets to associate with the EKS Node Group. Amazon EKS managed node groups can be launched in both public and private subnets. If you plan to deploy load balancers to a subnet, the private subnet must have tag kubernetes.io/role/internal-elb, the public subnet must have tag kubernetes.io/role/elb.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taint : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderTaintItems0], default is Undefined, optional
        The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
    updateConfig : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderUpdateConfigItems0], default is Undefined, optional
        Configuration block with update settings. See update_config below for details.
    version : str, default is Undefined, optional
        –  Kubernetes version. Defaults to EKS Cluster Kubernetes version.
    versionRef : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRef, default is Undefined, optional
        version ref
    versionSelector : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelector, default is Undefined, optional
        version selector
    """


    amiType?: str

    capacityType?: str

    diskSize?: float

    forceUpdateVersion?: bool

    instanceTypes?: [str]

    labels?: {str:str}

    launchTemplate?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderLaunchTemplateItems0]

    nodeRoleArn?: str

    nodeRoleArnRef?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRef

    nodeRoleArnSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelector

    releaseVersion?: str

    remoteAccess?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0]

    scalingConfig?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderScalingConfigItems0]

    subnetIdRefs?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    taint?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderTaintItems0]

    updateConfig?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderUpdateConfigItems0]

    version?: str

    versionRef?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRef

    versionSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelector


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderLaunchTemplateItems0:
    r"""
    eks aws upbound io v1beta1 node group spec init provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Identifier of the EC2 Launch Template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the EC2 Launch Template. Conflicts with id.
    version : str, default is Undefined, optional
        EC2 Launch Template version number. While the API accepts values like $Default and $Latest, the API will convert the value to the associated version number (e.g., 1). Using the default_version or latest_version attribute of the aws_launch_template resource or data source is recommended for this argument.
    """


    id?: str

    name?: str

    version?: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRef:
    r"""
    Reference to a Role in iam to populate nodeRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelector:
    r"""
    Selector for a Role in iam to populate nodeRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderNodeRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0:
    r"""
    eks aws upbound io v1beta1 node group spec init provider remote access items0

    Attributes
    ----------
    ec2SshKey : str, default is Undefined, optional
        EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify source_security_group_ids when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
    sourceSecurityGroupIdRefs : [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate sourceSecurityGroupIds.
    sourceSecurityGroupIdSelector : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelector, default is Undefined, optional
        source security group Id selector
    sourceSecurityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify ec2_ssh_key, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """


    ec2SshKey?: str

    sourceSecurityGroupIdRefs?: [EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0]

    sourceSecurityGroupIdSelector?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelector

    sourceSecurityGroupIds?: [str]


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate sourceSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderRemoteAccessItems0SourceSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderScalingConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group spec init provider scaling config items0

    Attributes
    ----------
    desiredSize : float, default is Undefined, optional
        Desired number of worker nodes.
    maxSize : float, default is Undefined, optional
        Maximum number of worker nodes.
    minSize : float, default is Undefined, optional
        Minimum number of worker nodes.
    """


    desiredSize?: float

    maxSize?: float

    minSize?: float


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderTaintItems0:
    r"""
    eks aws upbound io v1beta1 node group spec init provider taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        The effect of the taint. Valid values: NO_SCHEDULE, NO_EXECUTE, PREFER_NO_SCHEDULE.
    key : str, default is Undefined, optional
        The key of the taint. Maximum length of 63.
    value : str, default is Undefined, optional
        The value of the taint. Maximum length of 63.
    """


    effect?: str

    key?: str

    value?: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderUpdateConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group spec init provider update config items0

    Attributes
    ----------
    maxUnavailable : float, default is Undefined, optional
        Desired max number of unavailable worker nodes during node group update.
    maxUnavailablePercentage : float, default is Undefined, optional
        Desired max percentage of unavailable worker nodes during node group update.
    """


    maxUnavailable?: float

    maxUnavailablePercentage?: float


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRef:
    r"""
    Reference to a Cluster in eks to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelector:
    r"""
    Selector for a Cluster in eks to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelectorPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecInitProviderVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1NodeGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta1NodeGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta1NodeGroupStatus:
    r"""
    NodeGroupStatus defines the observed state of NodeGroup.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta1NodeGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta1NodeGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta1NodeGroupStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta1NodeGroupStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProvider:
    r"""
    eks aws upbound io v1beta1 node group status at provider

    Attributes
    ----------
    amiType : str, default is Undefined, optional
        Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the AWS documentation for valid values.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the EKS Node Group.
    capacityType : str, default is Undefined, optional
        Type of capacity associated with the EKS Node Group. Valid values: ON_DEMAND, SPOT.
    clusterName : str, default is Undefined, optional
        –  Name of the EKS Cluster.
    diskSize : float, default is Undefined, optional
        Disk size in GiB for worker nodes. Defaults to 50 for Windows, 20 all other node groups.
    forceUpdateVersion : bool, default is Undefined, optional
        Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
    id : str, default is Undefined, optional
        EKS Cluster name and EKS Node Group name separated by a colon (:).
    instanceTypes : [str], default is Undefined, optional
        List of instance types associated with the EKS Node Group. Defaults to ["t3.medium"].
    labels : {str:str}, default is Undefined, optional
        Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
    launchTemplate : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderLaunchTemplateItems0], default is Undefined, optional
        Configuration block with Launch Template settings. See launch_template below for details. Conflicts with remote_access.
    nodeRoleArn : str, default is Undefined, optional
        –  Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
    releaseVersion : str, default is Undefined, optional
        –  AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
    remoteAccess : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderRemoteAccessItems0], default is Undefined, optional
        Configuration block with remote access settings. See remote_access below for details. Conflicts with launch_template.
    resources : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0], default is Undefined, optional
        List of objects containing information about underlying resources.
    scalingConfig : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderScalingConfigItems0], default is Undefined, optional
        Configuration block with scaling settings. See scaling_config below for details.
    status : str, default is Undefined, optional
        Status of the EKS Node Group.
    subnetIds : [str], default is Undefined, optional
        Identifiers of EC2 Subnets to associate with the EKS Node Group. Amazon EKS managed node groups can be launched in both public and private subnets. If you plan to deploy load balancers to a subnet, the private subnet must have tag kubernetes.io/role/internal-elb, the public subnet must have tag kubernetes.io/role/elb.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    taint : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderTaintItems0], default is Undefined, optional
        The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
    updateConfig : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderUpdateConfigItems0], default is Undefined, optional
        Configuration block with update settings. See update_config below for details.
    version : str, default is Undefined, optional
        –  Kubernetes version. Defaults to EKS Cluster Kubernetes version.
    """


    amiType?: str

    arn?: str

    capacityType?: str

    clusterName?: str

    diskSize?: float

    forceUpdateVersion?: bool

    id?: str

    instanceTypes?: [str]

    labels?: {str:str}

    launchTemplate?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderLaunchTemplateItems0]

    nodeRoleArn?: str

    releaseVersion?: str

    remoteAccess?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderRemoteAccessItems0]

    resources?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0]

    scalingConfig?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderScalingConfigItems0]

    status?: str

    subnetIds?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    taint?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderTaintItems0]

    updateConfig?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderUpdateConfigItems0]

    version?: str


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderLaunchTemplateItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Identifier of the EC2 Launch Template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the EC2 Launch Template. Conflicts with id.
    version : str, default is Undefined, optional
        EC2 Launch Template version number. While the API accepts values like $Default and $Latest, the API will convert the value to the associated version number (e.g., 1). Using the default_version or latest_version attribute of the aws_launch_template resource or data source is recommended for this argument.
    """


    id?: str

    name?: str

    version?: str


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderRemoteAccessItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider remote access items0

    Attributes
    ----------
    ec2SshKey : str, default is Undefined, optional
        EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify source_security_group_ids when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
    sourceSecurityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify ec2_ssh_key, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """


    ec2SshKey?: str

    sourceSecurityGroupIds?: [str]


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider resources items0

    Attributes
    ----------
    autoscalingGroups : [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0AutoscalingGroupsItems0], default is Undefined, optional
        List of objects containing information about AutoScaling Groups.
    remoteAccessSecurityGroupId : str, default is Undefined, optional
        Identifier of the remote access EC2 Security Group.
    """


    autoscalingGroups?: [EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0AutoscalingGroupsItems0]

    remoteAccessSecurityGroupId?: str


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderResourcesItems0AutoscalingGroupsItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider resources items0 autoscaling groups items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the AutoScaling Group.
    """


    name?: str


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderScalingConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider scaling config items0

    Attributes
    ----------
    desiredSize : float, default is Undefined, optional
        Desired number of worker nodes.
    maxSize : float, default is Undefined, optional
        Maximum number of worker nodes.
    minSize : float, default is Undefined, optional
        Minimum number of worker nodes.
    """


    desiredSize?: float

    maxSize?: float

    minSize?: float


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderTaintItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider taint items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        The effect of the taint. Valid values: NO_SCHEDULE, NO_EXECUTE, PREFER_NO_SCHEDULE.
    key : str, default is Undefined, optional
        The key of the taint. Maximum length of 63.
    value : str, default is Undefined, optional
        The value of the taint. Maximum length of 63.
    """


    effect?: str

    key?: str

    value?: str


schema EksAwsUpboundIoV1beta1NodeGroupStatusAtProviderUpdateConfigItems0:
    r"""
    eks aws upbound io v1beta1 node group status at provider update config items0

    Attributes
    ----------
    maxUnavailable : float, default is Undefined, optional
        Desired max number of unavailable worker nodes during node group update.
    maxUnavailablePercentage : float, default is Undefined, optional
        Desired max percentage of unavailable worker nodes during node group update.
    """


    maxUnavailable?: float

    maxUnavailablePercentage?: float


schema EksAwsUpboundIoV1beta1NodeGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


