"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Object:
    r"""
    Object is the Schema for the Objects API. Provides an S3 object resource.

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Object", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1ObjectSpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1ObjectStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "Object" = "Object"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1ObjectSpec

    status?: S3AwsUpboundIoV1beta1ObjectStatus


schema S3AwsUpboundIoV1beta1ObjectSpec:
    r"""
    ObjectSpec defines the desired state of Object

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1ObjectSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1ObjectSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1ObjectSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1ObjectSpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1ObjectSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1ObjectSpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1ObjectSpecForProvider:
    r"""
    s3 aws upbound io v1beta1 object spec for provider

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    bucketKeyEnabled : bool, default is Undefined, optional
        Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    bucketRef : S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    cacheControl : str, default is Undefined, optional
        Caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    content : str, default is Undefined, optional
        Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    contentBase64 : str, default is Undefined, optional
        Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    contentDisposition : str, default is Undefined, optional
        Presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    etag : str, default is Undefined, optional
        Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms", also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see source_hash instead).
    forceDestroy : bool, default is Undefined, optional
        Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    kmsKeyId : str, default is Undefined, optional
        ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    kmsKeyIdRef : S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    objectLockLegalHoldStatus : str, default is Undefined, optional
        Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    overrideProvider : [S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0], default is Undefined, optional
        Override provider-level configuration options. See Override Provider below for more details.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serverSideEncryption : str, default is Undefined, optional
        Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    source : str, default is Undefined, optional
        Path to a file that will be read and uploaded as raw bytes for the object content.
    sourceHash : str, default is Undefined, optional
        Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    storageClass : str, default is Undefined, optional
        Storage Class for the object. Defaults to "STANDARD".
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    websiteRedirect : str, default is Undefined, optional
        Target URL for website redirect.
    """


    acl?: str

    bucket?: str

    bucketKeyEnabled?: bool

    bucketRef?: S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelector

    cacheControl?: str

    checksumAlgorithm?: str

    content?: str

    contentBase64?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    etag?: str

    forceDestroy?: bool

    key?: str

    kmsKeyId?: str

    kmsKeyIdRef?: S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelector

    metadata?: {str:str}

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    overrideProvider?: [S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0]

    region: str

    serverSideEncryption?: str

    source?: str

    sourceHash?: str

    storageClass?: str

    tags?: {str:str}

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelectorPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0:
    r"""
    s3 aws upbound io v1beta1 object spec for provider override provider items0

    Attributes
    ----------
    defaultTags : [S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0DefaultTagsItems0], default is Undefined, optional
        Override the provider default_tags configuration block.
    """


    defaultTags?: [S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0DefaultTagsItems0]


schema S3AwsUpboundIoV1beta1ObjectSpecForProviderOverrideProviderItems0DefaultTagsItems0:
    r"""
    s3 aws upbound io v1beta1 object spec for provider override provider items0 default tags items0

    Attributes
    ----------
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    tags?: {str:str}


schema S3AwsUpboundIoV1beta1ObjectSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    bucketKeyEnabled : bool, default is Undefined, optional
        Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    bucketRef : S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    cacheControl : str, default is Undefined, optional
        Caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    content : str, default is Undefined, optional
        Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    contentBase64 : str, default is Undefined, optional
        Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    contentDisposition : str, default is Undefined, optional
        Presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    etag : str, default is Undefined, optional
        Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms", also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see source_hash instead).
    forceDestroy : bool, default is Undefined, optional
        Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    kmsKeyId : str, default is Undefined, optional
        ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    kmsKeyIdRef : S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    objectLockLegalHoldStatus : str, default is Undefined, optional
        Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    overrideProvider : [S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0], default is Undefined, optional
        Override provider-level configuration options. See Override Provider below for more details.
    serverSideEncryption : str, default is Undefined, optional
        Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    source : str, default is Undefined, optional
        Path to a file that will be read and uploaded as raw bytes for the object content.
    sourceHash : str, default is Undefined, optional
        Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    storageClass : str, default is Undefined, optional
        Storage Class for the object. Defaults to "STANDARD".
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    websiteRedirect : str, default is Undefined, optional
        Target URL for website redirect.
    """


    acl?: str

    bucket?: str

    bucketKeyEnabled?: bool

    bucketRef?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelector

    cacheControl?: str

    checksumAlgorithm?: str

    content?: str

    contentBase64?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    etag?: str

    forceDestroy?: bool

    key?: str

    kmsKeyId?: str

    kmsKeyIdRef?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelector

    metadata?: {str:str}

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    overrideProvider?: [S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0]

    serverSideEncryption?: str

    source?: str

    sourceHash?: str

    storageClass?: str

    tags?: {str:str}

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelectorPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0:
    r"""
    s3 aws upbound io v1beta1 object spec init provider override provider items0

    Attributes
    ----------
    defaultTags : [S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0DefaultTagsItems0], default is Undefined, optional
        Override the provider default_tags configuration block.
    """


    defaultTags?: [S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0DefaultTagsItems0]


schema S3AwsUpboundIoV1beta1ObjectSpecInitProviderOverrideProviderItems0DefaultTagsItems0:
    r"""
    s3 aws upbound io v1beta1 object spec init provider override provider items0 default tags items0

    Attributes
    ----------
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    tags?: {str:str}


schema S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1ObjectSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectStatus:
    r"""
    ObjectStatus defines the observed state of Object.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1ObjectStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1ObjectStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1ObjectStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1ObjectStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1ObjectStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 object status at provider

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control.
    arn : str, default is Undefined, optional
        ARN of the object.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in. Alternatively, an S3 access point ARN can be specified.
    bucketKeyEnabled : bool, default is Undefined, optional
        Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.
    cacheControl : str, default is Undefined, optional
        Caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    checksumCrc32 : str, default is Undefined, optional
        The base64-encoded, 32-bit CRC32 checksum of the object.
    checksumCrc32C : str, default is Undefined, optional
        The base64-encoded, 32-bit CRC32C checksum of the object.
    checksumSha1 : str, default is Undefined, optional
        The base64-encoded, 160-bit SHA-1 digest of the object.
    checksumSha256 : str, default is Undefined, optional
        The base64-encoded, 256-bit SHA-256 digest of the object.
    content : str, default is Undefined, optional
        Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.
    contentBase64 : str, default is Undefined, optional
        Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.
    contentDisposition : str, default is Undefined, optional
        Presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Content encodings that have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    etag : str, default is Undefined, optional
        Triggers updates when the value changes.11.11.11 or earlier). This attribute is not compatible with KMS encryption, kms_key_id or server_side_encryption = "aws:kms", also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see source_hash instead).
    forceDestroy : bool, default is Undefined, optional
        Whether to allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    id : str, default is Undefined, optional
        id
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    kmsKeyId : str, default is Undefined, optional
        ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the aws_kms_key resource, use the arn attribute. If referencing the aws_kms_alias data source or resource, use the target_key_arn attribute.
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    objectLockLegalHoldStatus : str, default is Undefined, optional
        Legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    overrideProvider : [S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0], default is Undefined, optional
        Override provider-level configuration options. See Override Provider below for more details.
    serverSideEncryption : str, default is Undefined, optional
        Server-side encryption of the object in S3. Valid values are "AES256" and "aws:kms".
    source : str, default is Undefined, optional
        Path to a file that will be read and uploaded as raw bytes for the object content.
    sourceHash : str, default is Undefined, optional
        Triggers updates like etag but useful to address etag encryption limitations.11.12 or later). (The value is only stored in state and not saved by AWS.)
    storageClass : str, default is Undefined, optional
        Storage Class for the object. Defaults to "STANDARD".
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    versionId : str, default is Undefined, optional
        Unique version ID value for the object, if bucket versioning is enabled.
    websiteRedirect : str, default is Undefined, optional
        Target URL for website redirect.
    """


    acl?: str

    arn?: str

    bucket?: str

    bucketKeyEnabled?: bool

    cacheControl?: str

    checksumAlgorithm?: str

    checksumCrc32?: str

    checksumCrc32C?: str

    checksumSha1?: str

    checksumSha256?: str

    content?: str

    contentBase64?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    etag?: str

    forceDestroy?: bool

    id?: str

    key?: str

    kmsKeyId?: str

    metadata?: {str:str}

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    overrideProvider?: [S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0]

    serverSideEncryption?: str

    source?: str

    sourceHash?: str

    storageClass?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    versionId?: str

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0:
    r"""
    s3 aws upbound io v1beta1 object status at provider override provider items0

    Attributes
    ----------
    defaultTags : [S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0DefaultTagsItems0], default is Undefined, optional
        Override the provider default_tags configuration block.
    """


    defaultTags?: [S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0DefaultTagsItems0]


schema S3AwsUpboundIoV1beta1ObjectStatusAtProviderOverrideProviderItems0DefaultTagsItems0:
    r"""
    s3 aws upbound io v1beta1 object status at provider override provider items0 default tags items0

    Attributes
    ----------
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    tags?: {str:str}


schema S3AwsUpboundIoV1beta1ObjectStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


