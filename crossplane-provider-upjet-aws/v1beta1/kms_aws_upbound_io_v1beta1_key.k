"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Key:
    r"""
    Key is the Schema for the Keys API. Manages a single-Region or multi-Region primary KMS key.

    Attributes
    ----------
    apiVersion : str, default is "kms.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Key", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsAwsUpboundIoV1beta1KeySpec, default is Undefined, required
        spec
    status : KmsAwsUpboundIoV1beta1KeyStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.aws.upbound.io/v1beta1" = "kms.aws.upbound.io/v1beta1"

    kind: "Key" = "Key"

    metadata?: v1.ObjectMeta

    spec: KmsAwsUpboundIoV1beta1KeySpec

    status?: KmsAwsUpboundIoV1beta1KeyStatus


schema KmsAwsUpboundIoV1beta1KeySpec:
    r"""
    KeySpec defines the desired state of Key

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KmsAwsUpboundIoV1beta1KeySpecForProvider, default is Undefined, required
        for provider
    initProvider : KmsAwsUpboundIoV1beta1KeySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KmsAwsUpboundIoV1beta1KeySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KmsAwsUpboundIoV1beta1KeySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KmsAwsUpboundIoV1beta1KeySpecForProvider

    initProvider?: KmsAwsUpboundIoV1beta1KeySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KmsAwsUpboundIoV1beta1KeySpecProviderConfigRef

    publishConnectionDetailsTo?: KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KmsAwsUpboundIoV1beta1KeySpecWriteConnectionSecretToRef


schema KmsAwsUpboundIoV1beta1KeySpecForProvider:
    r"""
    kms aws upbound io v1beta1 key spec for provider

    Attributes
    ----------
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        A flag to indicate whether to bypass the key policy lockout safety check.
        Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
        For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
        The default value is false.
    customKeyStoreId : str, default is Undefined, optional
        ID of the KMS Custom Key Store where the key will be stored instead of KMS (eg CloudHSM).
    customerMasterKeySpec : str, default is Undefined, optional
        Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.
        Valid values: SYMMETRIC_DEFAULT,  RSA_2048, RSA_3072, RSA_4096, HMAC_256, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, or ECC_SECG_P256K1. Defaults to SYMMETRIC_DEFAULT. For help with choosing a key spec, see the AWS KMS Developer Guide.
    deletionWindowInDays : float, default is Undefined, optional
        The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
        If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
        If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
    description : str, default is Undefined, optional
        The description of the key as viewed in AWS console.
    enableKeyRotation : bool, default is Undefined, optional
        Specifies whether key rotation is enabled. Defaults to false.
    isEnabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Defaults to true.
    keyUsage : str, default is Undefined, optional
        Specifies the intended use of the key. Valid values: ENCRYPT_DECRYPT, SIGN_VERIFY, or GENERATE_VERIFY_MAC.
        Defaults to ENCRYPT_DECRYPT.
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A valid policy JSON document. Although this is a key policy, not an IAM policy, an aws_iam_policy_document, in the form that designates a principal, can be used.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rotationPeriodInDays : float, default is Undefined, optional
        Custom period of time between each rotation date. Must be a number between 90 and 2560 (inclusive).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    xksKeyId : str, default is Undefined, optional
        Identifies the external key that serves as key material for the KMS key in an external key store.
    """


    bypassPolicyLockoutSafetyCheck?: bool

    customKeyStoreId?: str

    customerMasterKeySpec?: str

    deletionWindowInDays?: float

    description?: str

    enableKeyRotation?: bool

    isEnabled?: bool

    keyUsage?: str

    multiRegion?: bool

    policy?: str

    region: str

    rotationPeriodInDays?: float

    tags?: {str:str}

    xksKeyId?: str


schema KmsAwsUpboundIoV1beta1KeySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        A flag to indicate whether to bypass the key policy lockout safety check.
        Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
        For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
        The default value is false.
    customKeyStoreId : str, default is Undefined, optional
        ID of the KMS Custom Key Store where the key will be stored instead of KMS (eg CloudHSM).
    customerMasterKeySpec : str, default is Undefined, optional
        Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.
        Valid values: SYMMETRIC_DEFAULT,  RSA_2048, RSA_3072, RSA_4096, HMAC_256, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, or ECC_SECG_P256K1. Defaults to SYMMETRIC_DEFAULT. For help with choosing a key spec, see the AWS KMS Developer Guide.
    deletionWindowInDays : float, default is Undefined, optional
        The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
        If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
        If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
    description : str, default is Undefined, optional
        The description of the key as viewed in AWS console.
    enableKeyRotation : bool, default is Undefined, optional
        Specifies whether key rotation is enabled. Defaults to false.
    isEnabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Defaults to true.
    keyUsage : str, default is Undefined, optional
        Specifies the intended use of the key. Valid values: ENCRYPT_DECRYPT, SIGN_VERIFY, or GENERATE_VERIFY_MAC.
        Defaults to ENCRYPT_DECRYPT.
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A valid policy JSON document. Although this is a key policy, not an IAM policy, an aws_iam_policy_document, in the form that designates a principal, can be used.
    rotationPeriodInDays : float, default is Undefined, optional
        Custom period of time between each rotation date. Must be a number between 90 and 2560 (inclusive).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    xksKeyId : str, default is Undefined, optional
        Identifies the external key that serves as key material for the KMS key in an external key store.
    """


    bypassPolicyLockoutSafetyCheck?: bool

    customKeyStoreId?: str

    customerMasterKeySpec?: str

    deletionWindowInDays?: float

    description?: str

    enableKeyRotation?: bool

    isEnabled?: bool

    keyUsage?: str

    multiRegion?: bool

    policy?: str

    rotationPeriodInDays?: float

    tags?: {str:str}

    xksKeyId?: str


schema KmsAwsUpboundIoV1beta1KeySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsAwsUpboundIoV1beta1KeySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsAwsUpboundIoV1beta1KeySpecProviderConfigRefPolicy


schema KmsAwsUpboundIoV1beta1KeySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef

    metadata?: KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata

    name: str


schema KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy


schema KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsAwsUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KmsAwsUpboundIoV1beta1KeySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KmsAwsUpboundIoV1beta1KeyStatus:
    r"""
    KeyStatus defines the observed state of Key.

    Attributes
    ----------
    atProvider : KmsAwsUpboundIoV1beta1KeyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KmsAwsUpboundIoV1beta1KeyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KmsAwsUpboundIoV1beta1KeyStatusAtProvider

    conditions?: [KmsAwsUpboundIoV1beta1KeyStatusConditionsItems0]

    observedGeneration?: int


schema KmsAwsUpboundIoV1beta1KeyStatusAtProvider:
    r"""
    kms aws upbound io v1beta1 key status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the key.
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        A flag to indicate whether to bypass the key policy lockout safety check.
        Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
        For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.
        The default value is false.
    customKeyStoreId : str, default is Undefined, optional
        ID of the KMS Custom Key Store where the key will be stored instead of KMS (eg CloudHSM).
    customerMasterKeySpec : str, default is Undefined, optional
        Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.
        Valid values: SYMMETRIC_DEFAULT,  RSA_2048, RSA_3072, RSA_4096, HMAC_256, ECC_NIST_P256, ECC_NIST_P384, ECC_NIST_P521, or ECC_SECG_P256K1. Defaults to SYMMETRIC_DEFAULT. For help with choosing a key spec, see the AWS KMS Developer Guide.
    deletionWindowInDays : float, default is Undefined, optional
        The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
        If you specify a value, it must be between 7 and 30, inclusive. If you do not specify a value, it defaults to 30.
        If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
    description : str, default is Undefined, optional
        The description of the key as viewed in AWS console.
    enableKeyRotation : bool, default is Undefined, optional
        Specifies whether key rotation is enabled. Defaults to false.
    id : str, default is Undefined, optional
        id
    isEnabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Defaults to true.
    keyId : str, default is Undefined, optional
        The globally unique identifier for the key.
    keyUsage : str, default is Undefined, optional
        Specifies the intended use of the key. Valid values: ENCRYPT_DECRYPT, SIGN_VERIFY, or GENERATE_VERIFY_MAC.
        Defaults to ENCRYPT_DECRYPT.
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A valid policy JSON document. Although this is a key policy, not an IAM policy, an aws_iam_policy_document, in the form that designates a principal, can be used.
    rotationPeriodInDays : float, default is Undefined, optional
        Custom period of time between each rotation date. Must be a number between 90 and 2560 (inclusive).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    xksKeyId : str, default is Undefined, optional
        Identifies the external key that serves as key material for the KMS key in an external key store.
    """


    arn?: str

    bypassPolicyLockoutSafetyCheck?: bool

    customKeyStoreId?: str

    customerMasterKeySpec?: str

    deletionWindowInDays?: float

    description?: str

    enableKeyRotation?: bool

    id?: str

    isEnabled?: bool

    keyId?: str

    keyUsage?: str

    multiRegion?: bool

    policy?: str

    rotationPeriodInDays?: float

    tags?: {str:str}

    tagsAll?: {str:str}

    xksKeyId?: str


schema KmsAwsUpboundIoV1beta1KeyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


