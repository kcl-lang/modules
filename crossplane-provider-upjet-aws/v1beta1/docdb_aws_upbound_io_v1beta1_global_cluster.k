"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GlobalCluster:
    r"""
    GlobalCluster is the Schema for the GlobalClusters API. Manages a DocumentDB Global Cluster

    Attributes
    ----------
    apiVersion : str, default is "docdb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GlobalCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DocdbAwsUpboundIoV1beta1GlobalClusterSpec, default is Undefined, required
        spec
    status : DocdbAwsUpboundIoV1beta1GlobalClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "docdb.aws.upbound.io/v1beta1" = "docdb.aws.upbound.io/v1beta1"

    kind: "GlobalCluster" = "GlobalCluster"

    metadata?: v1.ObjectMeta

    spec: DocdbAwsUpboundIoV1beta1GlobalClusterSpec

    status?: DocdbAwsUpboundIoV1beta1GlobalClusterStatus


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpec:
    r"""
    GlobalClusterSpec defines the desired state of GlobalCluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DocdbAwsUpboundIoV1beta1GlobalClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProvider

    initProvider?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecWriteConnectionSecretToRef


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProvider:
    r"""
    docdb aws upbound io v1beta1 global cluster spec for provider

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation.
    deletionProtection : bool, default is Undefined, optional
        If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
    engineVersion : str, default is Undefined, optional
        Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sourceDbClusterIdentifier : str, default is Undefined, optional
        Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation.
    sourceDbClusterIdentifierRef : DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRef, default is Undefined, optional
        source db cluster identifier ref
    sourceDbClusterIdentifierSelector : DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelector, default is Undefined, optional
        source db cluster identifier selector
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
    """


    databaseName?: str

    deletionProtection?: bool

    engine?: str

    engineVersion?: str

    globalClusterIdentifier?: str

    region: str

    sourceDbClusterIdentifier?: str

    sourceDbClusterIdentifierRef?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRef

    sourceDbClusterIdentifierSelector?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelector

    storageEncrypted?: bool


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRef:
    r"""
    Reference to a Cluster in docdb to populate sourceDbClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRefPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelector:
    r"""
    Selector for a Cluster in docdb to populate sourceDbClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelectorPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecForProviderSourceDbClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation.
    deletionProtection : bool, default is Undefined, optional
        If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
    engineVersion : str, default is Undefined, optional
        Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier.
    sourceDbClusterIdentifier : str, default is Undefined, optional
        Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation.
    sourceDbClusterIdentifierRef : DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRef, default is Undefined, optional
        source db cluster identifier ref
    sourceDbClusterIdentifierSelector : DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelector, default is Undefined, optional
        source db cluster identifier selector
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
    """


    databaseName?: str

    deletionProtection?: bool

    engine?: str

    engineVersion?: str

    globalClusterIdentifier?: str

    sourceDbClusterIdentifier?: str

    sourceDbClusterIdentifierRef?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRef

    sourceDbClusterIdentifierSelector?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelector

    storageEncrypted?: bool


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRef:
    r"""
    Reference to a Cluster in docdb to populate sourceDbClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRefPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelector:
    r"""
    Selector for a Cluster in docdb to populate sourceDbClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelectorPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecInitProviderSourceDbClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRefPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DocdbAwsUpboundIoV1beta1GlobalClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DocdbAwsUpboundIoV1beta1GlobalClusterStatus:
    r"""
    GlobalClusterStatus defines the observed state of GlobalCluster.

    Attributes
    ----------
    atProvider : DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DocdbAwsUpboundIoV1beta1GlobalClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProvider

    conditions?: [DocdbAwsUpboundIoV1beta1GlobalClusterStatusConditionsItems0]

    observedGeneration?: int


schema DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProvider:
    r"""
    docdb aws upbound io v1beta1 global cluster status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Global Cluster Amazon Resource Name (ARN)
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation.
    deletionProtection : bool, default is Undefined, optional
        If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Current Valid values: docdb. Defaults to docdb. Conflicts with source_db_cluster_identifier.
    engineVersion : str, default is Undefined, optional
        Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier.
    globalClusterMembers : [DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProviderGlobalClusterMembersItems0], default is Undefined, optional
        Set of objects containing Global Cluster members.
    globalClusterResourceId : str, default is Undefined, optional
        AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
    id : str, default is Undefined, optional
        DocumentDB Global Cluster ID.
    sourceDbClusterIdentifier : str, default is Undefined, optional
        Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation.
    status : str, default is Undefined, optional
        status
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false unless source_db_cluster_identifier is specified and encrypted.
    """


    arn?: str

    databaseName?: str

    deletionProtection?: bool

    engine?: str

    engineVersion?: str

    globalClusterIdentifier?: str

    globalClusterMembers?: [DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProviderGlobalClusterMembersItems0]

    globalClusterResourceId?: str

    id?: str

    sourceDbClusterIdentifier?: str

    status?: str

    storageEncrypted?: bool


schema DocdbAwsUpboundIoV1beta1GlobalClusterStatusAtProviderGlobalClusterMembersItems0:
    r"""
    docdb aws upbound io v1beta1 global cluster status at provider global cluster members items0

    Attributes
    ----------
    dbClusterArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of member DB Cluster.
    isWriter : bool, default is Undefined, optional
        Whether the member is the primary DB Cluster.
    """


    dbClusterArn?: str

    isWriter?: bool


schema DocdbAwsUpboundIoV1beta1GlobalClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


