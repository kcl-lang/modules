"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    r"""
    Application is the Schema for the Applications API. Manages a Kinesis Analytics v2 Application.

    Attributes
    ----------
    apiVersion : str, default is "kinesisanalyticsv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpec, default is Undefined, required
        spec
    status : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "kinesisanalyticsv2.aws.upbound.io/v1beta1" = "kinesisanalyticsv2.aws.upbound.io/v1beta1"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpec

    status?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatus


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpec:
    r"""
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProvider

    initProvider?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProvider:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider

    Attributes
    ----------
    applicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0], default is Undefined, optional
        The application's configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    cloudwatchLoggingOptions : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0], default is Undefined, optional
        A CloudWatch log stream to monitor application configuration errors.
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    serviceExecutionRoleRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRef, default is Undefined, optional
        service execution role ref
    serviceExecutionRoleSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelector, default is Undefined, optional
        service execution role selector
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0]

    applicationMode?: str

    cloudwatchLoggingOptions?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0]

    description?: str

    forceStop?: bool

    region: str

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    serviceExecutionRoleRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRef

    serviceExecutionRoleSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelector

    startApplication?: bool

    tags?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0

    Attributes
    ----------
    applicationCodeConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0], default is Undefined, optional
        The code location and type parameters for the application.
    applicationSnapshotConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0], default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based application.
    environmentProperties : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0], default is Undefined, optional
        Describes execution properties for a Flink-based application.
    flinkApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a Flink-based application.
    runConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0], default is Undefined, optional
        Describes the starting properties for a Flink-based application.
    sqlApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a SQL-based application.
    vpcConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0], default is Undefined, optional
        The VPC configuration of a Flink-based application.
    """


    applicationCodeConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0]

    applicationSnapshotConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0]

    environmentProperties?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0]

    flinkApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0]

    runConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0]

    sqlApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0]

    vpcConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 application code configuration items0

    Attributes
    ----------
    codeContent : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0], default is Undefined, optional
        The location and type of the application code.
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0]

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 application code configuration items0 code content items0

    Attributes
    ----------
    s3ContentLocation : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0], default is Undefined, optional
        Information about the Amazon S3 bucket containing the application code.
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0]

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 application code configuration items0 code content items0 s3 content location items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    fileKeyRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector

    fileKey?: str

    fileKeyRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef

    fileKeySelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 application snapshot configuration items0

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 environment properties items0

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 environment properties items0 property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 flink application configuration items0

    Attributes
    ----------
    checkpointConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0], default is Undefined, optional
        Describes an application's checkpointing configuration.
    monitoringConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0], default is Undefined, optional
        Describes configuration parameters for CloudWatch logging for an application.
    parallelismConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0], default is Undefined, optional
        Describes parameters for how an application executes multiple tasks simultaneously.
    """


    checkpointConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0]

    monitoringConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0]

    parallelismConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 flink application configuration items0 checkpoint configuration items0

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 flink application configuration items0 monitoring configuration items0

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 flink application configuration items0 parallelism configuration items0

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 run configuration items0

    Attributes
    ----------
    applicationRestoreConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0], default is Undefined, optional
        The restore behavior of a restarting application.
    flinkRunConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0], default is Undefined, optional
        The starting parameters for a Flink-based Kinesis Data Analytics application.
    """


    applicationRestoreConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0]

    flinkRunConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 run configuration items0 application restore configuration items0

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 run configuration items0 flink run configuration items0

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0

    Attributes
    ----------
    input : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0], default is Undefined, optional
        The input stream used by the application.
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0], default is Undefined, optional
        The reference data source used by the application.
    """


    input?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0]

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0]

    referenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0

    Attributes
    ----------
    inputParallelism : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0], default is Undefined, optional
        Describes the number of in-application streams to create.
    inputProcessingConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0], default is Undefined, optional
        The input processing configuration for the input.
        An input processor transforms records as they are received from the stream, before the application's SQL code executes.
    inputSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
    kinesisStreamsInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inputParallelism?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0]

    inputProcessingConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0]

    inputSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0]

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0]

    kinesisStreamsInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0]

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input parallelism items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0

    Attributes
    ----------
    inputLambdaProcessor : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0], default is Undefined, optional
        Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
    """


    inputLambdaProcessor?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0 input lambda processor items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 kinesis firehose input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 input items0 kinesis streams input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 output items0

    Attributes
    ----------
    destinationSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0], default is Undefined, optional
        Describes the data format when records are written to the destination.
    kinesisFirehoseOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0], default is Undefined, optional
        Identifies a Kinesis Data Firehose delivery stream as the destination.
    kinesisStreamsOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0], default is Undefined, optional
        Identifies a Kinesis data stream as the destination.
    lambdaOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0], default is Undefined, optional
        Identifies a Lambda function as the destination.
    name : str, default is Undefined, optional
        The name of the application.
    """


    destinationSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0]

    kinesisFirehoseOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0]

    kinesisStreamsOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0]

    lambdaOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0]

    name?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 output items0 destination schema items0

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 output items0 kinesis firehose output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 output items0 kinesis streams output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 output items0 lambda output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef:
    r"""
    Reference to a Function in lambda to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector:
    r"""
    Selector for a Function in lambda to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0

    Attributes
    ----------
    referenceSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
    s3ReferenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0], default is Undefined, optional
        Identifies the S3 bucket and object that contains the reference data.
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0]

    s3ReferenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0]

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 SQL application configuration items0 reference data source items0 s3 reference data source items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider application configuration items0 vpc configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    securityGroupIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    subnetIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec for provider cloudwatch logging options items0

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    logStreamArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRef

    logStreamArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecForProviderServiceExecutionRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0], default is Undefined, optional
        The application's configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    cloudwatchLoggingOptions : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0], default is Undefined, optional
        A CloudWatch log stream to monitor application configuration errors.
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    serviceExecutionRoleRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRef, default is Undefined, optional
        service execution role ref
    serviceExecutionRoleSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelector, default is Undefined, optional
        service execution role selector
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0]

    applicationMode?: str

    cloudwatchLoggingOptions?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0]

    description?: str

    forceStop?: bool

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    serviceExecutionRoleRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRef

    serviceExecutionRoleSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelector

    startApplication?: bool

    tags?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0

    Attributes
    ----------
    applicationCodeConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0], default is Undefined, optional
        The code location and type parameters for the application.
    applicationSnapshotConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0], default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based application.
    environmentProperties : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0], default is Undefined, optional
        Describes execution properties for a Flink-based application.
    flinkApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a Flink-based application.
    runConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0], default is Undefined, optional
        Describes the starting properties for a Flink-based application.
    sqlApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a SQL-based application.
    vpcConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0], default is Undefined, optional
        The VPC configuration of a Flink-based application.
    """


    applicationCodeConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0]

    applicationSnapshotConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0]

    environmentProperties?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0]

    flinkApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0]

    runConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0]

    sqlApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0]

    vpcConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 application code configuration items0

    Attributes
    ----------
    codeContent : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0], default is Undefined, optional
        The location and type of the application code.
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0]

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 application code configuration items0 code content items0

    Attributes
    ----------
    s3ContentLocation : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0], default is Undefined, optional
        Information about the Amazon S3 bucket containing the application code.
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0]

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 application code configuration items0 code content items0 s3 content location items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    fileKeyRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector

    fileKey?: str

    fileKeyRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef

    fileKeySelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0FileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 application snapshot configuration items0

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 environment properties items0

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 environment properties items0 property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 flink application configuration items0

    Attributes
    ----------
    checkpointConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0], default is Undefined, optional
        Describes an application's checkpointing configuration.
    monitoringConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0], default is Undefined, optional
        Describes configuration parameters for CloudWatch logging for an application.
    parallelismConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0], default is Undefined, optional
        Describes parameters for how an application executes multiple tasks simultaneously.
    """


    checkpointConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0]

    monitoringConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0]

    parallelismConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 flink application configuration items0 checkpoint configuration items0

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 flink application configuration items0 monitoring configuration items0

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 flink application configuration items0 parallelism configuration items0

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 run configuration items0

    Attributes
    ----------
    applicationRestoreConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0], default is Undefined, optional
        The restore behavior of a restarting application.
    flinkRunConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0], default is Undefined, optional
        The starting parameters for a Flink-based Kinesis Data Analytics application.
    """


    applicationRestoreConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0]

    flinkRunConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 run configuration items0 application restore configuration items0

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 run configuration items0 flink run configuration items0

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0

    Attributes
    ----------
    input : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0], default is Undefined, optional
        The input stream used by the application.
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0], default is Undefined, optional
        The reference data source used by the application.
    """


    input?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0]

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0]

    referenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0

    Attributes
    ----------
    inputParallelism : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0], default is Undefined, optional
        Describes the number of in-application streams to create.
    inputProcessingConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0], default is Undefined, optional
        The input processing configuration for the input.
        An input processor transforms records as they are received from the stream, before the application's SQL code executes.
    inputSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
    kinesisStreamsInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inputParallelism?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0]

    inputProcessingConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0]

    inputSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0]

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0]

    kinesisStreamsInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0]

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input parallelism items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0

    Attributes
    ----------
    inputLambdaProcessor : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0], default is Undefined, optional
        Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
    """


    inputLambdaProcessor?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0 input lambda processor items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 kinesis firehose input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 input items0 kinesis streams input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRef:
    r"""
    Reference to a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelector:
    r"""
    Selector for a Stream in kinesis to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 output items0

    Attributes
    ----------
    destinationSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0], default is Undefined, optional
        Describes the data format when records are written to the destination.
    kinesisFirehoseOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0], default is Undefined, optional
        Identifies a Kinesis Data Firehose delivery stream as the destination.
    kinesisStreamsOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0], default is Undefined, optional
        Identifies a Kinesis data stream as the destination.
    lambdaOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0], default is Undefined, optional
        Identifies a Lambda function as the destination.
    name : str, default is Undefined, optional
        The name of the application.
    """


    destinationSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0]

    kinesisFirehoseOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0]

    kinesisStreamsOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0]

    lambdaOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0]

    name?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 output items0 destination schema items0

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 output items0 kinesis firehose output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 output items0 kinesis streams output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 output items0 lambda output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    resourceArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    resourceArn?: str

    resourceArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef

    resourceArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRef:
    r"""
    Reference to a Function in lambda to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelector:
    r"""
    Selector for a Function in lambda to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0ResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0

    Attributes
    ----------
    referenceSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
    s3ReferenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0], default is Undefined, optional
        Identifies the S3 bucket and object that contains the reference data.
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0]

    s3ReferenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0]

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 SQL application configuration items0 reference data source items0 s3 reference data source items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    bucketArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    bucketArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef

    bucketArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider application configuration items0 vpc configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    securityGroupIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    subnetIdsRefs : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderApplicationConfigurationItems0VpcConfigurationItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application spec init provider cloudwatch logging options items0

    Attributes
    ----------
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    logStreamArnRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRef, default is Undefined, optional
        log stream arn ref
    logStreamArnSelector : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector, default is Undefined, optional
        log stream arn selector
    """


    logStreamArn?: str

    logStreamArnRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRef

    logStreamArnSelector?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRef:
    r"""
    Reference to a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelector:
    r"""
    Selector for a Stream in cloudwatchlogs to populate logStreamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderCloudwatchLoggingOptionsItems0LogStreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecInitProviderServiceExecutionRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatus:
    r"""
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProvider

    conditions?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusConditionsItems0]

    observedGeneration?: int


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProvider:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider

    Attributes
    ----------
    applicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0], default is Undefined, optional
        The application's configuration
    applicationMode : str, default is Undefined, optional
        The application's mode. Valid values are STREAMING, INTERACTIVE.
    arn : str, default is Undefined, optional
        The ARN of the application.
    cloudwatchLoggingOptions : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderCloudwatchLoggingOptionsItems0], default is Undefined, optional
        A CloudWatch log stream to monitor application configuration errors.
    createTimestamp : str, default is Undefined, optional
        The current timestamp when the application was created.
    description : str, default is Undefined, optional
        A summary description of the application.
    forceStop : bool, default is Undefined, optional
        Whether to force stop an unresponsive Flink-based application.
    id : str, default is Undefined, optional
        The application identifier.
    lastUpdateTimestamp : str, default is Undefined, optional
        The current timestamp when the application was last updated.
    runtimeEnvironment : str, default is Undefined, optional
        The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18.
    serviceExecutionRole : str, default is Undefined, optional
        The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
    startApplication : bool, default is Undefined, optional
        Whether to start or stop the application.
    status : str, default is Undefined, optional
        The status of the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    versionId : float, default is Undefined, optional
        The current application version. Kinesis Data Analytics updates the version_id each time the application is updated.
    """


    applicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0]

    applicationMode?: str

    arn?: str

    cloudwatchLoggingOptions?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderCloudwatchLoggingOptionsItems0]

    createTimestamp?: str

    description?: str

    forceStop?: bool

    id?: str

    lastUpdateTimestamp?: str

    runtimeEnvironment?: str

    serviceExecutionRole?: str

    startApplication?: bool

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    versionId?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0

    Attributes
    ----------
    applicationCodeConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0], default is Undefined, optional
        The code location and type parameters for the application.
    applicationSnapshotConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0], default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based application.
    environmentProperties : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0], default is Undefined, optional
        Describes execution properties for a Flink-based application.
    flinkApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a Flink-based application.
    runConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0], default is Undefined, optional
        Describes the starting properties for a Flink-based application.
    sqlApplicationConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0], default is Undefined, optional
        The configuration of a SQL-based application.
    vpcConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0VpcConfigurationItems0], default is Undefined, optional
        The VPC configuration of a Flink-based application.
    """


    applicationCodeConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0]

    applicationSnapshotConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0]

    environmentProperties?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0]

    flinkApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0]

    runConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0]

    sqlApplicationConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0]

    vpcConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0VpcConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 application code configuration items0

    Attributes
    ----------
    codeContent : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0], default is Undefined, optional
        The location and type of the application code.
    codeContentType : str, default is Undefined, optional
        Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.
    """


    codeContent?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0]

    codeContentType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 application code configuration items0 code content items0

    Attributes
    ----------
    s3ContentLocation : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0], default is Undefined, optional
        Information about the Amazon S3 bucket containing the application code.
    textContent : str, default is Undefined, optional
        The text-format code for the application.
    """


    s3ContentLocation?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0]

    textContent?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationCodeConfigurationItems0CodeContentItems0S3ContentLocationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 application code configuration items0 code content items0 s3 content location items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    objectVersion : str, default is Undefined, optional
        The version of the object containing the application code.
    """


    bucketArn?: str

    fileKey?: str

    objectVersion?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0ApplicationSnapshotConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 application snapshot configuration items0

    Attributes
    ----------
    snapshotsEnabled : bool, default is Undefined, optional
        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """


    snapshotsEnabled?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 environment properties items0

    Attributes
    ----------
    propertyGroup : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0], default is Undefined, optional
        Describes the execution property groups.
    """


    propertyGroup?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0EnvironmentPropertiesItems0PropertyGroupItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 environment properties items0 property group items0

    Attributes
    ----------
    propertyGroupId : str, default is Undefined, optional
        The key of the application execution property key-value map.
    propertyMap : {str:str}, default is Undefined, optional
        Application execution property key-value map.
    """


    propertyGroupId?: str

    propertyMap?: {str:str}


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 flink application configuration items0

    Attributes
    ----------
    checkpointConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0], default is Undefined, optional
        Describes an application's checkpointing configuration.
    monitoringConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0], default is Undefined, optional
        Describes configuration parameters for CloudWatch logging for an application.
    parallelismConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0], default is Undefined, optional
        Describes parameters for how an application executes multiple tasks simultaneously.
    """


    checkpointConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0]

    monitoringConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0]

    parallelismConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0CheckpointConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 flink application configuration items0 checkpoint configuration items0

    Attributes
    ----------
    checkpointInterval : float, default is Undefined, optional
        Describes the interval in milliseconds between checkpoint operations.
    checkpointingEnabled : bool, default is Undefined, optional
        Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    minPauseBetweenCheckpoints : float, default is Undefined, optional
        Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
    """


    checkpointInterval?: float

    checkpointingEnabled?: bool

    configurationType?: str

    minPauseBetweenCheckpoints?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0MonitoringConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 flink application configuration items0 monitoring configuration items0

    Attributes
    ----------
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    logLevel : str, default is Undefined, optional
        Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.
    metricsLevel : str, default is Undefined, optional
        Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.
    """


    configurationType?: str

    logLevel?: str

    metricsLevel?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0FlinkApplicationConfigurationItems0ParallelismConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 flink application configuration items0 parallelism configuration items0

    Attributes
    ----------
    autoScalingEnabled : bool, default is Undefined, optional
        Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
    configurationType : str, default is Undefined, optional
        Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:
    parallelism : float, default is Undefined, optional
        Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
    parallelismPerKpu : float, default is Undefined, optional
        Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
    """


    autoScalingEnabled?: bool

    configurationType?: str

    parallelism?: float

    parallelismPerKpu?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 run configuration items0

    Attributes
    ----------
    applicationRestoreConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0], default is Undefined, optional
        The restore behavior of a restarting application.
    flinkRunConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0], default is Undefined, optional
        The starting parameters for a Flink-based Kinesis Data Analytics application.
    """


    applicationRestoreConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0]

    flinkRunConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0ApplicationRestoreConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 run configuration items0 application restore configuration items0

    Attributes
    ----------
    applicationRestoreType : str, default is Undefined, optional
        Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.
    snapshotName : str, default is Undefined, optional
        The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.
    """


    applicationRestoreType?: str

    snapshotName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0RunConfigurationItems0FlinkRunConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 run configuration items0 flink run configuration items0

    Attributes
    ----------
    allowNonRestoredState : bool, default is Undefined, optional
        When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.
    """


    allowNonRestoredState?: bool


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0

    Attributes
    ----------
    input : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0], default is Undefined, optional
        The input stream used by the application.
    output : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0], default is Undefined, optional
        The destination streams used by the application.
    referenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0], default is Undefined, optional
        The reference data source used by the application.
    """


    input?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0]

    output?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0]

    referenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0

    Attributes
    ----------
    inAppStreamNames : [str], default is Undefined, optional
        in app stream names
    inputId : str, default is Undefined, optional
        The application identifier.
    inputParallelism : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0], default is Undefined, optional
        Describes the number of in-application streams to create.
    inputProcessingConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0], default is Undefined, optional
        The input processing configuration for the input.
        An input processor transforms records as they are received from the stream, before the application's SQL code executes.
    inputSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
    inputStartingPositionConfiguration : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0], default is Undefined, optional
        The point at which the application starts processing records from the streaming source.
    kinesisFirehoseInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
    kinesisStreamsInput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0], default is Undefined, optional
        If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
    namePrefix : str, default is Undefined, optional
        The name prefix to use when creating an in-application stream.
    """


    inAppStreamNames?: [str]

    inputId?: str

    inputParallelism?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0]

    inputProcessingConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0]

    inputSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0]

    inputStartingPositionConfiguration?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0]

    kinesisFirehoseInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0]

    kinesisStreamsInput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0]

    namePrefix?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputParallelismItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input parallelism items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of in-application streams to create.
    """


    count?: float


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0

    Attributes
    ----------
    inputLambdaProcessor : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0], default is Undefined, optional
        Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
    """


    inputLambdaProcessor?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputProcessingConfigurationItems0InputLambdaProcessorItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input processing configuration items0 input lambda processor items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0InputStartingPositionConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 input starting position configuration items0

    Attributes
    ----------
    inputStartingPosition : str, default is Undefined, optional
        The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.
    """


    inputStartingPosition?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisFirehoseInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 kinesis firehose input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0InputItems0KinesisStreamsInputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 input items0 kinesis streams input items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 output items0

    Attributes
    ----------
    destinationSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0], default is Undefined, optional
        Describes the data format when records are written to the destination.
    kinesisFirehoseOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0], default is Undefined, optional
        Identifies a Kinesis Data Firehose delivery stream as the destination.
    kinesisStreamsOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0], default is Undefined, optional
        Identifies a Kinesis data stream as the destination.
    lambdaOutput : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0], default is Undefined, optional
        Identifies a Lambda function as the destination.
    name : str, default is Undefined, optional
        The name of the application.
    outputId : str, default is Undefined, optional
        The application identifier.
    """


    destinationSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0]

    kinesisFirehoseOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0]

    kinesisStreamsOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0]

    lambdaOutput?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0]

    name?: str

    outputId?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0DestinationSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 output items0 destination schema items0

    Attributes
    ----------
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisFirehoseOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 output items0 kinesis firehose output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0KinesisStreamsOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 output items0 kinesis streams output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0OutputItems0LambdaOutputItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 output items0 lambda output items0

    Attributes
    ----------
    resourceArn : str, default is Undefined, optional
        The ARN of the Lambda function that operates on records in the stream.
    """


    resourceArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0

    Attributes
    ----------
    referenceId : str, default is Undefined, optional
        The application identifier.
    referenceSchema : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0], default is Undefined, optional
        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
    s3ReferenceDataSource : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0], default is Undefined, optional
        Identifies the S3 bucket and object that contains the reference data.
    tableName : str, default is Undefined, optional
        The name of the in-application table to create.
    """


    referenceId?: str

    referenceSchema?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0]

    s3ReferenceDataSource?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0]

    tableName?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0

    Attributes
    ----------
    recordColumn : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0], default is Undefined, optional
        Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
    recordEncoding : str, default is Undefined, optional
        Specifies the encoding of the records in the streaming source. For example, UTF-8.
    recordFormat : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0], default is Undefined, optional
        Specifies the format of the records on the streaming source.
    """


    recordColumn?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0]

    recordEncoding?: str

    recordFormat?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordColumnItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record column items0

    Attributes
    ----------
    mapping : str, default is Undefined, optional
        A reference to the data element in the streaming input or the reference data source.
    name : str, default is Undefined, optional
        The name of the application.
    sqlType : str, default is Undefined, optional
        The type of column created in the in-application input stream or reference table.
    """


    mapping?: str

    name?: str

    sqlType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0

    Attributes
    ----------
    mappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0], default is Undefined, optional
        Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    recordFormatType : str, default is Undefined, optional
        The type of record format. Valid values: CSV, JSON.
    """


    mappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0]

    recordFormatType?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0

    Attributes
    ----------
    csvMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when the record format uses delimiters (for example, CSV).
    jsonMappingParameters : [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0], default is Undefined, optional
        Provides additional mapping information when JSON is the record format on the streaming source.
    """


    csvMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0]

    jsonMappingParameters?: [Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0]


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0CsvMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 csv mapping parameters items0

    Attributes
    ----------
    recordColumnDelimiter : str, default is Undefined, optional
        The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.
    recordRowDelimiter : str, default is Undefined, optional
        The row delimiter. For example, in a CSV format, \n is the typical row delimiter.
    """


    recordColumnDelimiter?: str

    recordRowDelimiter?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0ReferenceSchemaItems0RecordFormatItems0MappingParametersItems0JSONMappingParametersItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 reference schema items0 record format items0 mapping parameters items0 JSON mapping parameters items0

    Attributes
    ----------
    recordRowPath : str, default is Undefined, optional
        The path to the top-level parent that contains the records.
    """


    recordRowPath?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0SQLApplicationConfigurationItems0ReferenceDataSourceItems0S3ReferenceDataSourceItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 SQL application configuration items0 reference data source items0 s3 reference data source items0

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The ARN for the S3 bucket containing the application code.
    fileKey : str, default is Undefined, optional
        The file key for the object containing the application code.
    """


    bucketArn?: str

    fileKey?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderApplicationConfigurationItems0VpcConfigurationItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider application configuration items0 vpc configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The Security Group IDs used by the VPC configuration.
    subnetIds : [str], default is Undefined, optional
        The Subnet IDs used by the VPC configuration.
    vpcConfigurationId : str, default is Undefined, optional
        The application identifier.
    vpcId : str, default is Undefined, optional
        The application identifier.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcConfigurationId?: str

    vpcId?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusAtProviderCloudwatchLoggingOptionsItems0:
    r"""
    kinesisanalyticsv2 aws upbound io v1beta1 application status at provider cloudwatch logging options items0

    Attributes
    ----------
    cloudwatchLoggingOptionId : str, default is Undefined, optional
        The application identifier.
    logStreamArn : str, default is Undefined, optional
        The ARN of the CloudWatch log stream to receive application messages.
    """


    cloudwatchLoggingOptionId?: str

    logStreamArn?: str


schema Kinesisanalyticsv2AwsUpboundIoV1beta1ApplicationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


