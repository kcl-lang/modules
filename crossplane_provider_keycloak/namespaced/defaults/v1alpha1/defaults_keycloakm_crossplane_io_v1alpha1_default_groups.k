"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DefaultGroups:
    r"""
    DefaultGroups is the Schema for the DefaultGroupss API.

    Attributes
    ----------
    apiVersion : str, default is "defaults.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DefaultGroups", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpec, default is Undefined, required
        spec
    status : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatus, default is Undefined, optional
        status
    """


    apiVersion: "defaults.keycloak.m.crossplane.io/v1alpha1" = "defaults.keycloak.m.crossplane.io/v1alpha1"

    kind: "DefaultGroups" = "DefaultGroups"

    metadata?: v1.ObjectMeta

    spec: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpec

    status?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatus


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpec:
    r"""
    DefaultGroupsSpec defines the desired state of DefaultGroups

    Attributes
    ----------
    forProvider : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProvider, default is Undefined, required
        for provider
    initProvider : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProvider

    initProvider?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecProviderConfigRef

    writeConnectionSecretToRef?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecWriteConnectionSecretToRef


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProvider:
    r"""
    defaults keycloakm crossplane io v1alpha1 default groups spec for provider

    Attributes
    ----------
    groupIds : [str], default is Undefined, optional
        A set of group ids that should be default groups on the realm referenced by realm_id.
    groupIdsRefs : [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0], default is Undefined, optional
        References to Group in group to populate groupIds.
    groupIdsSelector : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelector, default is Undefined, optional
        group ids selector
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    realmIdRef : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    groupIds?: [str]

    groupIdsRefs?: [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0]

    groupIdsSelector?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelector

    realmId?: str

    realmIdRef?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRef

    realmIdSelector?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelector


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0:
    r"""
    A NamespacedReference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0Policy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelector:
    r"""
    Selector for a list of Group in group to populate groupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelectorPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRefPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelectorPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    groupIds : [str], default is Undefined, optional
        A set of group ids that should be default groups on the realm referenced by realm_id.
    groupIdsRefs : [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0], default is Undefined, optional
        References to Group in group to populate groupIds.
    groupIdsSelector : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelector, default is Undefined, optional
        group ids selector
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    realmIdRef : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    groupIds?: [str]

    groupIdsRefs?: [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0]

    groupIdsSelector?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelector

    realmId?: str

    realmIdRef?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRef

    realmIdSelector?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelector


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0:
    r"""
    A NamespacedReference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0Policy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelector:
    r"""
    Selector for a list of Group in group to populate groupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelectorPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRefPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelectorPolicy


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatus:
    r"""
    DefaultGroupsStatus defines the observed state of DefaultGroups.

    Attributes
    ----------
    atProvider : DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusAtProvider

    conditions?: [DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusConditionsItems0]

    observedGeneration?: int


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusAtProvider:
    r"""
    defaults keycloakm crossplane io v1alpha1 default groups status at provider

    Attributes
    ----------
    groupIds : [str], default is Undefined, optional
        A set of group ids that should be default groups on the realm referenced by realm_id.
    id : str, default is Undefined, optional
        id
    realmId : str, default is Undefined, optional
        The realm this group exists in.
    """


    groupIds?: [str]

    id?: str

    realmId?: str


schema DefaultsKeycloakmCrossplaneIoV1alpha1DefaultGroupsStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


