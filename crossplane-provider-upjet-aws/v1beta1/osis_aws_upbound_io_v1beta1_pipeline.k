"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Pipeline:
    r"""
    Pipeline is the Schema for the Pipelines API.

    Attributes
    ----------
    apiVersion : str, default is "osis.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Pipeline", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OsisAwsUpboundIoV1beta1PipelineSpec, default is Undefined, required
        spec
    status : OsisAwsUpboundIoV1beta1PipelineStatus, default is Undefined, optional
        status
    """


    apiVersion: "osis.aws.upbound.io/v1beta1" = "osis.aws.upbound.io/v1beta1"

    kind: "Pipeline" = "Pipeline"

    metadata?: v1.ObjectMeta

    spec: OsisAwsUpboundIoV1beta1PipelineSpec

    status?: OsisAwsUpboundIoV1beta1PipelineStatus


schema OsisAwsUpboundIoV1beta1PipelineSpec:
    r"""
    PipelineSpec defines the desired state of Pipeline

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OsisAwsUpboundIoV1beta1PipelineSpecForProvider, default is Undefined, required
        for provider
    initProvider : OsisAwsUpboundIoV1beta1PipelineSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OsisAwsUpboundIoV1beta1PipelineSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OsisAwsUpboundIoV1beta1PipelineSpecForProvider

    initProvider?: OsisAwsUpboundIoV1beta1PipelineSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRef

    publishConnectionDetailsTo?: OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OsisAwsUpboundIoV1beta1PipelineSpecWriteConnectionSecretToRef


schema OsisAwsUpboundIoV1beta1PipelineSpecForProvider:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider

    Attributes
    ----------
    bufferOptions : [OsisAwsUpboundIoV1beta1PipelineSpecForProviderBufferOptionsItems0], default is Undefined, optional
        Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.
    encryptionAtRestOptions : [OsisAwsUpboundIoV1beta1PipelineSpecForProviderEncryptionAtRestOptionsItems0], default is Undefined, optional
        Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.
    logPublishingOptions : [OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0], default is Undefined, optional
        Key-value pairs to configure log publishing. See log_publishing_options below.
    maxUnits : float, default is Undefined, optional
        The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
    minUnits : float, default is Undefined, optional
        The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
    pipelineConfigurationBody : str, default is Undefined, optional
        The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcOptions : [OsisAwsUpboundIoV1beta1PipelineSpecForProviderVpcOptionsItems0], default is Undefined, optional
        Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.
    """


    bufferOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecForProviderBufferOptionsItems0]

    encryptionAtRestOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecForProviderEncryptionAtRestOptionsItems0]

    logPublishingOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0]

    maxUnits?: float

    minUnits?: float

    pipelineConfigurationBody?: str

    region: str

    tags?: {str:str}

    vpcOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecForProviderVpcOptionsItems0]


schema OsisAwsUpboundIoV1beta1PipelineSpecForProviderBufferOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider buffer options items0

    Attributes
    ----------
    persistentBufferEnabled : bool, default is Undefined, optional
        Whether persistent buffering should be enabled.
    """


    persistentBufferEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineSpecForProviderEncryptionAtRestOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider encryption at rest options items0

    Attributes
    ----------
    kmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
    """


    kmsKeyArn?: str


schema OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogDestination : [OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0], default is Undefined, optional
        The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.
    isLoggingEnabled : bool, default is Undefined, optional
        Whether logs should be published.
    """


    cloudwatchLogDestination?: [OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0]

    isLoggingEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineSpecForProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider log publishing options items0 cloudwatch log destination items0

    Attributes
    ----------
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
    """


    logGroup?: str


schema OsisAwsUpboundIoV1beta1PipelineSpecForProviderVpcOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec for provider vpc options items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups associated with the VPC endpoint.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs associated with the VPC endpoint.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bufferOptions : [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderBufferOptionsItems0], default is Undefined, optional
        Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.
    encryptionAtRestOptions : [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderEncryptionAtRestOptionsItems0], default is Undefined, optional
        Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.
    logPublishingOptions : [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0], default is Undefined, optional
        Key-value pairs to configure log publishing. See log_publishing_options below.
    maxUnits : float, default is Undefined, optional
        The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
    minUnits : float, default is Undefined, optional
        The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
    pipelineConfigurationBody : str, default is Undefined, optional
        The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcOptions : [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderVpcOptionsItems0], default is Undefined, optional
        Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.
    """


    bufferOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderBufferOptionsItems0]

    encryptionAtRestOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderEncryptionAtRestOptionsItems0]

    logPublishingOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0]

    maxUnits?: float

    minUnits?: float

    pipelineConfigurationBody?: str

    tags?: {str:str}

    vpcOptions?: [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderVpcOptionsItems0]


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProviderBufferOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec init provider buffer options items0

    Attributes
    ----------
    persistentBufferEnabled : bool, default is Undefined, optional
        Whether persistent buffering should be enabled.
    """


    persistentBufferEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProviderEncryptionAtRestOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec init provider encryption at rest options items0

    Attributes
    ----------
    kmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
    """


    kmsKeyArn?: str


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec init provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogDestination : [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0], default is Undefined, optional
        The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.
    isLoggingEnabled : bool, default is Undefined, optional
        Whether logs should be published.
    """


    cloudwatchLogDestination?: [OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0]

    isLoggingEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec init provider log publishing options items0 cloudwatch log destination items0

    Attributes
    ----------
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
    """


    logGroup?: str


schema OsisAwsUpboundIoV1beta1PipelineSpecInitProviderVpcOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline spec init provider vpc options items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups associated with the VPC endpoint.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs associated with the VPC endpoint.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRefPolicy


schema OsisAwsUpboundIoV1beta1PipelineSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRef

    metadata?: OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToMetadata

    name: str


schema OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRefPolicy


schema OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OsisAwsUpboundIoV1beta1PipelineSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OsisAwsUpboundIoV1beta1PipelineSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OsisAwsUpboundIoV1beta1PipelineStatus:
    r"""
    PipelineStatus defines the observed state of Pipeline.

    Attributes
    ----------
    atProvider : OsisAwsUpboundIoV1beta1PipelineStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OsisAwsUpboundIoV1beta1PipelineStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OsisAwsUpboundIoV1beta1PipelineStatusAtProvider

    conditions?: [OsisAwsUpboundIoV1beta1PipelineStatusConditionsItems0]

    observedGeneration?: int


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProvider:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider

    Attributes
    ----------
    bufferOptions : [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderBufferOptionsItems0], default is Undefined, optional
        Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.
    encryptionAtRestOptions : [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderEncryptionAtRestOptionsItems0], default is Undefined, optional
        Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.
    id : str, default is Undefined, optional
        Unique identifier for the pipeline.
    ingestEndpointUrls : [str], default is Undefined, optional
        The list of ingestion endpoints for the pipeline, which you can send data to.
    logPublishingOptions : [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0], default is Undefined, optional
        Key-value pairs to configure log publishing. See log_publishing_options below.
    maxUnits : float, default is Undefined, optional
        The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
    minUnits : float, default is Undefined, optional
        The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
    pipelineArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the pipeline.
    pipelineConfigurationBody : str, default is Undefined, optional
        The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    vpcOptions : [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderVpcOptionsItems0], default is Undefined, optional
        Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.
    """


    bufferOptions?: [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderBufferOptionsItems0]

    encryptionAtRestOptions?: [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderEncryptionAtRestOptionsItems0]

    id?: str

    ingestEndpointUrls?: [str]

    logPublishingOptions?: [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0]

    maxUnits?: float

    minUnits?: float

    pipelineArn?: str

    pipelineConfigurationBody?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcOptions?: [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderVpcOptionsItems0]


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProviderBufferOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider buffer options items0

    Attributes
    ----------
    persistentBufferEnabled : bool, default is Undefined, optional
        Whether persistent buffering should be enabled.
    """


    persistentBufferEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProviderEncryptionAtRestOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider encryption at rest options items0

    Attributes
    ----------
    kmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.
    """


    kmsKeyArn?: str


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogDestination : [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0], default is Undefined, optional
        The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.
    isLoggingEnabled : bool, default is Undefined, optional
        Whether logs should be published.
    """


    cloudwatchLogDestination?: [OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0]

    isLoggingEnabled?: bool


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProviderLogPublishingOptionsItems0CloudwatchLogDestinationItems0:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider log publishing options items0 cloudwatch log destination items0

    Attributes
    ----------
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.
    """


    logGroup?: str


schema OsisAwsUpboundIoV1beta1PipelineStatusAtProviderVpcOptionsItems0:
    r"""
    osis aws upbound io v1beta1 pipeline status at provider vpc options items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of security groups associated with the VPC endpoint.
    subnetIds : [str], default is Undefined, optional
        A list of subnet IDs associated with the VPC endpoint.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema OsisAwsUpboundIoV1beta1PipelineStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


