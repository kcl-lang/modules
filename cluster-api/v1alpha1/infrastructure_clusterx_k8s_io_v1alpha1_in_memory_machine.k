"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InMemoryMachine:
    r"""
    InMemoryMachine is the schema for the in-memory machine API.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InMemoryMachine", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1alpha1" = "infrastructure.cluster.x-k8s.io/v1alpha1"

    kind: "InMemoryMachine" = "InMemoryMachine"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpec

    status?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatus


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpec:
    r"""
    InMemoryMachineSpec defines the desired state of InMemoryMachine.

    Attributes
    ----------
    behaviour : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviour, default is Undefined, optional
        behaviour
    providerID : str, default is Undefined, optional
        ProviderID will be the container name in ProviderID format (in-memory:////<name>)
    """


    behaviour?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviour

    providerID?: str


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviour:
    r"""
    Behaviour of the InMemoryMachine; this will allow to make a simulation more alike to real use cases
    e.g. by defining the duration of the provisioning phase mimicking the performances of the target infrastructure.

    Attributes
    ----------
    apiServer : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServer, default is Undefined, optional
        api server
    etcd : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcd, default is Undefined, optional
        etcd
    node : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNode, default is Undefined, optional
        node
    vm : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVM, default is Undefined, optional
        vm
    """


    apiServer?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServer

    etcd?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcd

    node?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNode

    vm?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVM


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServer:
    r"""
    APIServer defines the behaviour of the APIServer hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServerProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServerProvisioning


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourAPIServerProvisioning:
    r"""
    Provisioning defines variables influencing how the APIServer hosted on the InMemoryMachine is going to be provisioned.
    NOTE: APIServer provisioning includes all the steps from starting the static Pod to the Pod become ready and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        StartupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        StartupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcd:
    r"""
    Etcd defines the behaviour of the etcd member hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcdProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcdProvisioning


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourEtcdProvisioning:
    r"""
    Provisioning defines variables influencing how the etcd member hosted on the InMemoryMachine is going to be provisioned.
    NOTE: Etcd provisioning includes all the steps from starting the static Pod to the Pod become ready and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        StartupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        StartupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNode:
    r"""
    Node defines the behaviour of the Node (the kubelet) hosted on the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNodeProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNodeProvisioning


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourNodeProvisioning:
    r"""
    Provisioning defines variables influencing how the Node (the kubelet) hosted on the InMemoryMachine is going to be provisioned.
    NOTE: Node provisioning includes all the steps from starting kubelet to the node become ready, get a provider ID, and being registered in K8s.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        StartupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        StartupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVM:
    r"""
    VM defines the behaviour of the VM implementing the InMemoryMachine.

    Attributes
    ----------
    provisioning : InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVMProvisioning, default is Undefined, optional
        provisioning
    """


    provisioning?: InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVMProvisioning


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineSpecBehaviourVMProvisioning:
    r"""
    Provisioning defines variables influencing how the VM implementing the InMemoryMachine is going to be provisioned.
    NOTE: VM provisioning includes all the steps from creation to power-on.

    Attributes
    ----------
    startupDuration : str, default is Undefined, required
        StartupDuration defines the duration of the object provisioning phase.
    startupJitter : str, default is Undefined, optional
        StartupJitter adds some randomness on StartupDuration; the actual duration will be StartupDuration plus an additional
        amount chosen uniformly at random from the interval between zero and `StartupJitter*StartupDuration`.
        NOTE: this is modeled as string because the usage of float is highly discouraged, as support for them varies across languages.
    """


    startupDuration: str

    startupJitter?: str


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatus:
    r"""
    InMemoryMachineStatus defines the observed state of InMemoryMachine.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the InMemoryMachine.
    ready : bool, default is Undefined, optional
        Ready denotes that the machine is ready
    """


    conditions?: [InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatusConditionsItems0]

    ready?: bool


schema InfrastructureClusterxK8sIoV1alpha1InMemoryMachineStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


