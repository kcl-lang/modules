"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DataLakeSettings:
    r"""
    DataLakeSettings is the Schema for the DataLakeSettingss API. Manages data lake administrators and default database and table permissions

    Attributes
    ----------
    apiVersion : str, default is "lakeformation.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DataLakeSettings", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpec, default is Undefined, required
        spec
    status : LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatus, default is Undefined, optional
        status
    """


    apiVersion: "lakeformation.aws.upbound.io/v1beta1" = "lakeformation.aws.upbound.io/v1beta1"

    kind: "DataLakeSettings" = "DataLakeSettings"

    metadata?: v1.ObjectMeta

    spec: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpec

    status?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatus


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpec:
    r"""
    DataLakeSettingsSpec defines the desired state of DataLakeSettings

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProvider, default is Undefined, required
        for provider
    initProvider : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProvider

    initProvider?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRef

    publishConnectionDetailsTo?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecWriteConnectionSecretToRef


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProvider:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings spec for provider

    Attributes
    ----------
    admins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles).
    adminsRefs : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0], default is Undefined, optional
        References to User in iam to populate admins.
    adminsSelector : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelector, default is Undefined, optional
        admins selector
    allowExternalDataFiltering : bool, default is Undefined, optional
        Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
    allowFullTableExternalDataAccess : bool, default is Undefined, optional
        Whether to allow a third-party query engine to get data access credentials without session tags when a caller has full data access permissions.
    authorizedSessionTagValueList : [str], default is Undefined, optional
        Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
    catalogId : str, default is Undefined, optional
        –  Identifier for the Data Catalog. By default, the account ID.
    createDatabaseDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateDatabaseDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
    createTableDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateTableDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
    externalDataFilteringAllowList : [str], default is Undefined, optional
        A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
    parameters : {str:str}, default is Undefined, optional
        Key-value map of additional configuration. Valid values for the CROSS_ACCOUNT_VERSION key are "1", "2", "3", or "4". SET_CONTEXT is also returned with a value of TRUE. In a fresh account, prior to configuring, CROSS_ACCOUNT_VERSION is "1". Destroying this resource sets the CROSS_ACCOUNT_VERSION to "1".
    readOnlyAdmins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    trustedResourceOwners : [str], default is Undefined, optional
        owning account IDs that the caller's account can use to share their user access details (user ARNs).
    """


    admins?: [str]

    adminsRefs?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0]

    adminsSelector?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelector

    allowExternalDataFiltering?: bool

    allowFullTableExternalDataAccess?: bool

    authorizedSessionTagValueList?: [str]

    catalogId?: str

    createDatabaseDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateDatabaseDefaultPermissionsItems0]

    createTableDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateTableDefaultPermissionsItems0]

    externalDataFilteringAllowList?: [str]

    parameters?: {str:str}

    readOnlyAdmins?: [str]

    region: str

    trustedResourceOwners?: [str]


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0Policy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelector:
    r"""
    Selector for a list of User in iam to populate admins.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelectorPolicy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderAdminsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateDatabaseDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings spec for provider create database default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, DESCRIBE, and CREATE_TABLE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecForProviderCreateTableDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings spec for provider create table default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, and DESCRIBE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    admins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles).
    adminsRefs : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0], default is Undefined, optional
        References to User in iam to populate admins.
    adminsSelector : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelector, default is Undefined, optional
        admins selector
    allowExternalDataFiltering : bool, default is Undefined, optional
        Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
    allowFullTableExternalDataAccess : bool, default is Undefined, optional
        Whether to allow a third-party query engine to get data access credentials without session tags when a caller has full data access permissions.
    authorizedSessionTagValueList : [str], default is Undefined, optional
        Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
    catalogId : str, default is Undefined, optional
        –  Identifier for the Data Catalog. By default, the account ID.
    createDatabaseDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateDatabaseDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
    createTableDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateTableDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
    externalDataFilteringAllowList : [str], default is Undefined, optional
        A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
    parameters : {str:str}, default is Undefined, optional
        Key-value map of additional configuration. Valid values for the CROSS_ACCOUNT_VERSION key are "1", "2", "3", or "4". SET_CONTEXT is also returned with a value of TRUE. In a fresh account, prior to configuring, CROSS_ACCOUNT_VERSION is "1". Destroying this resource sets the CROSS_ACCOUNT_VERSION to "1".
    readOnlyAdmins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
    trustedResourceOwners : [str], default is Undefined, optional
        owning account IDs that the caller's account can use to share their user access details (user ARNs).
    """


    admins?: [str]

    adminsRefs?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0]

    adminsSelector?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelector

    allowExternalDataFiltering?: bool

    allowFullTableExternalDataAccess?: bool

    authorizedSessionTagValueList?: [str]

    catalogId?: str

    createDatabaseDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateDatabaseDefaultPermissionsItems0]

    createTableDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateTableDefaultPermissionsItems0]

    externalDataFilteringAllowList?: [str]

    parameters?: {str:str}

    readOnlyAdmins?: [str]

    trustedResourceOwners?: [str]


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0Policy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelector:
    r"""
    Selector for a list of User in iam to populate admins.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelectorPolicy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderAdminsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateDatabaseDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings spec init provider create database default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, DESCRIBE, and CREATE_TABLE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecInitProviderCreateTableDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings spec init provider create table default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, and DESCRIBE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRefPolicy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRef

    metadata?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToMetadata

    name: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRefPolicy


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatus:
    r"""
    DataLakeSettingsStatus defines the observed state of DataLakeSettings.

    Attributes
    ----------
    atProvider : LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProvider

    conditions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusConditionsItems0]

    observedGeneration?: int


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProvider:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings status at provider

    Attributes
    ----------
    admins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles).
    allowExternalDataFiltering : bool, default is Undefined, optional
        Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
    allowFullTableExternalDataAccess : bool, default is Undefined, optional
        Whether to allow a third-party query engine to get data access credentials without session tags when a caller has full data access permissions.
    authorizedSessionTagValueList : [str], default is Undefined, optional
        Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
    catalogId : str, default is Undefined, optional
        –  Identifier for the Data Catalog. By default, the account ID.
    createDatabaseDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateDatabaseDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
    createTableDefaultPermissions : [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateTableDefaultPermissionsItems0], default is Undefined, optional
        Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
    externalDataFilteringAllowList : [str], default is Undefined, optional
        A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
    id : str, default is Undefined, optional
        id
    parameters : {str:str}, default is Undefined, optional
        Key-value map of additional configuration. Valid values for the CROSS_ACCOUNT_VERSION key are "1", "2", "3", or "4". SET_CONTEXT is also returned with a value of TRUE. In a fresh account, prior to configuring, CROSS_ACCOUNT_VERSION is "1". Destroying this resource sets the CROSS_ACCOUNT_VERSION to "1".
    readOnlyAdmins : [str], default is Undefined, optional
        –  Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
    trustedResourceOwners : [str], default is Undefined, optional
        owning account IDs that the caller's account can use to share their user access details (user ARNs).
    """


    admins?: [str]

    allowExternalDataFiltering?: bool

    allowFullTableExternalDataAccess?: bool

    authorizedSessionTagValueList?: [str]

    catalogId?: str

    createDatabaseDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateDatabaseDefaultPermissionsItems0]

    createTableDefaultPermissions?: [LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateTableDefaultPermissionsItems0]

    externalDataFilteringAllowList?: [str]

    id?: str

    parameters?: {str:str}

    readOnlyAdmins?: [str]

    trustedResourceOwners?: [str]


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateDatabaseDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings status at provider create database default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, DESCRIBE, and CREATE_TABLE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusAtProviderCreateTableDefaultPermissionsItems0:
    r"""
    lakeformation aws upbound io v1beta1 data lake settings status at provider create table default permissions items0

    Attributes
    ----------
    permissions : [str], default is Undefined, optional
        List of permissions that are granted to the principal. Valid values may include ALL, SELECT, ALTER, DROP, DELETE, INSERT, and DESCRIBE. For more details, see Lake Formation Permissions Reference.
    principal : str, default is Undefined, optional
        Principal who is granted permissions. To enforce metadata and underlying data access control only by IAM on new databases and tables set principal to IAM_ALLOWED_PRINCIPALS and permissions to ["ALL"].
    """


    permissions?: [str]

    principal?: str


schema LakeformationAwsUpboundIoV1beta1DataLakeSettingsStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


