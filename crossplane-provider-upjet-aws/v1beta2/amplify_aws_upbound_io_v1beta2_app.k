"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema App:
    r"""
    App is the Schema for the Apps API. Provides an Amplify App resource.

    Attributes
    ----------
    apiVersion : str, default is "amplify.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "App", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AmplifyAwsUpboundIoV1beta2AppSpec, default is Undefined, required
        spec
    status : AmplifyAwsUpboundIoV1beta2AppStatus, default is Undefined, optional
        status
    """


    apiVersion: "amplify.aws.upbound.io/v1beta2" = "amplify.aws.upbound.io/v1beta2"

    kind: "App" = "App"

    metadata?: v1.ObjectMeta

    spec: AmplifyAwsUpboundIoV1beta2AppSpec

    status?: AmplifyAwsUpboundIoV1beta2AppStatus


schema AmplifyAwsUpboundIoV1beta2AppSpec:
    r"""
    AppSpec defines the desired state of App

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AmplifyAwsUpboundIoV1beta2AppSpecForProvider, default is Undefined, required
        for provider
    initProvider : AmplifyAwsUpboundIoV1beta2AppSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AmplifyAwsUpboundIoV1beta2AppSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AmplifyAwsUpboundIoV1beta2AppSpecForProvider

    initProvider?: AmplifyAwsUpboundIoV1beta2AppSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRef

    publishConnectionDetailsTo?: AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AmplifyAwsUpboundIoV1beta2AppSpecWriteConnectionSecretToRef


schema AmplifyAwsUpboundIoV1beta2AppSpecForProvider:
    r"""
    amplify aws upbound io v1beta2 app spec for provider

    Attributes
    ----------
    accessTokenSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecForProviderAccessTokenSecretRef, default is Undefined, optional
        access token secret ref
    autoBranchCreationConfig : AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfig, default is Undefined, optional
        auto branch creation config
    autoBranchCreationPatterns : [str], default is Undefined, optional
        Automated branch creation glob patterns for an Amplify app.
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecForProviderBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    buildSpec : str, default is Undefined, optional
        The build specification (build spec) for an Amplify app.
    cacheConfig : AmplifyAwsUpboundIoV1beta2AppSpecForProviderCacheConfig, default is Undefined, optional
        cache config
    customHeaders : str, default is Undefined, optional
        The custom HTTP headers for an Amplify app.
    customRule : [AmplifyAwsUpboundIoV1beta2AppSpecForProviderCustomRuleItems0], default is Undefined, optional
        Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.
    description : str, default is Undefined, optional
        Description for an Amplify app.
    enableAutoBranchCreation : bool, default is Undefined, optional
        Enables automated branch creation for an Amplify app.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
    enableBranchAutoBuild : bool, default is Undefined, optional
        Enables auto-building of branches for the Amplify App.
    enableBranchAutoDeletion : bool, default is Undefined, optional
        Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables map for an Amplify app.
    iamServiceRoleArn : str, default is Undefined, optional
        AWS Identity and Access Management (IAM) service role for an Amplify app.
    iamServiceRoleArnRef : AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRef, default is Undefined, optional
        iam service role arn ref
    iamServiceRoleArnSelector : AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelector, default is Undefined, optional
        iam service role arn selector
    name : str, default is Undefined, optional
        Name for an Amplify app.
    oauthTokenSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecForProviderOauthTokenSecretRef, default is Undefined, optional
        oauth token secret ref
    platform : str, default is Undefined, optional
        Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    repository : str, default is Undefined, optional
        Repository for an Amplify app.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accessTokenSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderAccessTokenSecretRef

    autoBranchCreationConfig?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfig

    autoBranchCreationPatterns?: [str]

    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderBasicAuthCredentialsSecretRef

    buildSpec?: str

    cacheConfig?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderCacheConfig

    customHeaders?: str

    customRule?: [AmplifyAwsUpboundIoV1beta2AppSpecForProviderCustomRuleItems0]

    description?: str

    enableAutoBranchCreation?: bool

    enableBasicAuth?: bool

    enableBranchAutoBuild?: bool

    enableBranchAutoDeletion?: bool

    environmentVariables?: {str:str}

    iamServiceRoleArn?: str

    iamServiceRoleArnRef?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRef

    iamServiceRoleArnSelector?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelector

    name?: str

    oauthTokenSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderOauthTokenSecretRef

    platform?: str

    region: str

    repository?: str

    tags?: {str:str}


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderAccessTokenSecretRef:
    r"""
    Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfig:
    r"""
    Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.

    Attributes
    ----------
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    buildSpec : str, default is Undefined, optional
        Build specification (build spec) for the autocreated branch.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the autocreated branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the autocreated branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for the autocreated branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the autocreated branch.
    framework : str, default is Undefined, optional
        Framework for the autocreated branch.
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    stage : str, default is Undefined, optional
        Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    """


    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef

    buildSpec?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    pullRequestEnvironmentName?: str

    stage?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef:
    r"""
    Basic authorization credentials for the autocreated branch.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderBasicAuthCredentialsSecretRef:
    r"""
    Credentials for basic authorization for an Amplify app.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderCacheConfig:
    r"""
    Cache configuration for the Amplify app. See cache_config Block for details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.
    """


    $type?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderCustomRuleItems0:
    r"""
    amplify aws upbound io v1beta2 app spec for provider custom rule items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        Condition for a URL rewrite or redirect rule, such as a country code.
    source : str, default is Undefined, optional
        Source pattern for a URL rewrite or redirect rule.
    status : str, default is Undefined, optional
        Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
    target : str, default is Undefined, optional
        Target pattern for a URL rewrite or redirect rule.
    """


    condition?: str

    source?: str

    status?: str

    target?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamServiceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRefPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamServiceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelectorPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderIamServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecForProviderOauthTokenSecretRef:
    r"""
    OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessTokenSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAccessTokenSecretRef, default is Undefined, optional
        access token secret ref
    autoBranchCreationConfig : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfig, default is Undefined, optional
        auto branch creation config
    autoBranchCreationPatterns : [str], default is Undefined, optional
        Automated branch creation glob patterns for an Amplify app.
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    buildSpec : str, default is Undefined, optional
        The build specification (build spec) for an Amplify app.
    cacheConfig : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCacheConfig, default is Undefined, optional
        cache config
    customHeaders : str, default is Undefined, optional
        The custom HTTP headers for an Amplify app.
    customRule : [AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCustomRuleItems0], default is Undefined, optional
        Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.
    description : str, default is Undefined, optional
        Description for an Amplify app.
    enableAutoBranchCreation : bool, default is Undefined, optional
        Enables automated branch creation for an Amplify app.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
    enableBranchAutoBuild : bool, default is Undefined, optional
        Enables auto-building of branches for the Amplify App.
    enableBranchAutoDeletion : bool, default is Undefined, optional
        Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables map for an Amplify app.
    iamServiceRoleArn : str, default is Undefined, optional
        AWS Identity and Access Management (IAM) service role for an Amplify app.
    iamServiceRoleArnRef : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRef, default is Undefined, optional
        iam service role arn ref
    iamServiceRoleArnSelector : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelector, default is Undefined, optional
        iam service role arn selector
    name : str, default is Undefined, optional
        Name for an Amplify app.
    oauthTokenSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderOauthTokenSecretRef, default is Undefined, optional
        oauth token secret ref
    platform : str, default is Undefined, optional
        Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
    repository : str, default is Undefined, optional
        Repository for an Amplify app.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accessTokenSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAccessTokenSecretRef

    autoBranchCreationConfig?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfig

    autoBranchCreationPatterns?: [str]

    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderBasicAuthCredentialsSecretRef

    buildSpec?: str

    cacheConfig?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCacheConfig

    customHeaders?: str

    customRule?: [AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCustomRuleItems0]

    description?: str

    enableAutoBranchCreation?: bool

    enableBasicAuth?: bool

    enableBranchAutoBuild?: bool

    enableBranchAutoDeletion?: bool

    environmentVariables?: {str:str}

    iamServiceRoleArn?: str

    iamServiceRoleArnRef?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRef

    iamServiceRoleArnSelector?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelector

    name?: str

    oauthTokenSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderOauthTokenSecretRef

    platform?: str

    repository?: str

    tags?: {str:str}


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAccessTokenSecretRef:
    r"""
    Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfig:
    r"""
    Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.

    Attributes
    ----------
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    buildSpec : str, default is Undefined, optional
        Build specification (build spec) for the autocreated branch.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the autocreated branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the autocreated branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for the autocreated branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the autocreated branch.
    framework : str, default is Undefined, optional
        Framework for the autocreated branch.
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    stage : str, default is Undefined, optional
        Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    """


    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef

    buildSpec?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    pullRequestEnvironmentName?: str

    stage?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderAutoBranchCreationConfigBasicAuthCredentialsSecretRef:
    r"""
    Basic authorization credentials for the autocreated branch.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderBasicAuthCredentialsSecretRef:
    r"""
    Credentials for basic authorization for an Amplify app.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCacheConfig:
    r"""
    Cache configuration for the Amplify app. See cache_config Block for details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.
    """


    $type?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderCustomRuleItems0:
    r"""
    amplify aws upbound io v1beta2 app spec init provider custom rule items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        Condition for a URL rewrite or redirect rule, such as a country code.
    source : str, default is Undefined, optional
        Source pattern for a URL rewrite or redirect rule.
    status : str, default is Undefined, optional
        Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
    target : str, default is Undefined, optional
        Target pattern for a URL rewrite or redirect rule.
    """


    condition?: str

    source?: str

    status?: str

    target?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamServiceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRefPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamServiceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelectorPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderIamServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecInitProviderOauthTokenSecretRef:
    r"""
    OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRefPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRef

    metadata?: AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToMetadata

    name: str


schema AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRefPolicy


schema AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta2AppSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AmplifyAwsUpboundIoV1beta2AppSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta2AppStatus:
    r"""
    AppStatus defines the observed state of App.

    Attributes
    ----------
    atProvider : AmplifyAwsUpboundIoV1beta2AppStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AmplifyAwsUpboundIoV1beta2AppStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AmplifyAwsUpboundIoV1beta2AppStatusAtProvider

    conditions?: [AmplifyAwsUpboundIoV1beta2AppStatusConditionsItems0]

    observedGeneration?: int


schema AmplifyAwsUpboundIoV1beta2AppStatusAtProvider:
    r"""
    amplify aws upbound io v1beta2 app status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Amplify app.
    autoBranchCreationConfig : AmplifyAwsUpboundIoV1beta2AppStatusAtProviderAutoBranchCreationConfig, default is Undefined, optional
        auto branch creation config
    autoBranchCreationPatterns : [str], default is Undefined, optional
        Automated branch creation glob patterns for an Amplify app.
    buildSpec : str, default is Undefined, optional
        The build specification (build spec) for an Amplify app.
    cacheConfig : AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCacheConfig, default is Undefined, optional
        cache config
    customHeaders : str, default is Undefined, optional
        The custom HTTP headers for an Amplify app.
    customRule : [AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCustomRuleItems0], default is Undefined, optional
        Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.
    defaultDomain : str, default is Undefined, optional
        Default domain for the Amplify app.
    description : str, default is Undefined, optional
        Description for an Amplify app.
    enableAutoBranchCreation : bool, default is Undefined, optional
        Enables automated branch creation for an Amplify app.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
    enableBranchAutoBuild : bool, default is Undefined, optional
        Enables auto-building of branches for the Amplify App.
    enableBranchAutoDeletion : bool, default is Undefined, optional
        Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables map for an Amplify app.
    iamServiceRoleArn : str, default is Undefined, optional
        AWS Identity and Access Management (IAM) service role for an Amplify app.
    id : str, default is Undefined, optional
        Unique ID of the Amplify app.
    name : str, default is Undefined, optional
        Name for an Amplify app.
    platform : str, default is Undefined, optional
        Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.
    productionBranch : [AmplifyAwsUpboundIoV1beta2AppStatusAtProviderProductionBranchItems0], default is Undefined, optional
        Describes the information about a production branch for an Amplify app. A production_branch block is documented below.
    repository : str, default is Undefined, optional
        Repository for an Amplify app.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    autoBranchCreationConfig?: AmplifyAwsUpboundIoV1beta2AppStatusAtProviderAutoBranchCreationConfig

    autoBranchCreationPatterns?: [str]

    buildSpec?: str

    cacheConfig?: AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCacheConfig

    customHeaders?: str

    customRule?: [AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCustomRuleItems0]

    defaultDomain?: str

    description?: str

    enableAutoBranchCreation?: bool

    enableBasicAuth?: bool

    enableBranchAutoBuild?: bool

    enableBranchAutoDeletion?: bool

    environmentVariables?: {str:str}

    iamServiceRoleArn?: str

    id?: str

    name?: str

    platform?: str

    productionBranch?: [AmplifyAwsUpboundIoV1beta2AppStatusAtProviderProductionBranchItems0]

    repository?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema AmplifyAwsUpboundIoV1beta2AppStatusAtProviderAutoBranchCreationConfig:
    r"""
    Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.

    Attributes
    ----------
    buildSpec : str, default is Undefined, optional
        Build specification (build spec) for the autocreated branch.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the autocreated branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the autocreated branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for the autocreated branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the autocreated branch.
    framework : str, default is Undefined, optional
        Framework for the autocreated branch.
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    stage : str, default is Undefined, optional
        Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    """


    buildSpec?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    pullRequestEnvironmentName?: str

    stage?: str


schema AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCacheConfig:
    r"""
    Cache configuration for the Amplify app. See cache_config Block for details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.
    """


    $type?: str


schema AmplifyAwsUpboundIoV1beta2AppStatusAtProviderCustomRuleItems0:
    r"""
    amplify aws upbound io v1beta2 app status at provider custom rule items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        Condition for a URL rewrite or redirect rule, such as a country code.
    source : str, default is Undefined, optional
        Source pattern for a URL rewrite or redirect rule.
    status : str, default is Undefined, optional
        Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.
    target : str, default is Undefined, optional
        Target pattern for a URL rewrite or redirect rule.
    """


    condition?: str

    source?: str

    status?: str

    target?: str


schema AmplifyAwsUpboundIoV1beta2AppStatusAtProviderProductionBranchItems0:
    r"""
    amplify aws upbound io v1beta2 app status at provider production branch items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Branch name for the production branch.
    lastDeployTime : str, default is Undefined, optional
        Last deploy time of the production branch.
    status : str, default is Undefined, optional
        Status of the production branch.
    thumbnailUrl : str, default is Undefined, optional
        Thumbnail URL for the production branch.
    """


    branchName?: str

    lastDeployTime?: str

    status?: str

    thumbnailUrl?: str


schema AmplifyAwsUpboundIoV1beta2AppStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


