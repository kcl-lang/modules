"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Permissions:
    r"""
    Permissions is the Schema for the Permissionss API.

    Attributes
    ----------
    apiVersion : str, default is "group.keycloak.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Permissions", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpec, default is Undefined, required
        spec
    status : GroupKeycloakCrossplaneIoV1alpha1PermissionsStatus, default is Undefined, optional
        status
    """


    apiVersion: "group.keycloak.crossplane.io/v1alpha1" = "group.keycloak.crossplane.io/v1alpha1"

    kind: "Permissions" = "Permissions"

    metadata?: v1.ObjectMeta

    spec: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpec

    status?: GroupKeycloakCrossplaneIoV1alpha1PermissionsStatus


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpec:
    r"""
    PermissionsSpec defines the desired state of Permissions

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProvider, default is Undefined, required
        for provider
    initProvider : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProvider

    initProvider?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRef

    writeConnectionSecretToRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecWriteConnectionSecretToRef


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProvider:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The id of the group.
    groupIdRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelector, default is Undefined, optional
        group Id selector
    manageMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the users that belong to this group.
    manageMembershipScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembershipScopeItems0], default is Undefined, optional
        Policies that decide if an admin can change the membership of the group. Add or remove members from the group.
    manageScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the configuration of the group.
    realmId : str, default is Undefined, optional
        The realm in which to manage fine-grained role permissions.
    realmIdRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    viewMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view the user details of members of the group.
    viewScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view information about the group.
    """


    groupId?: str

    groupIdRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRef

    groupIdSelector?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelector

    manageMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembersScopeItems0]

    manageMembershipScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembershipScopeItems0]

    manageScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageScopeItems0]

    realmId?: str

    realmIdRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRef

    realmIdSelector?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelector

    viewMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewMembersScopeItems0]

    viewScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewScopeItems0]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRef:
    r"""
    Reference to a Group in group to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelector:
    r"""
    Selector for a Group in group to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider manage members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageMembershipScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider manage membership scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderManageScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider manage scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider view members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecForProviderViewScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec for provider view scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The id of the group.
    groupIdRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelector, default is Undefined, optional
        group Id selector
    manageMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the users that belong to this group.
    manageMembershipScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembershipScopeItems0], default is Undefined, optional
        Policies that decide if an admin can change the membership of the group. Add or remove members from the group.
    manageScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the configuration of the group.
    realmId : str, default is Undefined, optional
        The realm in which to manage fine-grained role permissions.
    realmIdRef : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    viewMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view the user details of members of the group.
    viewScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view information about the group.
    """


    groupId?: str

    groupIdRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRef

    groupIdSelector?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelector

    manageMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembersScopeItems0]

    manageMembershipScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembershipScopeItems0]

    manageScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageScopeItems0]

    realmId?: str

    realmIdRef?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRef

    realmIdSelector?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelector

    viewMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewMembersScopeItems0]

    viewScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewScopeItems0]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRef:
    r"""
    Reference to a Group in group to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelector:
    r"""
    Selector for a Group in group to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec init provider manage members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageMembershipScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec init provider manage membership scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderManageScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec init provider manage scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelectorPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec init provider view members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecInitProviderViewScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions spec init provider view scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRefPolicy


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatus:
    r"""
    PermissionsStatus defines the observed state of Permissions.

    Attributes
    ----------
    atProvider : GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProvider

    conditions?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusConditionsItems0]

    observedGeneration?: int


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProvider:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider

    Attributes
    ----------
    authorizationResourceServerId : str, default is Undefined, optional
        Resource server id representing the realm management client on which these permissions are managed.
        Resource server id representing the realm management client on which this permission is managed
    enabled : bool, default is Undefined, optional
        When true, this indicates that fine-grained role permissions are enabled. This will always be true.
    groupId : str, default is Undefined, optional
        The id of the group.
    id : str, default is Undefined, optional
        id
    manageMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the users that belong to this group.
    manageMembershipScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembershipScopeItems0], default is Undefined, optional
        Policies that decide if an admin can change the membership of the group. Add or remove members from the group.
    manageScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageScopeItems0], default is Undefined, optional
        Policies that decide if the admin can manage the configuration of the group.
    realmId : str, default is Undefined, optional
        The realm in which to manage fine-grained role permissions.
    viewMembersScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewMembersScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view the user details of members of the group.
    viewScope : [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewScopeItems0], default is Undefined, optional
        Policies that decide if the admin can view information about the group.
    """


    authorizationResourceServerId?: str

    enabled?: bool

    groupId?: str

    id?: str

    manageMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembersScopeItems0]

    manageMembershipScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembershipScopeItems0]

    manageScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageScopeItems0]

    realmId?: str

    viewMembersScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewMembersScopeItems0]

    viewScope?: [GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewScopeItems0]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider manage members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageMembershipScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider manage membership scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderManageScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider manage scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewMembersScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider view members scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusAtProviderViewScopeItems0:
    r"""
    group keycloak crossplane io v1alpha1 permissions status at provider view scope items0

    Attributes
    ----------
    decisionStrategy : str, default is Undefined, optional
        Decision strategy of the permission.
    description : str, default is Undefined, optional
        Description of the permission.
    policies : [str], default is Undefined, optional
        Assigned policies to the permission. Each element within this list should be a policy ID.
    """


    decisionStrategy?: str

    description?: str

    policies?: [str]


schema GroupKeycloakCrossplaneIoV1alpha1PermissionsStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


