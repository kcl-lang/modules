"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ReplicationInstance:
    r"""
    ReplicationInstance is the Schema for the ReplicationInstances API. Provides a DMS (Data Migration Service) replication instance resource.

    Attributes
    ----------
    apiVersion : str, default is "dms.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ReplicationInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DmsAwsUpboundIoV1beta1ReplicationInstanceSpec, default is Undefined, required
        spec
    status : DmsAwsUpboundIoV1beta1ReplicationInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "dms.aws.upbound.io/v1beta1" = "dms.aws.upbound.io/v1beta1"

    kind: "ReplicationInstance" = "ReplicationInstance"

    metadata?: v1.ObjectMeta

    spec: DmsAwsUpboundIoV1beta1ReplicationInstanceSpec

    status?: DmsAwsUpboundIoV1beta1ReplicationInstanceStatus


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpec:
    r"""
    ReplicationInstanceSpec defines the desired state of ReplicationInstance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProvider

    initProvider?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecWriteConnectionSecretToRef


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProvider:
    r"""
    dms aws upbound io v1beta1 replication instance spec for provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage (in gigabytes) to be initially allocated for the replication instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version upgrades are allowed.
    applyImmediately : bool, default is Undefined, optional
        Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone that the replication instance will be created in.
    engineVersion : str, default is Undefined, optional
        The engine version number of the replication instance.
    kmsKeyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    multiAz : bool, default is Undefined, optional
        Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.
    networkType : str, default is Undefined, optional
        The type of IP address protocol used by a replication instance. Valid values: IPV4, DUAL.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
    publiclyAccessible : bool, default is Undefined, optional
        Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of the replication instance as specified by the replication instance class. See AWS DMS User Guide for available instance sizes and advice on which one to choose.
    replicationSubnetGroupId : str, default is Undefined, optional
        A subnet group to associate with the replication instance.
    replicationSubnetGroupIdRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRef, default is Undefined, optional
        replication subnet group Id ref
    replicationSubnetGroupIdSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelector, default is Undefined, optional
        replication subnet group Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    engineVersion?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelector

    multiAz?: bool

    networkType?: str

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    region: str

    replicationInstanceClass?: str

    replicationSubnetGroupId?: str

    replicationSubnetGroupIdRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRef

    replicationSubnetGroupIdSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelector

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRef:
    r"""
    Reference to a ReplicationSubnetGroup in dms to populate replicationSubnetGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelector:
    r"""
    Selector for a ReplicationSubnetGroup in dms to populate replicationSubnetGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderReplicationSubnetGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage (in gigabytes) to be initially allocated for the replication instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version upgrades are allowed.
    applyImmediately : bool, default is Undefined, optional
        Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone that the replication instance will be created in.
    engineVersion : str, default is Undefined, optional
        The engine version number of the replication instance.
    kmsKeyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    kmsKeyArnRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    multiAz : bool, default is Undefined, optional
        Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.
    networkType : str, default is Undefined, optional
        The type of IP address protocol used by a replication instance. Valid values: IPV4, DUAL.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
    publiclyAccessible : bool, default is Undefined, optional
        Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
    replicationInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of the replication instance as specified by the replication instance class. See AWS DMS User Guide for available instance sizes and advice on which one to choose.
    replicationSubnetGroupId : str, default is Undefined, optional
        A subnet group to associate with the replication instance.
    replicationSubnetGroupIdRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRef, default is Undefined, optional
        replication subnet group Id ref
    replicationSubnetGroupIdSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelector, default is Undefined, optional
        replication subnet group Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    engineVersion?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelector

    multiAz?: bool

    networkType?: str

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    replicationInstanceClass?: str

    replicationSubnetGroupId?: str

    replicationSubnetGroupIdRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRef

    replicationSubnetGroupIdSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelector

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRef:
    r"""
    Reference to a ReplicationSubnetGroup in dms to populate replicationSubnetGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelector:
    r"""
    Selector for a ReplicationSubnetGroup in dms to populate replicationSubnetGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderReplicationSubnetGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DmsAwsUpboundIoV1beta1ReplicationInstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DmsAwsUpboundIoV1beta1ReplicationInstanceStatus:
    r"""
    ReplicationInstanceStatus defines the observed state of ReplicationInstance.

    Attributes
    ----------
    atProvider : DmsAwsUpboundIoV1beta1ReplicationInstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DmsAwsUpboundIoV1beta1ReplicationInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DmsAwsUpboundIoV1beta1ReplicationInstanceStatusAtProvider

    conditions?: [DmsAwsUpboundIoV1beta1ReplicationInstanceStatusConditionsItems0]

    observedGeneration?: int


schema DmsAwsUpboundIoV1beta1ReplicationInstanceStatusAtProvider:
    r"""
    dms aws upbound io v1beta1 replication instance status at provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage (in gigabytes) to be initially allocated for the replication instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version upgrades are allowed.
    applyImmediately : bool, default is Undefined, optional
        Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone that the replication instance will be created in.
    engineVersion : str, default is Undefined, optional
        The engine version number of the replication instance.
    id : str, default is Undefined, optional
        id
    kmsKeyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
    multiAz : bool, default is Undefined, optional
        Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.
    networkType : str, default is Undefined, optional
        The type of IP address protocol used by a replication instance. Valid values: IPV4, DUAL.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
    publiclyAccessible : bool, default is Undefined, optional
        Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
    replicationInstanceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the replication instance.
    replicationInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of the replication instance as specified by the replication instance class. See AWS DMS User Guide for available instance sizes and advice on which one to choose.
    replicationInstancePrivateIps : [str], default is Undefined, optional
        A list of the private IP addresses of the replication instance.
    replicationInstancePublicIps : [str], default is Undefined, optional
        A list of the public IP addresses of the replication instance.
    replicationSubnetGroupId : str, default is Undefined, optional
        A subnet group to associate with the replication instance.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    engineVersion?: str

    id?: str

    kmsKeyArn?: str

    multiAz?: bool

    networkType?: str

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    replicationInstanceArn?: str

    replicationInstanceClass?: str

    replicationInstancePrivateIps?: [str]

    replicationInstancePublicIps?: [str]

    replicationSubnetGroupId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]


schema DmsAwsUpboundIoV1beta1ReplicationInstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


