"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LocationS3:
    r"""
    LocationS3 is the Schema for the LocationS3s API. Manages an AWS DataSync S3 Location

    Attributes
    ----------
    apiVersion : str, default is "datasync.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LocationS3", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatasyncAwsUpboundIoV1beta1LocationS3Spec, default is Undefined, required
        spec
    status : DatasyncAwsUpboundIoV1beta1LocationS3Status, default is Undefined, optional
        status
    """


    apiVersion: "datasync.aws.upbound.io/v1beta1" = "datasync.aws.upbound.io/v1beta1"

    kind: "LocationS3" = "LocationS3"

    metadata?: v1.ObjectMeta

    spec: DatasyncAwsUpboundIoV1beta1LocationS3Spec

    status?: DatasyncAwsUpboundIoV1beta1LocationS3Status


schema DatasyncAwsUpboundIoV1beta1LocationS3Spec:
    r"""
    LocationS3Spec defines the desired state of LocationS3

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProvider, default is Undefined, required
        for provider
    initProvider : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProvider

    initProvider?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRef

    publishConnectionDetailsTo?: DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecWriteConnectionSecretToRef


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProvider:
    r"""
    datasync aws upbound io v1beta1 location s3 spec for provider

    Attributes
    ----------
    agentArns : [str], default is Undefined, optional
        A list of DataSync Agent ARNs with which this location will be associated.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    s3BucketArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the S3 Bucket.
    s3BucketArnRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRef, default is Undefined, optional
        s3 bucket arn ref
    s3BucketArnSelector : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelector, default is Undefined, optional
        s3 bucket arn selector
    s3Config : [DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0], default is Undefined, optional
        Configuration block containing information for connecting to S3.
    s3StorageClass : str, default is Undefined, optional
        The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. Valid values
    subdirectory : str, default is Undefined, optional
        Prefix to perform actions as source or destination.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    agentArns?: [str]

    region: str

    s3BucketArn?: str

    s3BucketArnRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRef

    s3BucketArnSelector?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelector

    s3Config?: [DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0]

    s3StorageClass?: str

    subdirectory?: str

    tags?: {str:str}


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelectorPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0:
    r"""
    datasync aws upbound io v1beta1 location s3 spec for provider s3 config items0

    Attributes
    ----------
    bucketAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role used to connect to the S3 Bucket.
    bucketAccessRoleArnRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRef, default is Undefined, optional
        bucket access role arn ref
    bucketAccessRoleArnSelector : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelector, default is Undefined, optional
        bucket access role arn selector
    """


    bucketAccessRoleArn?: str

    bucketAccessRoleArnRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRef

    bucketAccessRoleArnSelector?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelector


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate bucketAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate bucketAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecForProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    agentArns : [str], default is Undefined, optional
        A list of DataSync Agent ARNs with which this location will be associated.
    s3BucketArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the S3 Bucket.
    s3BucketArnRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRef, default is Undefined, optional
        s3 bucket arn ref
    s3BucketArnSelector : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelector, default is Undefined, optional
        s3 bucket arn selector
    s3Config : [DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0], default is Undefined, optional
        Configuration block containing information for connecting to S3.
    s3StorageClass : str, default is Undefined, optional
        The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. Valid values
    subdirectory : str, default is Undefined, optional
        Prefix to perform actions as source or destination.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    agentArns?: [str]

    s3BucketArn?: str

    s3BucketArnRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRef

    s3BucketArnSelector?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelector

    s3Config?: [DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0]

    s3StorageClass?: str

    subdirectory?: str

    tags?: {str:str}


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelectorPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0:
    r"""
    datasync aws upbound io v1beta1 location s3 spec init provider s3 config items0

    Attributes
    ----------
    bucketAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role used to connect to the S3 Bucket.
    bucketAccessRoleArnRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRef, default is Undefined, optional
        bucket access role arn ref
    bucketAccessRoleArnSelector : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelector, default is Undefined, optional
        bucket access role arn selector
    """


    bucketAccessRoleArn?: str

    bucketAccessRoleArnRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRef

    bucketAccessRoleArnSelector?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelector


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRef:
    r"""
    Reference to a Role in iam to populate bucketAccessRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelector:
    r"""
    Selector for a Role in iam to populate bucketAccessRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecInitProviderS3ConfigItems0BucketAccessRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRef

    metadata?: DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToMetadata

    name: str


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRefPolicy


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DatasyncAwsUpboundIoV1beta1LocationS3SpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DatasyncAwsUpboundIoV1beta1LocationS3Status:
    r"""
    LocationS3Status defines the observed state of LocationS3.

    Attributes
    ----------
    atProvider : DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DatasyncAwsUpboundIoV1beta1LocationS3StatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProvider

    conditions?: [DatasyncAwsUpboundIoV1beta1LocationS3StatusConditionsItems0]

    observedGeneration?: int


schema DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProvider:
    r"""
    datasync aws upbound io v1beta1 location s3 status at provider

    Attributes
    ----------
    agentArns : [str], default is Undefined, optional
        A list of DataSync Agent ARNs with which this location will be associated.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the DataSync Location.
    id : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the DataSync Location.
    s3BucketArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the S3 Bucket.
    s3Config : [DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProviderS3ConfigItems0], default is Undefined, optional
        Configuration block containing information for connecting to S3.
    s3StorageClass : str, default is Undefined, optional
        The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. Valid values
    subdirectory : str, default is Undefined, optional
        Prefix to perform actions as source or destination.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    uri : str, default is Undefined, optional
        uri
    """


    agentArns?: [str]

    arn?: str

    id?: str

    s3BucketArn?: str

    s3Config?: [DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProviderS3ConfigItems0]

    s3StorageClass?: str

    subdirectory?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    uri?: str


schema DatasyncAwsUpboundIoV1beta1LocationS3StatusAtProviderS3ConfigItems0:
    r"""
    datasync aws upbound io v1beta1 location s3 status at provider s3 config items0

    Attributes
    ----------
    bucketAccessRoleArn : str, default is Undefined, optional
        ARN of the IAM Role used to connect to the S3 Bucket.
    """


    bucketAccessRoleArn?: str


schema DatasyncAwsUpboundIoV1beta1LocationS3StatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


