"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterAuth:
    r"""
    ClusterAuth is used to retrieve Kubeconfig of given EKS cluster.

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterAuth", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta1ClusterAuthSpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta1ClusterAuthStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta1" = "eks.aws.upbound.io/v1beta1"

    kind: "ClusterAuth" = "ClusterAuth"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta1ClusterAuthSpec

    status?: EksAwsUpboundIoV1beta1ClusterAuthStatus


schema EksAwsUpboundIoV1beta1ClusterAuthSpec:
    r"""
    ClusterAuthSpec defines the desired state of ClusterAuth

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta1ClusterAuthSpecForProvider, default is Undefined, required
        for provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta1ClusterAuthSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta1ClusterAuthSpecForProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta1ClusterAuthSpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta1ClusterAuthSpecForProvider:
    r"""
    eks aws upbound io v1beta1 cluster auth spec for provider

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        ClusterName is the name of the cluster you'd like to fetch Kubeconfig of.
        Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.
    clusterNameRef : EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    refreshPeriod : str, default is "10m0s", optional
        RefreshPeriod is how frequently you'd like the token in the published
        Kubeconfig to be refreshed. The maximum is 10m0s.
        The default is 10m0s.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    clusterName?: str

    clusterNameRef?: EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelector

    refreshPeriod?: str = "10m0s"

    region: str


schema EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRef:
    r"""
    Reference to a Cluster to populate clusterName.
    Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRefPolicy


schema EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelector:
    r"""
    Selector for a Cluster to populate clusterName.
    Either ClusterName, ClusterNameRef or ClusterNameSelector has to be given.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterAuthSpecForProviderClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta1ClusterAuthSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterAuthSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta1ClusterAuthSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta1ClusterAuthStatus:
    r"""
    ClusterAuthStatus defines the observed state of ClusterAuth.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta1ClusterAuthStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta1ClusterAuthStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta1ClusterAuthStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta1ClusterAuthStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta1ClusterAuthStatusAtProvider:
    r"""
    eks aws upbound io v1beta1 cluster auth status at provider

    Attributes
    ----------
    lastRefreshTime : str, default is Undefined, optional
        LastRefreshTime is the time when the token was refreshed.
    """


    lastRefreshTime?: str


schema EksAwsUpboundIoV1beta1ClusterAuthStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


