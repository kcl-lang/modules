"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema User:
    r"""
    User is the Schema for the Users API. Provides details about a specific Amazon Connect User

    Attributes
    ----------
    apiVersion : str, default is "connect.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConnectAwsUpboundIoV1beta1UserSpec, default is Undefined, required
        spec
    status : ConnectAwsUpboundIoV1beta1UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "connect.aws.upbound.io/v1beta1" = "connect.aws.upbound.io/v1beta1"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: ConnectAwsUpboundIoV1beta1UserSpec

    status?: ConnectAwsUpboundIoV1beta1UserStatus


schema ConnectAwsUpboundIoV1beta1UserSpec:
    r"""
    UserSpec defines the desired state of User

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConnectAwsUpboundIoV1beta1UserSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConnectAwsUpboundIoV1beta1UserSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConnectAwsUpboundIoV1beta1UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConnectAwsUpboundIoV1beta1UserSpecForProvider

    initProvider?: ConnectAwsUpboundIoV1beta1UserSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRef

    publishConnectionDetailsTo?: ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConnectAwsUpboundIoV1beta1UserSpecWriteConnectionSecretToRef


schema ConnectAwsUpboundIoV1beta1UserSpecForProvider:
    r"""
    connect aws upbound io v1beta1 user spec for provider

    Attributes
    ----------
    directoryUserId : str, default is Undefined, optional
        The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
    hierarchyGroupId : str, default is Undefined, optional
        The identifier of the hierarchy group for the user.
    identityInfo : [ConnectAwsUpboundIoV1beta1UserSpecForProviderIdentityInfoItems0], default is Undefined, optional
        A block that contains information about the identity of the user. Documented below.
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    instanceIdRef : ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    name : str, default is Undefined, optional
        The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
    passwordSecretRef : ConnectAwsUpboundIoV1beta1UserSpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    phoneConfig : [ConnectAwsUpboundIoV1beta1UserSpecForProviderPhoneConfigItems0], default is Undefined, optional
        A block that contains information about the phone settings for the user. Documented below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    routingProfileId : str, default is Undefined, optional
        The identifier of the routing profile for the user.
    routingProfileIdRef : ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRef, default is Undefined, optional
        routing profile Id ref
    routingProfileIdSelector : ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelector, default is Undefined, optional
        routing profile Id selector
    securityProfileIds : [str], default is Undefined, optional
        A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    securityProfileIdsRefs : [ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0], default is Undefined, optional
        References to SecurityProfile in connect to populate securityProfileIds.
    securityProfileIdsSelector : ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelector, default is Undefined, optional
        security profile ids selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    directoryUserId?: str

    hierarchyGroupId?: str

    identityInfo?: [ConnectAwsUpboundIoV1beta1UserSpecForProviderIdentityInfoItems0]

    instanceId?: str

    instanceIdRef?: ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRef

    instanceIdSelector?: ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelector

    name?: str

    passwordSecretRef?: ConnectAwsUpboundIoV1beta1UserSpecForProviderPasswordSecretRef

    phoneConfig?: [ConnectAwsUpboundIoV1beta1UserSpecForProviderPhoneConfigItems0]

    region: str

    routingProfileId?: str

    routingProfileIdRef?: ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRef

    routingProfileIdSelector?: ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelector

    securityProfileIds?: [str]

    securityProfileIdsRefs?: [ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0]

    securityProfileIdsSelector?: ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelector

    tags?: {str:str}


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderIdentityInfoItems0:
    r"""
    connect aws upbound io v1beta1 user spec for provider identity info items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the email is supported. From the UpdateUserIdentityInfo API documentation it is strongly recommended to limit who has the ability to invoke UpdateUserIdentityInfo. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    firstName : str, default is Undefined, optional
        The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    lastName : str, default is Undefined, optional
        The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    """


    email?: str

    firstName?: str

    lastName?: str


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRef:
    r"""
    Reference to a Instance in connect to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelector:
    r"""
    Selector for a Instance in connect to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderPasswordSecretRef:
    r"""
    The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderPhoneConfigItems0:
    r"""
    connect aws upbound io v1beta1 user spec for provider phone config items0

    Attributes
    ----------
    afterContactWorkTimeLimit : float, default is Undefined, optional
        The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
    autoAccept : bool, default is Undefined, optional
        When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
    deskPhoneNumber : str, default is Undefined, optional
        The phone number for the user's desk phone. Required if phone_type is set as DESK_PHONE.
    phoneType : str, default is Undefined, optional
        The phone type. Valid values are DESK_PHONE and SOFT_PHONE.
    """


    afterContactWorkTimeLimit?: float

    autoAccept?: bool

    deskPhoneNumber?: str

    phoneType?: str


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRef:
    r"""
    Reference to a RoutingProfile in connect to populate routingProfileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelector:
    r"""
    Selector for a RoutingProfile in connect to populate routingProfileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderRoutingProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0Policy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelector:
    r"""
    Selector for a list of SecurityProfile in connect to populate securityProfileIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecForProviderSecurityProfileIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    directoryUserId : str, default is Undefined, optional
        The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
    hierarchyGroupId : str, default is Undefined, optional
        The identifier of the hierarchy group for the user.
    identityInfo : [ConnectAwsUpboundIoV1beta1UserSpecInitProviderIdentityInfoItems0], default is Undefined, optional
        A block that contains information about the identity of the user. Documented below.
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    instanceIdRef : ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    name : str, default is Undefined, optional
        The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
    passwordSecretRef : ConnectAwsUpboundIoV1beta1UserSpecInitProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    phoneConfig : [ConnectAwsUpboundIoV1beta1UserSpecInitProviderPhoneConfigItems0], default is Undefined, optional
        A block that contains information about the phone settings for the user. Documented below.
    routingProfileId : str, default is Undefined, optional
        The identifier of the routing profile for the user.
    routingProfileIdRef : ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRef, default is Undefined, optional
        routing profile Id ref
    routingProfileIdSelector : ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelector, default is Undefined, optional
        routing profile Id selector
    securityProfileIds : [str], default is Undefined, optional
        A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    securityProfileIdsRefs : [ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0], default is Undefined, optional
        References to SecurityProfile in connect to populate securityProfileIds.
    securityProfileIdsSelector : ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelector, default is Undefined, optional
        security profile ids selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    directoryUserId?: str

    hierarchyGroupId?: str

    identityInfo?: [ConnectAwsUpboundIoV1beta1UserSpecInitProviderIdentityInfoItems0]

    instanceId?: str

    instanceIdRef?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRef

    instanceIdSelector?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelector

    name?: str

    passwordSecretRef?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderPasswordSecretRef

    phoneConfig?: [ConnectAwsUpboundIoV1beta1UserSpecInitProviderPhoneConfigItems0]

    routingProfileId?: str

    routingProfileIdRef?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRef

    routingProfileIdSelector?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelector

    securityProfileIds?: [str]

    securityProfileIdsRefs?: [ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0]

    securityProfileIdsSelector?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelector

    tags?: {str:str}


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderIdentityInfoItems0:
    r"""
    connect aws upbound io v1beta1 user spec init provider identity info items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the email is supported. From the UpdateUserIdentityInfo API documentation it is strongly recommended to limit who has the ability to invoke UpdateUserIdentityInfo. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    firstName : str, default is Undefined, optional
        The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    lastName : str, default is Undefined, optional
        The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    """


    email?: str

    firstName?: str

    lastName?: str


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRef:
    r"""
    Reference to a Instance in connect to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelector:
    r"""
    Selector for a Instance in connect to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderPasswordSecretRef:
    r"""
    The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderPhoneConfigItems0:
    r"""
    connect aws upbound io v1beta1 user spec init provider phone config items0

    Attributes
    ----------
    afterContactWorkTimeLimit : float, default is Undefined, optional
        The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
    autoAccept : bool, default is Undefined, optional
        When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
    deskPhoneNumber : str, default is Undefined, optional
        The phone number for the user's desk phone. Required if phone_type is set as DESK_PHONE.
    phoneType : str, default is Undefined, optional
        The phone type. Valid values are DESK_PHONE and SOFT_PHONE.
    """


    afterContactWorkTimeLimit?: float

    autoAccept?: bool

    deskPhoneNumber?: str

    phoneType?: str


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRef:
    r"""
    Reference to a RoutingProfile in connect to populate routingProfileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelector:
    r"""
    Selector for a RoutingProfile in connect to populate routingProfileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderRoutingProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0Policy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelector:
    r"""
    Selector for a list of SecurityProfile in connect to populate securityProfileIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelectorPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecInitProviderSecurityProfileIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRef

    metadata?: ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToMetadata

    name: str


schema ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy


schema ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta1UserSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConnectAwsUpboundIoV1beta1UserSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConnectAwsUpboundIoV1beta1UserStatus:
    r"""
    UserStatus defines the observed state of User.

    Attributes
    ----------
    atProvider : ConnectAwsUpboundIoV1beta1UserStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConnectAwsUpboundIoV1beta1UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ConnectAwsUpboundIoV1beta1UserStatusAtProvider

    conditions?: [ConnectAwsUpboundIoV1beta1UserStatusConditionsItems0]

    observedGeneration?: int


schema ConnectAwsUpboundIoV1beta1UserStatusAtProvider:
    r"""
    connect aws upbound io v1beta1 user status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the user.
    directoryUserId : str, default is Undefined, optional
        The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
    hierarchyGroupId : str, default is Undefined, optional
        The identifier of the hierarchy group for the user.
    id : str, default is Undefined, optional
        The identifier of the hosting Amazon Connect Instance and identifier of the user
        separated by a colon (:).
    identityInfo : [ConnectAwsUpboundIoV1beta1UserStatusAtProviderIdentityInfoItems0], default is Undefined, optional
        A block that contains information about the identity of the user. Documented below.
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    name : str, default is Undefined, optional
        The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
    phoneConfig : [ConnectAwsUpboundIoV1beta1UserStatusAtProviderPhoneConfigItems0], default is Undefined, optional
        A block that contains information about the phone settings for the user. Documented below.
    routingProfileId : str, default is Undefined, optional
        The identifier of the routing profile for the user.
    securityProfileIds : [str], default is Undefined, optional
        A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    userId : str, default is Undefined, optional
        The identifier for the user.
    """


    arn?: str

    directoryUserId?: str

    hierarchyGroupId?: str

    id?: str

    identityInfo?: [ConnectAwsUpboundIoV1beta1UserStatusAtProviderIdentityInfoItems0]

    instanceId?: str

    name?: str

    phoneConfig?: [ConnectAwsUpboundIoV1beta1UserStatusAtProviderPhoneConfigItems0]

    routingProfileId?: str

    securityProfileIds?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    userId?: str


schema ConnectAwsUpboundIoV1beta1UserStatusAtProviderIdentityInfoItems0:
    r"""
    connect aws upbound io v1beta1 user status at provider identity info items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the email is supported. From the UpdateUserIdentityInfo API documentation it is strongly recommended to limit who has the ability to invoke UpdateUserIdentityInfo. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
    firstName : str, default is Undefined, optional
        The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    lastName : str, default is Undefined, optional
        The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
    """


    email?: str

    firstName?: str

    lastName?: str


schema ConnectAwsUpboundIoV1beta1UserStatusAtProviderPhoneConfigItems0:
    r"""
    connect aws upbound io v1beta1 user status at provider phone config items0

    Attributes
    ----------
    afterContactWorkTimeLimit : float, default is Undefined, optional
        The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
    autoAccept : bool, default is Undefined, optional
        When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
    deskPhoneNumber : str, default is Undefined, optional
        The phone number for the user's desk phone. Required if phone_type is set as DESK_PHONE.
    phoneType : str, default is Undefined, optional
        The phone type. Valid values are DESK_PHONE and SOFT_PHONE.
    """


    afterContactWorkTimeLimit?: float

    autoAccept?: bool

    deskPhoneNumber?: str

    phoneType?: str


schema ConnectAwsUpboundIoV1beta1UserStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


