"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Script:
    r"""
    Script is the Schema for the Scripts API. Provides a GameLift Script resource.

    Attributes
    ----------
    apiVersion : str, default is "gamelift.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Script", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GameliftAwsUpboundIoV1beta2ScriptSpec, default is Undefined, required
        spec
    status : GameliftAwsUpboundIoV1beta2ScriptStatus, default is Undefined, optional
        status
    """


    apiVersion: "gamelift.aws.upbound.io/v1beta2" = "gamelift.aws.upbound.io/v1beta2"

    kind: "Script" = "Script"

    metadata?: v1.ObjectMeta

    spec: GameliftAwsUpboundIoV1beta2ScriptSpec

    status?: GameliftAwsUpboundIoV1beta2ScriptStatus


schema GameliftAwsUpboundIoV1beta2ScriptSpec:
    r"""
    ScriptSpec defines the desired state of Script

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GameliftAwsUpboundIoV1beta2ScriptSpecForProvider, default is Undefined, required
        for provider
    initProvider : GameliftAwsUpboundIoV1beta2ScriptSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GameliftAwsUpboundIoV1beta2ScriptSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GameliftAwsUpboundIoV1beta2ScriptSpecForProvider

    initProvider?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRef

    publishConnectionDetailsTo?: GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GameliftAwsUpboundIoV1beta2ScriptSpecWriteConnectionSecretToRef


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProvider:
    r"""
    gamelift aws upbound io v1beta2 script spec for provider

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the script
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    storageLocation : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    version : str, default is Undefined, optional
        Version that is associated with this script.
    zipFile : str, default is Undefined, optional
        A data object containing your Realtime scripts and dependencies as a zip  file. The zip file can have one or multiple files. Maximum size of a zip file is 5 MB.
    """


    name?: str

    region: str

    storageLocation?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocation

    tags?: {str:str}

    version?: str

    zipFile?: str


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocation:
    r"""
    Information indicating where your game script files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    bucketRef : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        Name of the zip file containing your script files.
    keyRef : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRef, default is Undefined, optional
        key ref
    keySelector : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelector, default is Undefined, optional
        key selector
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    roleArnRef : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucket?: str

    bucketRef?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRef

    bucketSelector?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelector

    key?: str

    keyRef?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRef

    keySelector?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelector

    objectVersion?: str

    roleArn?: str

    roleArnRef?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRef

    roleArnSelector?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelector


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecForProviderStorageLocationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the script
    storageLocation : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    version : str, default is Undefined, optional
        Version that is associated with this script.
    zipFile : str, default is Undefined, optional
        A data object containing your Realtime scripts and dependencies as a zip  file. The zip file can have one or multiple files. Maximum size of a zip file is 5 MB.
    """


    name?: str

    storageLocation?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocation

    tags?: {str:str}

    version?: str

    zipFile?: str


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocation:
    r"""
    Information indicating where your game script files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    bucketRef : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        Name of the zip file containing your script files.
    keyRef : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRef, default is Undefined, optional
        key ref
    keySelector : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelector, default is Undefined, optional
        key selector
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    roleArnRef : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucket?: str

    bucketRef?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRef

    bucketSelector?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelector

    key?: str

    keyRef?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRef

    keySelector?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelector

    objectVersion?: str

    roleArn?: str

    roleArnRef?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRef

    roleArnSelector?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelector


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelectorPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecInitProviderStorageLocationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRef

    metadata?: GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToMetadata

    name: str


schema GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRefPolicy


schema GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2ScriptSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GameliftAwsUpboundIoV1beta2ScriptSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GameliftAwsUpboundIoV1beta2ScriptStatus:
    r"""
    ScriptStatus defines the observed state of Script.

    Attributes
    ----------
    atProvider : GameliftAwsUpboundIoV1beta2ScriptStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GameliftAwsUpboundIoV1beta2ScriptStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GameliftAwsUpboundIoV1beta2ScriptStatusAtProvider

    conditions?: [GameliftAwsUpboundIoV1beta2ScriptStatusConditionsItems0]

    observedGeneration?: int


schema GameliftAwsUpboundIoV1beta2ScriptStatusAtProvider:
    r"""
    gamelift aws upbound io v1beta2 script status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        GameLift Script ARN.
    id : str, default is Undefined, optional
        GameLift Script ID.
    name : str, default is Undefined, optional
        Name of the script
    storageLocation : GameliftAwsUpboundIoV1beta2ScriptStatusAtProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : str, default is Undefined, optional
        Version that is associated with this script.
    zipFile : str, default is Undefined, optional
        A data object containing your Realtime scripts and dependencies as a zip  file. The zip file can have one or multiple files. Maximum size of a zip file is 5 MB.
    """


    arn?: str

    id?: str

    name?: str

    storageLocation?: GameliftAwsUpboundIoV1beta2ScriptStatusAtProviderStorageLocation

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: str

    zipFile?: str


schema GameliftAwsUpboundIoV1beta2ScriptStatusAtProviderStorageLocation:
    r"""
    Information indicating where your game script files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    key : str, default is Undefined, optional
        Name of the zip file containing your script files.
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    """


    bucket?: str

    key?: str

    objectVersion?: str

    roleArn?: str


schema GameliftAwsUpboundIoV1beta2ScriptStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


