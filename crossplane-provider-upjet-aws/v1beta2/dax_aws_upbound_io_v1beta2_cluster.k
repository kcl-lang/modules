"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Provides an DAX Cluster resource.

    Attributes
    ----------
    apiVersion : str, default is "dax.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DaxAwsUpboundIoV1beta2ClusterSpec, default is Undefined, required
        spec
    status : DaxAwsUpboundIoV1beta2ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "dax.aws.upbound.io/v1beta2" = "dax.aws.upbound.io/v1beta2"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: DaxAwsUpboundIoV1beta2ClusterSpec

    status?: DaxAwsUpboundIoV1beta2ClusterStatus


schema DaxAwsUpboundIoV1beta2ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DaxAwsUpboundIoV1beta2ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : DaxAwsUpboundIoV1beta2ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DaxAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DaxAwsUpboundIoV1beta2ClusterSpecForProvider

    initProvider?: DaxAwsUpboundIoV1beta2ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DaxAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef


schema DaxAwsUpboundIoV1beta2ClusterSpecForProvider:
    r"""
    dax aws upbound io v1beta2 cluster spec for provider

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        List of Availability Zones in which the
        nodes will be created
    clusterEndpointEncryptionType : str, default is Undefined, optional
        –  The type of encryption the
        cluster's endpoint should support. Valid values are: NONE and TLS.
        Default value is NONE.
    description : str, default is Undefined, optional
        –  Description for the cluster
    iamRoleArn : str, default is Undefined, optional
        A valid Amazon Resource Name (ARN) that identifies
        an IAM role. At runtime, DAX will assume this role and use the role's
        permissions to access DynamoDB on your behalf
    iamRoleArnRef : DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi
        (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
        sun:05:00-sun:09:00
    nodeType : str, default is Undefined, optional
        –  The compute and memory capacity of the nodes. See
        Nodes for supported node types
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    parameterGroupName : str, default is Undefined, optional
        –  Name of the parameter group to associate
        with this DAX cluster
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationFactor : float, default is Undefined, optional
        node cluster, without any read
        replicas
    securityGroupIdRefs : [DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated
        with the cluster
    serverSideEncryption : DaxAwsUpboundIoV1beta2ClusterSpecForProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    subnetGroupName : str, default is Undefined, optional
        –  Name of the subnet group to be used for the
        cluster
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    availabilityZones?: [str]

    clusterEndpointEncryptionType?: str

    description?: str

    iamRoleArn?: str

    iamRoleArnRef?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRef

    iamRoleArnSelector?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelector

    maintenanceWindow?: str

    nodeType?: str

    notificationTopicArn?: str

    parameterGroupName?: str

    region: str

    replicationFactor?: float

    securityGroupIdRefs?: [DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    serverSideEncryption?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderServerSideEncryption

    subnetGroupName?: str

    tags?: {str:str}


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRefPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelectorPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0Policy


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelectorPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecForProviderServerSideEncryption:
    r"""
    Encrypt at rest options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Defaults to false.
    """


    enabled?: bool


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        List of Availability Zones in which the
        nodes will be created
    clusterEndpointEncryptionType : str, default is Undefined, optional
        –  The type of encryption the
        cluster's endpoint should support. Valid values are: NONE and TLS.
        Default value is NONE.
    description : str, default is Undefined, optional
        –  Description for the cluster
    iamRoleArn : str, default is Undefined, optional
        A valid Amazon Resource Name (ARN) that identifies
        an IAM role. At runtime, DAX will assume this role and use the role's
        permissions to access DynamoDB on your behalf
    iamRoleArnRef : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi
        (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
        sun:05:00-sun:09:00
    nodeType : str, default is Undefined, optional
        –  The compute and memory capacity of the nodes. See
        Nodes for supported node types
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    parameterGroupName : str, default is Undefined, optional
        –  Name of the parameter group to associate
        with this DAX cluster
    replicationFactor : float, default is Undefined, optional
        node cluster, without any read
        replicas
    securityGroupIdRefs : [DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated
        with the cluster
    serverSideEncryption : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    subnetGroupName : str, default is Undefined, optional
        –  Name of the subnet group to be used for the
        cluster
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    availabilityZones?: [str]

    clusterEndpointEncryptionType?: str

    description?: str

    iamRoleArn?: str

    iamRoleArnRef?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRef

    iamRoleArnSelector?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelector

    maintenanceWindow?: str

    nodeType?: str

    notificationTopicArn?: str

    parameterGroupName?: str

    replicationFactor?: float

    securityGroupIdRefs?: [DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    serverSideEncryption?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderServerSideEncryption

    subnetGroupName?: str

    tags?: {str:str}


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRefPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelectorPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelectorPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecInitProviderServerSideEncryption:
    r"""
    Encrypt at rest options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Defaults to false.
    """


    enabled?: bool


schema DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DaxAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DaxAwsUpboundIoV1beta2ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : DaxAwsUpboundIoV1beta2ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DaxAwsUpboundIoV1beta2ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DaxAwsUpboundIoV1beta2ClusterStatusAtProvider

    conditions?: [DaxAwsUpboundIoV1beta2ClusterStatusConditionsItems0]

    observedGeneration?: int


schema DaxAwsUpboundIoV1beta2ClusterStatusAtProvider:
    r"""
    dax aws upbound io v1beta2 cluster status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the DAX cluster
    availabilityZones : [str], default is Undefined, optional
        List of Availability Zones in which the
        nodes will be created
    clusterAddress : str, default is Undefined, optional
        The DNS name of the DAX cluster without the port appended
    clusterEndpointEncryptionType : str, default is Undefined, optional
        –  The type of encryption the
        cluster's endpoint should support. Valid values are: NONE and TLS.
        Default value is NONE.
    configurationEndpoint : str, default is Undefined, optional
        The configuration endpoint for this DAX cluster,
        consisting of a DNS name and a port number
    description : str, default is Undefined, optional
        –  Description for the cluster
    iamRoleArn : str, default is Undefined, optional
        A valid Amazon Resource Name (ARN) that identifies
        an IAM role. At runtime, DAX will assume this role and use the role's
        permissions to access DynamoDB on your behalf
    id : str, default is Undefined, optional
        id
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi
        (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
        sun:05:00-sun:09:00
    nodeType : str, default is Undefined, optional
        –  The compute and memory capacity of the nodes. See
        Nodes for supported node types
    nodes : [DaxAwsUpboundIoV1beta2ClusterStatusAtProviderNodesItems0], default is Undefined, optional
        List of node objects including id, address, port and
        availability_zone. Referenceable e.g., as
        ${aws_dax_cluster.test.nodes.0.address}
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    parameterGroupName : str, default is Undefined, optional
        –  Name of the parameter group to associate
        with this DAX cluster
    port : float, default is Undefined, optional
        The port used by the configuration endpoint
    replicationFactor : float, default is Undefined, optional
        node cluster, without any read
        replicas
    securityGroupIds : [str], default is Undefined, optional
        –  One or more VPC security groups associated
        with the cluster
    serverSideEncryption : DaxAwsUpboundIoV1beta2ClusterStatusAtProviderServerSideEncryption, default is Undefined, optional
        server side encryption
    subnetGroupName : str, default is Undefined, optional
        –  Name of the subnet group to be used for the
        cluster
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    availabilityZones?: [str]

    clusterAddress?: str

    clusterEndpointEncryptionType?: str

    configurationEndpoint?: str

    description?: str

    iamRoleArn?: str

    id?: str

    maintenanceWindow?: str

    nodeType?: str

    nodes?: [DaxAwsUpboundIoV1beta2ClusterStatusAtProviderNodesItems0]

    notificationTopicArn?: str

    parameterGroupName?: str

    port?: float

    replicationFactor?: float

    securityGroupIds?: [str]

    serverSideEncryption?: DaxAwsUpboundIoV1beta2ClusterStatusAtProviderServerSideEncryption

    subnetGroupName?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema DaxAwsUpboundIoV1beta2ClusterStatusAtProviderNodesItems0:
    r"""
    dax aws upbound io v1beta2 cluster status at provider nodes items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        address
    availabilityZone : str, default is Undefined, optional
        availability zone
    id : str, default is Undefined, optional
        id
    port : float, default is Undefined, optional
        The port used by the configuration endpoint
    """


    address?: str

    availabilityZone?: str

    id?: str

    port?: float


schema DaxAwsUpboundIoV1beta2ClusterStatusAtProviderServerSideEncryption:
    r"""
    Encrypt at rest options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. Defaults to false.
    """


    enabled?: bool


schema DaxAwsUpboundIoV1beta2ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


