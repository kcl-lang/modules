"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema JobDefinition:
    r"""
    JobDefinition is the Schema for the JobDefinitions API. Provides a Batch Job Definition resource.

    Attributes
    ----------
    apiVersion : str, default is "batch.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "JobDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BatchAwsUpboundIoV1beta2JobDefinitionSpec, default is Undefined, required
        spec
    status : BatchAwsUpboundIoV1beta2JobDefinitionStatus, default is Undefined, optional
        status
    """


    apiVersion: "batch.aws.upbound.io/v1beta2" = "batch.aws.upbound.io/v1beta2"

    kind: "JobDefinition" = "JobDefinition"

    metadata?: v1.ObjectMeta

    spec: BatchAwsUpboundIoV1beta2JobDefinitionSpec

    status?: BatchAwsUpboundIoV1beta2JobDefinitionStatus


schema BatchAwsUpboundIoV1beta2JobDefinitionSpec:
    r"""
    JobDefinitionSpec defines the desired state of JobDefinition

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProvider, default is Undefined, required
        for provider
    initProvider : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BatchAwsUpboundIoV1beta2JobDefinitionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProvider

    initProvider?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRef

    publishConnectionDetailsTo?: BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BatchAwsUpboundIoV1beta2JobDefinitionSpecWriteConnectionSecretToRef


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProvider:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider

    Attributes
    ----------
    containerProperties : str, default is Undefined, optional
        Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    deregisterOnNewRevision : bool, default is Undefined, optional
        When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.
    ecsProperties : str, default is Undefined, optional
        Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    eksProperties : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksProperties, default is Undefined, optional
        eks properties
    name : str, default is Undefined, optional
        Name of the job definition.
    nodeProperties : str, default is Undefined, optional
        Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.
    parameters : {str:str}, default is Undefined, optional
        Parameter substitution placeholders to set in the job definition.
    platformCapabilities : [str], default is Undefined, optional
        Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    retryStrategy : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategy, default is Undefined, optional
        retry strategy
    schedulingPriority : float, default is Undefined, optional
        Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timeout : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderTimeout, default is Undefined, optional
        timeout
    $type : str, default is Undefined, optional
        Type of job definition. Must be container or multinode.
    """


    containerProperties?: str

    deregisterOnNewRevision?: bool

    ecsProperties?: str

    eksProperties?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksProperties

    name?: str

    nodeProperties?: str

    parameters?: {str:str}

    platformCapabilities?: [str]

    propagateTags?: bool

    region: str

    retryStrategy?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategy

    schedulingPriority?: float

    tags?: {str:str}

    timeout?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderTimeout

    $type?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksProperties:
    r"""
    Valid eks properties. This parameter is only valid if the type parameter is container.

    Attributes
    ----------
    podProperties : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodProperties, default is Undefined, optional
        pod properties
    """


    podProperties?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodProperties


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodProperties:
    r"""
    Properties for the Kubernetes pod resources of a job. See pod_properties below.

    Attributes
    ----------
    containers : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0], default is Undefined, optional
        Properties of the container that's used on the Amazon EKS pod. See containers below.
    dnsPolicy : str, default is Undefined, optional
        DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
    hostNetwork : bool, default is Undefined, optional
        Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
    imagePullSecret : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesImagePullSecretItems0], default is Undefined, optional
        List of Kubernetes secret resources. See image_pull_secret below.
    initContainers : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0], default is Undefined, optional
        Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
    metadata : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesMetadata, default is Undefined, optional
        metadata
    serviceAccountName : str, default is Undefined, optional
        Name of the service account that's used to run the pod.
    shareProcessNamespace : bool, default is Undefined, optional
        Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
    volumes : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0], default is Undefined, optional
        Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
    """


    containers?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0]

    dnsPolicy?: str

    hostNetwork?: bool

    imagePullSecret?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesImagePullSecretItems0]

    initContainers?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0]

    metadata?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesMetadata

    serviceAccountName?: str

    shareProcessNamespace?: bool

    volumes?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesImagePullSecretItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties image pull secret items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Unique identifier.
    """


    name?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties init containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the job definition.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties init containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties init containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesMetadata:
    r"""
    Metadata about the Kubernetes pod.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Key-value pairs used to identify, sort, and organize cube resources.
    """


    labels?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties volumes items0

    Attributes
    ----------
    emptyDir : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    hostPath : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0HostPath, default is Undefined, optional
        host path
    name : str, default is Undefined, optional
        Name of the job definition.
    secret : BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0Secret, default is Undefined, optional
        secret
    """


    emptyDir?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir

    hostPath?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0HostPath

    name?: str

    secret?: BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0Secret


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties volumes items0 empty dir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        Medium to store the volume. The default value is an empty string, which uses the storage of the node.
    sizeLimit : str, default is Undefined, optional
        Maximum size of the volume. By default, there's no maximum size defined.
    """


    medium?: str

    sizeLimit?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0HostPath:
    r"""
    Path of the file or directory on the host to mount into containers on the pod.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    """


    path?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderEksPropertiesPodPropertiesVolumesItems0Secret:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider eks properties pod properties volumes items0 secret

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Whether the secret or the secret's keys must be defined.
    secretName : str, default is Undefined, optional
        Name of the secret. The name must be allowed as a DNS subdomain name.
    """


    optional?: bool

    secretName?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategy:
    r"""
    Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.
    evaluateOnExit : [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategyEvaluateOnExitItems0], default is Undefined, optional
        Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.
    """


    attempts?: float

    evaluateOnExit?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategyEvaluateOnExitItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderRetryStrategyEvaluateOnExitItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec for provider retry strategy evaluate on exit items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.
    onExitCode : str, default is Undefined, optional
        Glob pattern to match against the decimal representation of the exit code returned for a job.
    onReason : str, default is Undefined, optional
        Glob pattern to match against the reason returned for a job.
    onStatusReason : str, default is Undefined, optional
        Glob pattern to match against the status reason returned for a job.
    """


    action?: str

    onExitCode?: str

    onReason?: str

    onStatusReason?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecForProviderTimeout:
    r"""
    Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.

    Attributes
    ----------
    attemptDurationSeconds : float, default is Undefined, optional
        Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.
    """


    attemptDurationSeconds?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    containerProperties : str, default is Undefined, optional
        Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    deregisterOnNewRevision : bool, default is Undefined, optional
        When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.
    ecsProperties : str, default is Undefined, optional
        Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    eksProperties : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksProperties, default is Undefined, optional
        eks properties
    name : str, default is Undefined, optional
        Name of the job definition.
    nodeProperties : str, default is Undefined, optional
        Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.
    parameters : {str:str}, default is Undefined, optional
        Parameter substitution placeholders to set in the job definition.
    platformCapabilities : [str], default is Undefined, optional
        Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.
    retryStrategy : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategy, default is Undefined, optional
        retry strategy
    schedulingPriority : float, default is Undefined, optional
        Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timeout : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderTimeout, default is Undefined, optional
        timeout
    $type : str, default is Undefined, optional
        Type of job definition. Must be container or multinode.
    """


    containerProperties?: str

    deregisterOnNewRevision?: bool

    ecsProperties?: str

    eksProperties?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksProperties

    name?: str

    nodeProperties?: str

    parameters?: {str:str}

    platformCapabilities?: [str]

    propagateTags?: bool

    retryStrategy?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategy

    schedulingPriority?: float

    tags?: {str:str}

    timeout?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderTimeout

    $type?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksProperties:
    r"""
    Valid eks properties. This parameter is only valid if the type parameter is container.

    Attributes
    ----------
    podProperties : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodProperties, default is Undefined, optional
        pod properties
    """


    podProperties?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodProperties


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodProperties:
    r"""
    Properties for the Kubernetes pod resources of a job. See pod_properties below.

    Attributes
    ----------
    containers : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0], default is Undefined, optional
        Properties of the container that's used on the Amazon EKS pod. See containers below.
    dnsPolicy : str, default is Undefined, optional
        DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
    hostNetwork : bool, default is Undefined, optional
        Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
    imagePullSecret : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesImagePullSecretItems0], default is Undefined, optional
        List of Kubernetes secret resources. See image_pull_secret below.
    initContainers : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0], default is Undefined, optional
        Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
    metadata : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesMetadata, default is Undefined, optional
        metadata
    serviceAccountName : str, default is Undefined, optional
        Name of the service account that's used to run the pod.
    shareProcessNamespace : bool, default is Undefined, optional
        Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
    volumes : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0], default is Undefined, optional
        Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
    """


    containers?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0]

    dnsPolicy?: str

    hostNetwork?: bool

    imagePullSecret?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesImagePullSecretItems0]

    initContainers?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0]

    metadata?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesMetadata

    serviceAccountName?: str

    shareProcessNamespace?: bool

    volumes?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesImagePullSecretItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties image pull secret items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Unique identifier.
    """


    name?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties init containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the job definition.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties init containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties init containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesMetadata:
    r"""
    Metadata about the Kubernetes pod.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Key-value pairs used to identify, sort, and organize cube resources.
    """


    labels?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties volumes items0

    Attributes
    ----------
    emptyDir : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    hostPath : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0HostPath, default is Undefined, optional
        host path
    name : str, default is Undefined, optional
        Name of the job definition.
    secret : BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0Secret, default is Undefined, optional
        secret
    """


    emptyDir?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir

    hostPath?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0HostPath

    name?: str

    secret?: BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0Secret


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties volumes items0 empty dir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        Medium to store the volume. The default value is an empty string, which uses the storage of the node.
    sizeLimit : str, default is Undefined, optional
        Maximum size of the volume. By default, there's no maximum size defined.
    """


    medium?: str

    sizeLimit?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0HostPath:
    r"""
    Path of the file or directory on the host to mount into containers on the pod.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    """


    path?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderEksPropertiesPodPropertiesVolumesItems0Secret:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider eks properties pod properties volumes items0 secret

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Whether the secret or the secret's keys must be defined.
    secretName : str, default is Undefined, optional
        Name of the secret. The name must be allowed as a DNS subdomain name.
    """


    optional?: bool

    secretName?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategy:
    r"""
    Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.
    evaluateOnExit : [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategyEvaluateOnExitItems0], default is Undefined, optional
        Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.
    """


    attempts?: float

    evaluateOnExit?: [BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategyEvaluateOnExitItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderRetryStrategyEvaluateOnExitItems0:
    r"""
    batch aws upbound io v1beta2 job definition spec init provider retry strategy evaluate on exit items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.
    onExitCode : str, default is Undefined, optional
        Glob pattern to match against the decimal representation of the exit code returned for a job.
    onReason : str, default is Undefined, optional
        Glob pattern to match against the reason returned for a job.
    onStatusReason : str, default is Undefined, optional
        Glob pattern to match against the status reason returned for a job.
    """


    action?: str

    onExitCode?: str

    onReason?: str

    onStatusReason?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecInitProviderTimeout:
    r"""
    Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.

    Attributes
    ----------
    attemptDurationSeconds : float, default is Undefined, optional
        Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.
    """


    attemptDurationSeconds?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRefPolicy


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRef

    metadata?: BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToMetadata

    name: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRefPolicy


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatus:
    r"""
    JobDefinitionStatus defines the observed state of JobDefinition.

    Attributes
    ----------
    atProvider : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BatchAwsUpboundIoV1beta2JobDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProvider

    conditions?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusConditionsItems0]

    observedGeneration?: int


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProvider:
    r"""
    batch aws upbound io v1beta2 job definition status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the job definition, includes revision (:#).
    arnPrefix : str, default is Undefined, optional
        ARN without the revision number.
    containerProperties : str, default is Undefined, optional
        Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    deregisterOnNewRevision : bool, default is Undefined, optional
        When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.
    ecsProperties : str, default is Undefined, optional
        Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.
    eksProperties : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksProperties, default is Undefined, optional
        eks properties
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        Name of the job definition.
    nodeProperties : str, default is Undefined, optional
        Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.
    parameters : {str:str}, default is Undefined, optional
        Parameter substitution placeholders to set in the job definition.
    platformCapabilities : [str], default is Undefined, optional
        Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.
    retryStrategy : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategy, default is Undefined, optional
        retry strategy
    revision : float, default is Undefined, optional
        Revision of the job definition.
    schedulingPriority : float, default is Undefined, optional
        Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    timeout : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderTimeout, default is Undefined, optional
        timeout
    $type : str, default is Undefined, optional
        Type of job definition. Must be container or multinode.
    """


    arn?: str

    arnPrefix?: str

    containerProperties?: str

    deregisterOnNewRevision?: bool

    ecsProperties?: str

    eksProperties?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksProperties

    id?: str

    name?: str

    nodeProperties?: str

    parameters?: {str:str}

    platformCapabilities?: [str]

    propagateTags?: bool

    retryStrategy?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategy

    revision?: float

    schedulingPriority?: float

    tags?: {str:str}

    tagsAll?: {str:str}

    timeout?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderTimeout

    $type?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksProperties:
    r"""
    Valid eks properties. This parameter is only valid if the type parameter is container.

    Attributes
    ----------
    podProperties : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodProperties, default is Undefined, optional
        pod properties
    """


    podProperties?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodProperties


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodProperties:
    r"""
    Properties for the Kubernetes pod resources of a job. See pod_properties below.

    Attributes
    ----------
    containers : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0], default is Undefined, optional
        Properties of the container that's used on the Amazon EKS pod. See containers below.
    dnsPolicy : str, default is Undefined, optional
        DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
    hostNetwork : bool, default is Undefined, optional
        Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
    imagePullSecret : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesImagePullSecretItems0], default is Undefined, optional
        List of Kubernetes secret resources. See image_pull_secret below.
    initContainers : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0], default is Undefined, optional
        Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
    metadata : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesMetadata, default is Undefined, optional
        metadata
    serviceAccountName : str, default is Undefined, optional
        Name of the service account that's used to run the pod.
    shareProcessNamespace : bool, default is Undefined, optional
        Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
    volumes : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0], default is Undefined, optional
        Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
    """


    containers?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0]

    dnsPolicy?: str

    hostNetwork?: bool

    imagePullSecret?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesImagePullSecretItems0]

    initContainers?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0]

    metadata?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesMetadata

    serviceAccountName?: str

    shareProcessNamespace?: bool

    volumes?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesImagePullSecretItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties image pull secret items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Unique identifier.
    """


    name?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties init containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
    env : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0], default is Undefined, optional
        Environment variables to pass to a container. See EKS Environment below.
    image : str, default is Undefined, optional
        Docker image used to start the container.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.
    name : str, default is Undefined, optional
        Name of the job definition.
    resources : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    volumeMounts : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume mounts for the container.
    """


    args?: [str]

    command?: [str]

    env?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0]

    image?: str

    imagePullPolicy?: str

    name?: str

    resources?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0Resources

    securityContext?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext

    volumeMounts?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0EnvItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties init containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the job definition.
    value : str, default is Undefined, optional
        Value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0Resources:
    r"""
    Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        limits
    requests : {str:str}, default is Undefined, optional
        requests
    """


    limits?: {str:str}

    requests?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0SecurityContext:
    r"""
    Security context for a job.

    Attributes
    ----------
    privileged : bool, default is Undefined, optional
        privileged
    readOnlyRootFileSystem : bool, default is Undefined, optional
        read only root file system
    runAsGroup : float, default is Undefined, optional
        run as group
    runAsNonRoot : bool, default is Undefined, optional
        run as non root
    runAsUser : float, default is Undefined, optional
        run as user
    """


    privileged?: bool

    readOnlyRootFileSystem?: bool

    runAsGroup?: float

    runAsNonRoot?: bool

    runAsUser?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesInitContainersItems0VolumeMountsItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties init containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    name : str, default is Undefined, optional
        Name of the job definition.
    readOnly : bool, default is Undefined, optional
        read only
    """


    mountPath?: str

    name?: str

    readOnly?: bool


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesMetadata:
    r"""
    Metadata about the Kubernetes pod.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Key-value pairs used to identify, sort, and organize cube resources.
    """


    labels?: {str:str}


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties volumes items0

    Attributes
    ----------
    emptyDir : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    hostPath : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0HostPath, default is Undefined, optional
        host path
    name : str, default is Undefined, optional
        Name of the job definition.
    secret : BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0Secret, default is Undefined, optional
        secret
    """


    emptyDir?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir

    hostPath?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0HostPath

    name?: str

    secret?: BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0Secret


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0EmptyDir:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties volumes items0 empty dir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        Medium to store the volume. The default value is an empty string, which uses the storage of the node.
    sizeLimit : str, default is Undefined, optional
        Maximum size of the volume. By default, there's no maximum size defined.
    """


    medium?: str

    sizeLimit?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0HostPath:
    r"""
    Path of the file or directory on the host to mount into containers on the pod.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path of the file or directory on the host to mount into containers on the pod.
    """


    path?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderEksPropertiesPodPropertiesVolumesItems0Secret:
    r"""
    batch aws upbound io v1beta2 job definition status at provider eks properties pod properties volumes items0 secret

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Whether the secret or the secret's keys must be defined.
    secretName : str, default is Undefined, optional
        Name of the secret. The name must be allowed as a DNS subdomain name.
    """


    optional?: bool

    secretName?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategy:
    r"""
    Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.
    evaluateOnExit : [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategyEvaluateOnExitItems0], default is Undefined, optional
        Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.
    """


    attempts?: float

    evaluateOnExit?: [BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategyEvaluateOnExitItems0]


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderRetryStrategyEvaluateOnExitItems0:
    r"""
    batch aws upbound io v1beta2 job definition status at provider retry strategy evaluate on exit items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.
    onExitCode : str, default is Undefined, optional
        Glob pattern to match against the decimal representation of the exit code returned for a job.
    onReason : str, default is Undefined, optional
        Glob pattern to match against the reason returned for a job.
    onStatusReason : str, default is Undefined, optional
        Glob pattern to match against the status reason returned for a job.
    """


    action?: str

    onExitCode?: str

    onReason?: str

    onStatusReason?: str


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusAtProviderTimeout:
    r"""
    Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.

    Attributes
    ----------
    attemptDurationSeconds : float, default is Undefined, optional
        Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.
    """


    attemptDurationSeconds?: float


schema BatchAwsUpboundIoV1beta2JobDefinitionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


