"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EventSubscription:
    r"""
    EventSubscription is the Schema for the EventSubscriptions API. Provides a DB event subscription resource.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EventSubscription", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1EventSubscriptionSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1EventSubscriptionStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "EventSubscription" = "EventSubscription"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1EventSubscriptionSpec

    status?: RdsAwsUpboundIoV1beta1EventSubscriptionStatus


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpec:
    r"""
    EventSubscriptionSpec defines the desired state of EventSubscription

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1EventSubscriptionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProvider:
    r"""
    rds aws upbound io v1beta1 event subscription spec for provider

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        A boolean flag to enable/disable the subscription. Defaults to true.
    eventCategories : [str], default is Undefined, optional
        A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run aws rds describe-event-categories.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    snsTopic : str, default is Undefined, optional
        The SNS topic to send events to.
    snsTopicRef : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRef, default is Undefined, optional
        sns topic ref
    snsTopicSelector : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelector, default is Undefined, optional
        sns topic selector
    sourceIds : [str], default is Undefined, optional
        A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
    sourceIdsRefs : [RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0], default is Undefined, optional
        References to Instance in rds to populate sourceIds.
    sourceIdsSelector : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelector, default is Undefined, optional
        source ids selector
    sourceType : str, default is Undefined, optional
        The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster, db-cluster-snapshot, or db-proxy. If not set, all sources will be subscribed to.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    enabled?: bool

    eventCategories?: [str]

    region: str

    snsTopic?: str

    snsTopicRef?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRef

    snsTopicSelector?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelector

    sourceIds?: [str]

    sourceIdsRefs?: [RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0]

    sourceIdsSelector?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelector

    sourceType?: str

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRef:
    r"""
    Reference to a Topic in sns to populate snsTopic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRefPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelector:
    r"""
    Selector for a Topic in sns to populate snsTopic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelectorPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSnsTopicSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0Policy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelector:
    r"""
    Selector for a list of Instance in rds to populate sourceIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelectorPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecForProviderSourceIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        A boolean flag to enable/disable the subscription. Defaults to true.
    eventCategories : [str], default is Undefined, optional
        A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run aws rds describe-event-categories.
    snsTopic : str, default is Undefined, optional
        The SNS topic to send events to.
    snsTopicRef : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRef, default is Undefined, optional
        sns topic ref
    snsTopicSelector : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelector, default is Undefined, optional
        sns topic selector
    sourceIds : [str], default is Undefined, optional
        A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
    sourceIdsRefs : [RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0], default is Undefined, optional
        References to Instance in rds to populate sourceIds.
    sourceIdsSelector : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelector, default is Undefined, optional
        source ids selector
    sourceType : str, default is Undefined, optional
        The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster, db-cluster-snapshot, or db-proxy. If not set, all sources will be subscribed to.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    enabled?: bool

    eventCategories?: [str]

    snsTopic?: str

    snsTopicRef?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRef

    snsTopicSelector?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelector

    sourceIds?: [str]

    sourceIdsRefs?: [RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0]

    sourceIdsSelector?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelector

    sourceType?: str

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRef:
    r"""
    Reference to a Topic in sns to populate snsTopic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRefPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelector:
    r"""
    Selector for a Topic in sns to populate snsTopic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelectorPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSnsTopicSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0Policy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelector:
    r"""
    Selector for a list of Instance in rds to populate sourceIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelectorPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecInitProviderSourceIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1EventSubscriptionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1EventSubscriptionStatus:
    r"""
    EventSubscriptionStatus defines the observed state of EventSubscription.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1EventSubscriptionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1EventSubscriptionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1EventSubscriptionStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1EventSubscriptionStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1EventSubscriptionStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 event subscription status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name of the RDS event notification subscription
    customerAwsId : str, default is Undefined, optional
        The AWS customer account associated with the RDS event notification subscription
    enabled : bool, default is Undefined, optional
        A boolean flag to enable/disable the subscription. Defaults to true.
    eventCategories : [str], default is Undefined, optional
        A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run aws rds describe-event-categories.
    id : str, default is Undefined, optional
        The name of the RDS event notification subscription
    snsTopic : str, default is Undefined, optional
        The SNS topic to send events to.
    sourceIds : [str], default is Undefined, optional
        A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
    sourceType : str, default is Undefined, optional
        The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster, db-cluster-snapshot, or db-proxy. If not set, all sources will be subscribed to.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    customerAwsId?: str

    enabled?: bool

    eventCategories?: [str]

    id?: str

    snsTopic?: str

    sourceIds?: [str]

    sourceType?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema RdsAwsUpboundIoV1beta1EventSubscriptionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


