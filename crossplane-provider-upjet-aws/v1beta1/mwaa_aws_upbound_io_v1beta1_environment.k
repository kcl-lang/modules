"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Environment:
    r"""
    Environment is the Schema for the Environments API. Creates a MWAA Environment

    Attributes
    ----------
    apiVersion : str, default is "mwaa.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Environment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MwaaAwsUpboundIoV1beta1EnvironmentSpec, default is Undefined, required
        spec
    status : MwaaAwsUpboundIoV1beta1EnvironmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "mwaa.aws.upbound.io/v1beta1" = "mwaa.aws.upbound.io/v1beta1"

    kind: "Environment" = "Environment"

    metadata?: v1.ObjectMeta

    spec: MwaaAwsUpboundIoV1beta1EnvironmentSpec

    status?: MwaaAwsUpboundIoV1beta1EnvironmentStatus


schema MwaaAwsUpboundIoV1beta1EnvironmentSpec:
    r"""
    EnvironmentSpec defines the desired state of Environment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProvider

    initProvider?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef

    publishConnectionDetailsTo?: MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProvider:
    r"""
    mwaa aws upbound io v1beta1 environment spec for provider

    Attributes
    ----------
    airflowConfigurationOptionsSecretRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderAirflowConfigurationOptionsSecretRef, default is Undefined, optional
        airflow configuration options secret ref
    airflowVersion : str, default is Undefined, optional
        Airflow version of your environment, will be set by default to the latest version that MWAA supports.
    dagS3Path : str, default is Undefined, optional
        The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see Importing DAGs on Amazon MWAA.
    endpointManagement : str, default is Undefined, optional
        Defines whether the VPC endpoints configured for the environment are created and managed by the customer or by AWS. If set to SERVICE, Amazon MWAA will create and manage the required VPC endpoints in your VPC. If set to CUSTOMER, you must create, and manage, the VPC endpoints for your VPC. Defaults to SERVICE if not set.
    environmentClass : str, default is Undefined, optional
        Environment class for the cluster. Possible options are mw1.small, mw1.medium, mw1.large. Will be set by default to mw1.small. Please check the AWS Pricing for more information about the environment classes.
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the official AWS documentation for the detailed role specification.
    executionRoleArnRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    kmsKey : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your KMS key that you want to use for encryption. Will be set to the ARN of the managed KMS key aws/airflow by default. Please check the Official Documentation for more information.
    kmsKeyRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRef, default is Undefined, optional
        kms key ref
    kmsKeySelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelector, default is Undefined, optional
        kms key selector
    loggingConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    maxWebservers : float, default is Undefined, optional
        The maximum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    maxWorkers : float, default is Undefined, optional
        The maximum number of workers that can be automatically scaled up. Value need to be between 1 and 25. Will be 10 by default.
    minWebservers : float, default is Undefined, optional
        The minimum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    minWorkers : float, default is Undefined, optional
        The minimum number of workers that you want to run in your environment. Will be 1 by default.
    networkConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    pluginsS3ObjectVersion : str, default is Undefined, optional
        The plugins.zip file version you want to use.
    pluginsS3Path : str, default is Undefined, optional
        The relative path to the plugins.zip file on your Amazon S3 storage bucket. For example, plugins.zip. If a relative path is provided in the request, then plugins_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requirementsS3ObjectVersion : str, default is Undefined, optional
        The requirements.txt file version you want to use.
    requirementsS3Path : str, default is Undefined, optional
        The relative path to the requirements.txt file on your Amazon S3 storage bucket. For example, requirements.txt. If a relative path is provided in the request, then requirements_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    schedulers : float, default is Undefined, optional
        The number of schedulers that you want to run in your environment. v2.0.2 and above accepts 2 - 5, default 2. v1.10.12 accepts 1.
    sourceBucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname.
    sourceBucketArnRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRef, default is Undefined, optional
        source bucket arn ref
    sourceBucketArnSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelector, default is Undefined, optional
        source bucket arn selector
    startupScriptS3ObjectVersion : str, default is Undefined, optional
        The version of the startup shell script you want to use. You must specify the version ID that Amazon S3 assigns to the file every time you update the script.
    startupScriptS3Path : str, default is Undefined, optional
        The relative path to the script hosted in your bucket. The script runs as your environment starts before starting the Apache Airflow process. Use this script to install dependencies, modify configuration options, and set environment variables. See Using a startup script. Supported for environment versions 2.x and later.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    webserverAccessMode : str, default is Undefined, optional
        Specifies whether the webserver should be accessible over the internet or via your specified VPC. Possible options: PRIVATE_ONLY (default) and PUBLIC_ONLY.
    weeklyMaintenanceWindowStart : str, default is Undefined, optional
        Specifies the start date for the weekly maintenance window.
    """


    airflowConfigurationOptionsSecretRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderAirflowConfigurationOptionsSecretRef

    airflowVersion?: str

    dagS3Path?: str

    endpointManagement?: str

    environmentClass?: str

    executionRoleArn?: str

    executionRoleArnRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRef

    executionRoleArnSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelector

    kmsKey?: str

    kmsKeyRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRef

    kmsKeySelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelector

    loggingConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfiguration

    maxWebservers?: float

    maxWorkers?: float

    minWebservers?: float

    minWorkers?: float

    networkConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfiguration

    pluginsS3ObjectVersion?: str

    pluginsS3Path?: str

    region: str

    requirementsS3ObjectVersion?: str

    requirementsS3Path?: str

    schedulers?: float

    sourceBucketArn?: str

    sourceBucketArnRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRef

    sourceBucketArnSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelector

    startupScriptS3ObjectVersion?: str

    startupScriptS3Path?: str

    tags?: {str:str}

    webserverAccessMode?: str

    weeklyMaintenanceWindowStart?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderAirflowConfigurationOptionsSecretRef:
    r"""
    The airflow_configuration_options parameter specifies airflow override options. Check the Official documentation for all possible configuration options.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRef:
    r"""
    Reference to a Key in kms to populate kmsKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelector:
    r"""
    Selector for a Key in kms to populate kmsKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderKmsKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfiguration:
    r"""
    The Apache Airflow logs you want to send to Amazon CloudWatch Logs. See logging_configuration Block for details.

    Attributes
    ----------
    dagProcessingLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationDagProcessingLogs, default is Undefined, optional
        dag processing logs
    schedulerLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationSchedulerLogs, default is Undefined, optional
        scheduler logs
    taskLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationTaskLogs, default is Undefined, optional
        task logs
    webserverLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWebserverLogs, default is Undefined, optional
        webserver logs
    workerLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWorkerLogs, default is Undefined, optional
        worker logs
    """


    dagProcessingLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationDagProcessingLogs

    schedulerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationSchedulerLogs

    taskLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationTaskLogs

    webserverLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWebserverLogs

    workerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWorkerLogs


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationDagProcessingLogs:
    r"""
    Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationSchedulerLogs:
    r"""
    Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationTaskLogs:
    r"""
    Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with INFO log level.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWebserverLogs:
    r"""
    Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderLoggingConfigurationWorkerLogs:
    r"""
    Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfiguration:
    r"""
    Specifies the network configuration for your Apache Airflow Environment. This includes two private subnets as well as security groups for the Airflow environment. Each subnet requires internet connection, otherwise the deployment will fail. See network_configuration Block for details.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
    securityGroupIdsRefs : [MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The private subnet IDs in which the environment should be created. MWAA requires two subnets.
    subnetIdsRefs : [MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0]

    subnetIdsSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelector


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0Policy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderNetworkConfigurationSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate sourceBucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate sourceBucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecForProviderSourceBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    airflowConfigurationOptionsSecretRef : {str:str}, default is Undefined, optional
        airflow configuration options secret ref
    airflowVersion : str, default is Undefined, optional
        Airflow version of your environment, will be set by default to the latest version that MWAA supports.
    dagS3Path : str, default is Undefined, optional
        The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see Importing DAGs on Amazon MWAA.
    endpointManagement : str, default is Undefined, optional
        Defines whether the VPC endpoints configured for the environment are created and managed by the customer or by AWS. If set to SERVICE, Amazon MWAA will create and manage the required VPC endpoints in your VPC. If set to CUSTOMER, you must create, and manage, the VPC endpoints for your VPC. Defaults to SERVICE if not set.
    environmentClass : str, default is Undefined, optional
        Environment class for the cluster. Possible options are mw1.small, mw1.medium, mw1.large. Will be set by default to mw1.small. Please check the AWS Pricing for more information about the environment classes.
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the official AWS documentation for the detailed role specification.
    executionRoleArnRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    kmsKey : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your KMS key that you want to use for encryption. Will be set to the ARN of the managed KMS key aws/airflow by default. Please check the Official Documentation for more information.
    kmsKeyRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRef, default is Undefined, optional
        kms key ref
    kmsKeySelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelector, default is Undefined, optional
        kms key selector
    loggingConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    maxWebservers : float, default is Undefined, optional
        The maximum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    maxWorkers : float, default is Undefined, optional
        The maximum number of workers that can be automatically scaled up. Value need to be between 1 and 25. Will be 10 by default.
    minWebservers : float, default is Undefined, optional
        The minimum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    minWorkers : float, default is Undefined, optional
        The minimum number of workers that you want to run in your environment. Will be 1 by default.
    networkConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    pluginsS3ObjectVersion : str, default is Undefined, optional
        The plugins.zip file version you want to use.
    pluginsS3Path : str, default is Undefined, optional
        The relative path to the plugins.zip file on your Amazon S3 storage bucket. For example, plugins.zip. If a relative path is provided in the request, then plugins_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    requirementsS3ObjectVersion : str, default is Undefined, optional
        The requirements.txt file version you want to use.
    requirementsS3Path : str, default is Undefined, optional
        The relative path to the requirements.txt file on your Amazon S3 storage bucket. For example, requirements.txt. If a relative path is provided in the request, then requirements_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    schedulers : float, default is Undefined, optional
        The number of schedulers that you want to run in your environment. v2.0.2 and above accepts 2 - 5, default 2. v1.10.12 accepts 1.
    sourceBucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname.
    sourceBucketArnRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRef, default is Undefined, optional
        source bucket arn ref
    sourceBucketArnSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelector, default is Undefined, optional
        source bucket arn selector
    startupScriptS3ObjectVersion : str, default is Undefined, optional
        The version of the startup shell script you want to use. You must specify the version ID that Amazon S3 assigns to the file every time you update the script.
    startupScriptS3Path : str, default is Undefined, optional
        The relative path to the script hosted in your bucket. The script runs as your environment starts before starting the Apache Airflow process. Use this script to install dependencies, modify configuration options, and set environment variables. See Using a startup script. Supported for environment versions 2.x and later.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    webserverAccessMode : str, default is Undefined, optional
        Specifies whether the webserver should be accessible over the internet or via your specified VPC. Possible options: PRIVATE_ONLY (default) and PUBLIC_ONLY.
    weeklyMaintenanceWindowStart : str, default is Undefined, optional
        Specifies the start date for the weekly maintenance window.
    """


    airflowConfigurationOptionsSecretRef?: {str:str}

    airflowVersion?: str

    dagS3Path?: str

    endpointManagement?: str

    environmentClass?: str

    executionRoleArn?: str

    executionRoleArnRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRef

    executionRoleArnSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelector

    kmsKey?: str

    kmsKeyRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRef

    kmsKeySelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelector

    loggingConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfiguration

    maxWebservers?: float

    maxWorkers?: float

    minWebservers?: float

    minWorkers?: float

    networkConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfiguration

    pluginsS3ObjectVersion?: str

    pluginsS3Path?: str

    requirementsS3ObjectVersion?: str

    requirementsS3Path?: str

    schedulers?: float

    sourceBucketArn?: str

    sourceBucketArnRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRef

    sourceBucketArnSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelector

    startupScriptS3ObjectVersion?: str

    startupScriptS3Path?: str

    tags?: {str:str}

    webserverAccessMode?: str

    weeklyMaintenanceWindowStart?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRef:
    r"""
    Reference to a Key in kms to populate kmsKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelector:
    r"""
    Selector for a Key in kms to populate kmsKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderKmsKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfiguration:
    r"""
    The Apache Airflow logs you want to send to Amazon CloudWatch Logs. See logging_configuration Block for details.

    Attributes
    ----------
    dagProcessingLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationDagProcessingLogs, default is Undefined, optional
        dag processing logs
    schedulerLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationSchedulerLogs, default is Undefined, optional
        scheduler logs
    taskLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationTaskLogs, default is Undefined, optional
        task logs
    webserverLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWebserverLogs, default is Undefined, optional
        webserver logs
    workerLogs : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWorkerLogs, default is Undefined, optional
        worker logs
    """


    dagProcessingLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationDagProcessingLogs

    schedulerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationSchedulerLogs

    taskLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationTaskLogs

    webserverLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWebserverLogs

    workerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWorkerLogs


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationDagProcessingLogs:
    r"""
    Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationSchedulerLogs:
    r"""
    Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationTaskLogs:
    r"""
    Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with INFO log level.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWebserverLogs:
    r"""
    Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderLoggingConfigurationWorkerLogs:
    r"""
    Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfiguration:
    r"""
    Specifies the network configuration for your Apache Airflow Environment. This includes two private subnets as well as security groups for the Airflow environment. Each subnet requires internet connection, otherwise the deployment will fail. See network_configuration Block for details.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
    securityGroupIdsRefs : [MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        The private subnet IDs in which the environment should be created. MWAA requires two subnets.
    subnetIdsRefs : [MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelector

    subnetIds?: [str]

    subnetIdsRefs?: [MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0]

    subnetIdsSelector?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelector


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0Policy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderNetworkConfigurationSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate sourceBucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate sourceBucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelectorPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecInitProviderSourceBucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef

    metadata?: MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata

    name: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatus:
    r"""
    EnvironmentStatus defines the observed state of Environment.

    Attributes
    ----------
    atProvider : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MwaaAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProvider

    conditions?: [MwaaAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0]

    observedGeneration?: int


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProvider:
    r"""
    mwaa aws upbound io v1beta1 environment status at provider

    Attributes
    ----------
    airflowVersion : str, default is Undefined, optional
        Airflow version of your environment, will be set by default to the latest version that MWAA supports.
    arn : str, default is Undefined, optional
        The ARN of the MWAA Environment
    createdAt : str, default is Undefined, optional
        The Created At date of the MWAA Environment
    dagS3Path : str, default is Undefined, optional
        The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see Importing DAGs on Amazon MWAA.
    databaseVpcEndpointService : str, default is Undefined, optional
        The VPC endpoint for the environment's Amazon RDS database
    endpointManagement : str, default is Undefined, optional
        Defines whether the VPC endpoints configured for the environment are created and managed by the customer or by AWS. If set to SERVICE, Amazon MWAA will create and manage the required VPC endpoints in your VPC. If set to CUSTOMER, you must create, and manage, the VPC endpoints for your VPC. Defaults to SERVICE if not set.
    environmentClass : str, default is Undefined, optional
        Environment class for the cluster. Possible options are mw1.small, mw1.medium, mw1.large. Will be set by default to mw1.small. Please check the AWS Pricing for more information about the environment classes.
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the official AWS documentation for the detailed role specification.
    id : str, default is Undefined, optional
        id
    kmsKey : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your KMS key that you want to use for encryption. Will be set to the ARN of the managed KMS key aws/airflow by default. Please check the Official Documentation for more information.
    lastUpdated : [MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0], default is Undefined, optional
        last updated
    loggingConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    maxWebservers : float, default is Undefined, optional
        The maximum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    maxWorkers : float, default is Undefined, optional
        The maximum number of workers that can be automatically scaled up. Value need to be between 1 and 25. Will be 10 by default.
    minWebservers : float, default is Undefined, optional
        The minimum number of web servers that you want to run in your environment. Value need to be between 2 and 5. Will be 2 by default.
    minWorkers : float, default is Undefined, optional
        The minimum number of workers that you want to run in your environment. Will be 1 by default.
    networkConfiguration : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    pluginsS3ObjectVersion : str, default is Undefined, optional
        The plugins.zip file version you want to use.
    pluginsS3Path : str, default is Undefined, optional
        The relative path to the plugins.zip file on your Amazon S3 storage bucket. For example, plugins.zip. If a relative path is provided in the request, then plugins_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    requirementsS3ObjectVersion : str, default is Undefined, optional
        The requirements.txt file version you want to use.
    requirementsS3Path : str, default is Undefined, optional
        The relative path to the requirements.txt file on your Amazon S3 storage bucket. For example, requirements.txt. If a relative path is provided in the request, then requirements_s3_object_version is required. For more information, see Importing DAGs on Amazon MWAA.
    schedulers : float, default is Undefined, optional
        The number of schedulers that you want to run in your environment. v2.0.2 and above accepts 2 - 5, default 2. v1.10.12 accepts 1.
    serviceRoleArn : str, default is Undefined, optional
        The Service Role ARN of the Amazon MWAA Environment
    sourceBucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname.
    startupScriptS3ObjectVersion : str, default is Undefined, optional
        The version of the startup shell script you want to use. You must specify the version ID that Amazon S3 assigns to the file every time you update the script.
    startupScriptS3Path : str, default is Undefined, optional
        The relative path to the script hosted in your bucket. The script runs as your environment starts before starting the Apache Airflow process. Use this script to install dependencies, modify configuration options, and set environment variables. See Using a startup script. Supported for environment versions 2.x and later.
    status : str, default is Undefined, optional
        The status of the Amazon MWAA Environment
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    webserverAccessMode : str, default is Undefined, optional
        Specifies whether the webserver should be accessible over the internet or via your specified VPC. Possible options: PRIVATE_ONLY (default) and PUBLIC_ONLY.
    webserverUrl : str, default is Undefined, optional
        The webserver URL of the MWAA Environment
    webserverVpcEndpointService : str, default is Undefined, optional
        The VPC endpoint for the environment's web server
    weeklyMaintenanceWindowStart : str, default is Undefined, optional
        Specifies the start date for the weekly maintenance window.
    """


    airflowVersion?: str

    arn?: str

    createdAt?: str

    dagS3Path?: str

    databaseVpcEndpointService?: str

    endpointManagement?: str

    environmentClass?: str

    executionRoleArn?: str

    id?: str

    kmsKey?: str

    lastUpdated?: [MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0]

    loggingConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfiguration

    maxWebservers?: float

    maxWorkers?: float

    minWebservers?: float

    minWorkers?: float

    networkConfiguration?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderNetworkConfiguration

    pluginsS3ObjectVersion?: str

    pluginsS3Path?: str

    requirementsS3ObjectVersion?: str

    requirementsS3Path?: str

    schedulers?: float

    serviceRoleArn?: str

    sourceBucketArn?: str

    startupScriptS3ObjectVersion?: str

    startupScriptS3Path?: str

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    webserverAccessMode?: str

    webserverUrl?: str

    webserverVpcEndpointService?: str

    weeklyMaintenanceWindowStart?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0:
    r"""
    mwaa aws upbound io v1beta1 environment status at provider last updated items0

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        The Created At date of the MWAA Environment
    error : [MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0ErrorItems0], default is Undefined, optional
        error
    status : str, default is Undefined, optional
        The status of the Amazon MWAA Environment
    """


    createdAt?: str

    error?: [MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0ErrorItems0]

    status?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLastUpdatedItems0ErrorItems0:
    r"""
    mwaa aws upbound io v1beta1 environment status at provider last updated items0 error items0

    Attributes
    ----------
    errorCode : str, default is Undefined, optional
        error code
    errorMessage : str, default is Undefined, optional
        error message
    """


    errorCode?: str

    errorMessage?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfiguration:
    r"""
    The Apache Airflow logs you want to send to Amazon CloudWatch Logs. See logging_configuration Block for details.

    Attributes
    ----------
    dagProcessingLogs : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationDagProcessingLogs, default is Undefined, optional
        dag processing logs
    schedulerLogs : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationSchedulerLogs, default is Undefined, optional
        scheduler logs
    taskLogs : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationTaskLogs, default is Undefined, optional
        task logs
    webserverLogs : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWebserverLogs, default is Undefined, optional
        webserver logs
    workerLogs : MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWorkerLogs, default is Undefined, optional
        worker logs
    """


    dagProcessingLogs?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationDagProcessingLogs

    schedulerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationSchedulerLogs

    taskLogs?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationTaskLogs

    webserverLogs?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWebserverLogs

    workerLogs?: MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWorkerLogs


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationDagProcessingLogs:
    r"""
    Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    cloudWatchLogGroupArn : str, default is Undefined, optional
        Provides the ARN for the CloudWatch group where the logs will be published
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    cloudWatchLogGroupArn?: str

    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationSchedulerLogs:
    r"""
    Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    cloudWatchLogGroupArn : str, default is Undefined, optional
        Provides the ARN for the CloudWatch group where the logs will be published
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    cloudWatchLogGroupArn?: str

    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationTaskLogs:
    r"""
    Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with INFO log level.

    Attributes
    ----------
    cloudWatchLogGroupArn : str, default is Undefined, optional
        Provides the ARN for the CloudWatch group where the logs will be published
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    cloudWatchLogGroupArn?: str

    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWebserverLogs:
    r"""
    Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    cloudWatchLogGroupArn : str, default is Undefined, optional
        Provides the ARN for the CloudWatch group where the logs will be published
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    cloudWatchLogGroupArn?: str

    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderLoggingConfigurationWorkerLogs:
    r"""
    Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.

    Attributes
    ----------
    cloudWatchLogGroupArn : str, default is Undefined, optional
        Provides the ARN for the CloudWatch group where the logs will be published
    enabled : bool, default is Undefined, optional
        Enabling or disabling the collection of logs
    logLevel : str, default is Undefined, optional
        Logging level. Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG. Will be INFO by default.
    """


    cloudWatchLogGroupArn?: str

    enabled?: bool

    logLevel?: str


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusAtProviderNetworkConfiguration:
    r"""
    Specifies the network configuration for your Apache Airflow Environment. This includes two private subnets as well as security groups for the Airflow environment. Each subnet requires internet connection, otherwise the deployment will fail. See network_configuration Block for details.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
    subnetIds : [str], default is Undefined, optional
        The private subnet IDs in which the environment should be created. MWAA requires two subnets.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema MwaaAwsUpboundIoV1beta1EnvironmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


