"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RunnerGroup:
    r"""
    RunnerGroup is the Schema for the RunnerGroups API. Creates and manages an Actions Runner Group within a GitHub organization

    Attributes
    ----------
    apiVersion : str, default is "actions.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RunnerGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ActionsGithubUpboundIoV1alpha1RunnerGroupSpec, default is Undefined, required
        spec
    status : ActionsGithubUpboundIoV1alpha1RunnerGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "actions.github.upbound.io/v1alpha1" = "actions.github.upbound.io/v1alpha1"

    kind: "RunnerGroup" = "RunnerGroup"

    metadata?: v1.ObjectMeta

    spec: ActionsGithubUpboundIoV1alpha1RunnerGroupSpec

    status?: ActionsGithubUpboundIoV1alpha1RunnerGroupStatus


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpec:
    r"""
    RunnerGroupSpec defines the desired state of RunnerGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProvider

    initProvider?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecWriteConnectionSecretToRef


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProvider:
    r"""
    actions github upbound io v1alpha1 runner group spec for provider

    Attributes
    ----------
    allowsPublicRepositories : bool, default is Undefined, optional
        Whether public repositories can be added to the runner group. Defaults to false.
        Whether public repositories can be added to the runner group.
    name : str, default is Undefined, optional
        Name of the runner group
        Name of the runner group.
    nameRef : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRef, default is Undefined, optional
        name ref
    nameSelector : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelector, default is Undefined, optional
        name selector
    restrictedToWorkflows : bool, default is Undefined, optional
        If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
        If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
    selectedRepositoryIds : [int], default is Undefined, optional
        IDs of the repositories which should be added to the runner group
        List of repository IDs that can access the runner group.
    selectedWorkflows : [str], default is Undefined, optional
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
    visibility : str, default is Undefined, optional
        Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
        The visibility of the runner group.
    """


    allowsPublicRepositories?: bool

    name?: str

    nameRef?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRef

    nameSelector?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelector

    restrictedToWorkflows?: bool

    selectedRepositoryIds?: [int]

    selectedWorkflows?: [str]

    visibility?: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRef:
    r"""
    Reference to a Repository in repo to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRefPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelector:
    r"""
    Selector for a Repository in repo to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelectorPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecForProviderNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowsPublicRepositories : bool, default is Undefined, optional
        Whether public repositories can be added to the runner group. Defaults to false.
        Whether public repositories can be added to the runner group.
    name : str, default is Undefined, optional
        Name of the runner group
        Name of the runner group.
    nameRef : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRef, default is Undefined, optional
        name ref
    nameSelector : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelector, default is Undefined, optional
        name selector
    restrictedToWorkflows : bool, default is Undefined, optional
        If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
        If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
    selectedRepositoryIds : [int], default is Undefined, optional
        IDs of the repositories which should be added to the runner group
        List of repository IDs that can access the runner group.
    selectedWorkflows : [str], default is Undefined, optional
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
    visibility : str, default is Undefined, optional
        Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
        The visibility of the runner group.
    """


    allowsPublicRepositories?: bool

    name?: str

    nameRef?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRef

    nameSelector?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelector

    restrictedToWorkflows?: bool

    selectedRepositoryIds?: [int]

    selectedWorkflows?: [str]

    visibility?: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRef:
    r"""
    Reference to a Repository in repo to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRefPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelector:
    r"""
    Selector for a Repository in repo to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelectorPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecInitProviderNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRefPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupStatus:
    r"""
    RunnerGroupStatus defines the observed state of RunnerGroup.

    Attributes
    ----------
    atProvider : ActionsGithubUpboundIoV1alpha1RunnerGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ActionsGithubUpboundIoV1alpha1RunnerGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ActionsGithubUpboundIoV1alpha1RunnerGroupStatusAtProvider

    conditions?: [ActionsGithubUpboundIoV1alpha1RunnerGroupStatusConditionsItems0]

    observedGeneration?: int


schema ActionsGithubUpboundIoV1alpha1RunnerGroupStatusAtProvider:
    r"""
    actions github upbound io v1alpha1 runner group status at provider

    Attributes
    ----------
    allowsPublicRepositories : bool, default is Undefined, optional
        Whether public repositories can be added to the runner group. Defaults to false.
        Whether public repositories can be added to the runner group.
    default : bool, default is Undefined, optional
        Whether this is the default runner group
        Whether this is the default runner group.
    etag : str, default is Undefined, optional
        An etag representing the runner group object
        An etag representing the runner group object
    id : str, default is Undefined, optional
        id
    inherited : bool, default is Undefined, optional
        Whether the runner group is inherited from the enterprise level
        Whether the runner group is inherited from the enterprise level
    name : str, default is Undefined, optional
        Name of the runner group
        Name of the runner group.
    restrictedToWorkflows : bool, default is Undefined, optional
        If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
        If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
    runnersUrl : str, default is Undefined, optional
        The GitHub API URL for the runner group's runners
        The GitHub API URL for the runner group's runners.
    selectedRepositoriesUrl : str, default is Undefined, optional
        GitHub API URL for the runner group's repositories
        GitHub API URL for the runner group's repositories.
    selectedRepositoryIds : [int], default is Undefined, optional
        IDs of the repositories which should be added to the runner group
        List of repository IDs that can access the runner group.
    selectedWorkflows : [str], default is Undefined, optional
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
        List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
    visibility : str, default is Undefined, optional
        Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
        The visibility of the runner group.
    """


    allowsPublicRepositories?: bool

    default?: bool

    etag?: str

    id?: str

    inherited?: bool

    name?: str

    restrictedToWorkflows?: bool

    runnersUrl?: str

    selectedRepositoriesUrl?: str

    selectedRepositoryIds?: [int]

    selectedWorkflows?: [str]

    visibility?: str


schema ActionsGithubUpboundIoV1alpha1RunnerGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


