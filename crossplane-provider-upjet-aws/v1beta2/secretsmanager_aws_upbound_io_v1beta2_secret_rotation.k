"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecretRotation:
    r"""
    SecretRotation is the Schema for the SecretRotations API. Provides a resource to manage AWS Secrets Manager secret rotation

    Attributes
    ----------
    apiVersion : str, default is "secretsmanager.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecretRotation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpec, default is Undefined, required
        spec
    status : SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatus, default is Undefined, optional
        status
    """


    apiVersion: "secretsmanager.aws.upbound.io/v1beta2" = "secretsmanager.aws.upbound.io/v1beta2"

    kind: "SecretRotation" = "SecretRotation"

    metadata?: v1.ObjectMeta

    spec: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpec

    status?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatus


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpec:
    r"""
    SecretRotationSpec defines the desired state of SecretRotation

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProvider, default is Undefined, required
        for provider
    initProvider : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProvider

    initProvider?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRef

    publishConnectionDetailsTo?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecWriteConnectionSecretToRef


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProvider:
    r"""
    secretsmanager aws upbound io v1beta2 secret rotation spec for provider

    Attributes
    ----------
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rotateImmediately : bool, default is Undefined, optional
        Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window. The rotation schedule is defined in rotation_rules. For secrets that use a Lambda rotation function to rotate, if you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the testSecret step (https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) of the Lambda rotation function. The test creates an AWSPENDING version of the secret and then removes it. Defaults to true.
    rotationLambdaArn : str, default is Undefined, optional
        Specifies the ARN of the Lambda function that can rotate the secret. Must be supplied if the secret is not managed by AWS.
    rotationLambdaArnRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRef, default is Undefined, optional
        rotation lambda arn ref
    rotationLambdaArnSelector : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelector, default is Undefined, optional
        rotation lambda arn selector
    rotationRules : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationRules, default is Undefined, optional
        rotation rules
    secretId : str, default is Undefined, optional
        Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
    secretIdRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRef, default is Undefined, optional
        secret Id ref
    secretIdSelector : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelector, default is Undefined, optional
        secret Id selector
    """


    region: str

    rotateImmediately?: bool

    rotationLambdaArn?: str

    rotationLambdaArnRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRef

    rotationLambdaArnSelector?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelector

    rotationRules?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationRules

    secretId?: str

    secretIdRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRef

    secretIdSelector?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelector


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRef:
    r"""
    Reference to a Function in lambda to populate rotationLambdaArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelector:
    r"""
    Selector for a Function in lambda to populate rotationLambdaArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelectorPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationLambdaArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderRotationRules:
    r"""
    A structure that defines the rotation configuration for this secret. Defined below.

    Attributes
    ----------
    automaticallyAfterDays : float, default is Undefined, optional
        Specifies the number of days between automatic scheduled rotations of the secret. Either automatically_after_days or schedule_expression must be specified.
    duration : str, default is Undefined, optional
        - The length of the rotation window in hours. For example, 3h for a three hour window.
    scheduleExpression : str, default is Undefined, optional
        A cron() or rate() expression that defines the schedule for rotating your secret. Either automatically_after_days or schedule_expression must be specified.
    """


    automaticallyAfterDays?: float

    duration?: str

    scheduleExpression?: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRef:
    r"""
    Reference to a Secret in secretsmanager to populate secretId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelector:
    r"""
    Selector for a Secret in secretsmanager to populate secretId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelectorPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecForProviderSecretIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    rotateImmediately : bool, default is Undefined, optional
        Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window. The rotation schedule is defined in rotation_rules. For secrets that use a Lambda rotation function to rotate, if you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the testSecret step (https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) of the Lambda rotation function. The test creates an AWSPENDING version of the secret and then removes it. Defaults to true.
    rotationLambdaArn : str, default is Undefined, optional
        Specifies the ARN of the Lambda function that can rotate the secret. Must be supplied if the secret is not managed by AWS.
    rotationLambdaArnRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRef, default is Undefined, optional
        rotation lambda arn ref
    rotationLambdaArnSelector : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelector, default is Undefined, optional
        rotation lambda arn selector
    rotationRules : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationRules, default is Undefined, optional
        rotation rules
    secretId : str, default is Undefined, optional
        Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
    secretIdRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRef, default is Undefined, optional
        secret Id ref
    secretIdSelector : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelector, default is Undefined, optional
        secret Id selector
    """


    rotateImmediately?: bool

    rotationLambdaArn?: str

    rotationLambdaArnRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRef

    rotationLambdaArnSelector?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelector

    rotationRules?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationRules

    secretId?: str

    secretIdRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRef

    secretIdSelector?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelector


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRef:
    r"""
    Reference to a Function in lambda to populate rotationLambdaArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelector:
    r"""
    Selector for a Function in lambda to populate rotationLambdaArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelectorPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationLambdaArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderRotationRules:
    r"""
    A structure that defines the rotation configuration for this secret. Defined below.

    Attributes
    ----------
    automaticallyAfterDays : float, default is Undefined, optional
        Specifies the number of days between automatic scheduled rotations of the secret. Either automatically_after_days or schedule_expression must be specified.
    duration : str, default is Undefined, optional
        - The length of the rotation window in hours. For example, 3h for a three hour window.
    scheduleExpression : str, default is Undefined, optional
        A cron() or rate() expression that defines the schedule for rotating your secret. Either automatically_after_days or schedule_expression must be specified.
    """


    automaticallyAfterDays?: float

    duration?: str

    scheduleExpression?: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRef:
    r"""
    Reference to a Secret in secretsmanager to populate secretId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelector:
    r"""
    Selector for a Secret in secretsmanager to populate secretId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelectorPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecInitProviderSecretIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRef

    metadata?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToMetadata

    name: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRefPolicy


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatus:
    r"""
    SecretRotationStatus defines the observed state of SecretRotation.

    Attributes
    ----------
    atProvider : SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProvider

    conditions?: [SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusConditionsItems0]

    observedGeneration?: int


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProvider:
    r"""
    secretsmanager aws upbound io v1beta2 secret rotation status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the secret.
    rotateImmediately : bool, default is Undefined, optional
        Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window. The rotation schedule is defined in rotation_rules. For secrets that use a Lambda rotation function to rotate, if you don't immediately rotate the secret, Secrets Manager tests the rotation configuration by running the testSecret step (https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html) of the Lambda rotation function. The test creates an AWSPENDING version of the secret and then removes it. Defaults to true.
    rotationEnabled : bool, default is Undefined, optional
        Specifies whether automatic rotation is enabled for this secret.
    rotationLambdaArn : str, default is Undefined, optional
        Specifies the ARN of the Lambda function that can rotate the secret. Must be supplied if the secret is not managed by AWS.
    rotationRules : SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProviderRotationRules, default is Undefined, optional
        rotation rules
    secretId : str, default is Undefined, optional
        Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
    """


    id?: str

    rotateImmediately?: bool

    rotationEnabled?: bool

    rotationLambdaArn?: str

    rotationRules?: SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProviderRotationRules

    secretId?: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusAtProviderRotationRules:
    r"""
    A structure that defines the rotation configuration for this secret. Defined below.

    Attributes
    ----------
    automaticallyAfterDays : float, default is Undefined, optional
        Specifies the number of days between automatic scheduled rotations of the secret. Either automatically_after_days or schedule_expression must be specified.
    duration : str, default is Undefined, optional
        - The length of the rotation window in hours. For example, 3h for a three hour window.
    scheduleExpression : str, default is Undefined, optional
        A cron() or rate() expression that defines the schedule for rotating your secret. Either automatically_after_days or schedule_expression must be specified.
    """


    automaticallyAfterDays?: float

    duration?: str

    scheduleExpression?: str


schema SecretsmanagerAwsUpboundIoV1beta2SecretRotationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


