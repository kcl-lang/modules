"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BucketNotification:
    r"""
    BucketNotification is the Schema for the BucketNotifications API. Manages a S3 Bucket Notification Configuration

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BucketNotification", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1BucketNotificationSpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1BucketNotificationStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "BucketNotification" = "BucketNotification"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1BucketNotificationSpec

    status?: S3AwsUpboundIoV1beta1BucketNotificationStatus


schema S3AwsUpboundIoV1beta1BucketNotificationSpec:
    r"""
    BucketNotificationSpec defines the desired state of BucketNotification

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1BucketNotificationSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1BucketNotificationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1BucketNotificationSpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProvider:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket for notification configuration.
    bucketRef : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    eventbridge : bool, default is Undefined, optional
        Whether to enable Amazon EventBridge notifications. Defaults to false.
    lambdaFunction : [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderLambdaFunctionItems0], default is Undefined, optional
        Used to configure notifications to a Lambda Function. See below.
    queue : [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0], default is Undefined, optional
        Notification configuration to SQS Queue. See below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    topic : [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0], default is Undefined, optional
        Notification configuration to SNS Topic. See below.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelector

    eventbridge?: bool

    lambdaFunction?: [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderLambdaFunctionItems0]

    queue?: [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0]

    region: str

    topic?: [S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0]


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderLambdaFunctionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec for provider lambda function items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    lambdaFunctionArn : str, default is Undefined, optional
        Lambda function ARN.
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    lambdaFunctionArn?: str


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec for provider queue items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Specifies event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    queueArn : str, default is Undefined, optional
        SQS queue ARN.
    queueArnRef : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRef, default is Undefined, optional
        queue arn ref
    queueArnSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelector, default is Undefined, optional
        queue arn selector
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    queueArn?: str

    queueArnRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRef

    queueArnSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelector


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRef:
    r"""
    Reference to a Queue in sqs to populate queueArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelector:
    r"""
    Selector for a Queue in sqs to populate queueArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderQueueItems0QueueArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec for provider topic items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    topicArn : str, default is Undefined, optional
        SNS topic ARN.
    topicArnRef : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    topicArn?: str

    topicArnRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRef

    topicArnSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelector


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecForProviderTopicItems0TopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket for notification configuration.
    bucketRef : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    eventbridge : bool, default is Undefined, optional
        Whether to enable Amazon EventBridge notifications. Defaults to false.
    lambdaFunction : [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderLambdaFunctionItems0], default is Undefined, optional
        Used to configure notifications to a Lambda Function. See below.
    queue : [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0], default is Undefined, optional
        Notification configuration to SQS Queue. See below.
    topic : [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0], default is Undefined, optional
        Notification configuration to SNS Topic. See below.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelector

    eventbridge?: bool

    lambdaFunction?: [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderLambdaFunctionItems0]

    queue?: [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0]

    topic?: [S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0]


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderLambdaFunctionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec init provider lambda function items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    lambdaFunctionArn : str, default is Undefined, optional
        Lambda function ARN.
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    lambdaFunctionArn?: str


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec init provider queue items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Specifies event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    queueArn : str, default is Undefined, optional
        SQS queue ARN.
    queueArnRef : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRef, default is Undefined, optional
        queue arn ref
    queueArnSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelector, default is Undefined, optional
        queue arn selector
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    queueArn?: str

    queueArnRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRef

    queueArnSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelector


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRef:
    r"""
    Reference to a Queue in sqs to populate queueArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelector:
    r"""
    Selector for a Queue in sqs to populate queueArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderQueueItems0QueueArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification spec init provider topic items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    topicArn : str, default is Undefined, optional
        SNS topic ARN.
    topicArnRef : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRef, default is Undefined, optional
        topic arn ref
    topicArnSelector : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelector, default is Undefined, optional
        topic arn selector
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    topicArn?: str

    topicArnRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRef

    topicArnSelector?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelector


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRef:
    r"""
    Reference to a Topic in sns to populate topicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelector:
    r"""
    Selector for a Topic in sns to populate topicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecInitProviderTopicItems0TopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketNotificationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1BucketNotificationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1BucketNotificationStatus:
    r"""
    BucketNotificationStatus defines the observed state of BucketNotification.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1BucketNotificationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1BucketNotificationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1BucketNotificationStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1BucketNotificationStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1BucketNotificationStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 bucket notification status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the bucket for notification configuration.
    eventbridge : bool, default is Undefined, optional
        Whether to enable Amazon EventBridge notifications. Defaults to false.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    lambdaFunction : [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderLambdaFunctionItems0], default is Undefined, optional
        Used to configure notifications to a Lambda Function. See below.
    queue : [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderQueueItems0], default is Undefined, optional
        Notification configuration to SQS Queue. See below.
    topic : [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderTopicItems0], default is Undefined, optional
        Notification configuration to SNS Topic. See below.
    """


    bucket?: str

    eventbridge?: bool

    id?: str

    lambdaFunction?: [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderLambdaFunctionItems0]

    queue?: [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderQueueItems0]

    topic?: [S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderTopicItems0]


schema S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderLambdaFunctionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification status at provider lambda function items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    lambdaFunctionArn : str, default is Undefined, optional
        Lambda function ARN.
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    lambdaFunctionArn?: str


schema S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderQueueItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification status at provider queue items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Specifies event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    queueArn : str, default is Undefined, optional
        SQS queue ARN.
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    queueArn?: str


schema S3AwsUpboundIoV1beta1BucketNotificationStatusAtProviderTopicItems0:
    r"""
    s3 aws upbound io v1beta1 bucket notification status at provider topic items0

    Attributes
    ----------
    events : [str], default is Undefined, optional
        Event for which to send notifications.
    filterPrefix : str, default is Undefined, optional
        Object key name prefix.
    filterSuffix : str, default is Undefined, optional
        Object key name suffix.
    id : str, default is Undefined, optional
        Unique identifier for each of the notification configurations.
    topicArn : str, default is Undefined, optional
        SNS topic ARN.
    """


    events?: [str]

    filterPrefix?: str

    filterSuffix?: str

    id?: str

    topicArn?: str


schema S3AwsUpboundIoV1beta1BucketNotificationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


