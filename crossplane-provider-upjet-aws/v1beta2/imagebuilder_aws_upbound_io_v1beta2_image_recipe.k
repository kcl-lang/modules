"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ImageRecipe:
    r"""
    ImageRecipe is the Schema for the ImageRecipes API. Manage an Image Builder Image Recipe

    Attributes
    ----------
    apiVersion : str, default is "imagebuilder.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ImageRecipe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpec, default is Undefined, required
        spec
    status : ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatus, default is Undefined, optional
        status
    """


    apiVersion: "imagebuilder.aws.upbound.io/v1beta2" = "imagebuilder.aws.upbound.io/v1beta2"

    kind: "ImageRecipe" = "ImageRecipe"

    metadata?: v1.ObjectMeta

    spec: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpec

    status?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatus


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpec:
    r"""
    ImageRecipeSpec defines the desired state of ImageRecipe

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProvider

    initProvider?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRef

    publishConnectionDetailsTo?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecWriteConnectionSecretToRef


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProvider:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec for provider

    Attributes
    ----------
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the image recipe. Detailed below.
    component : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the image recipe. Detailed below.
    description : str, default is Undefined, optional
        Description of the image recipe.
    name : str, default is Undefined, optional
        Name of the image recipe.
    parentImage : str, default is Undefined, optional
        The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    systemsManagerAgent : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderSystemsManagerAgent, default is Undefined, optional
        systems manager agent
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userDataBase64 : str, default is Undefined, optional
        Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
    version : str, default is Undefined, optional
        The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0]

    component?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0]

    description?: str

    name?: str

    parentImage?: str

    region: str

    systemsManagerAgent?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderSystemsManagerAgent

    tags?: {str:str}

    userDataBase64?: str

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec for provider block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0Ebs, default is Undefined, optional
        ebs
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0Ebs

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderBlockDeviceMappingItems0Ebs:
    r"""
    Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec for provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    componentArnRef : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRef, default is Undefined, optional
        component arn ref
    componentArnSelector : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelector, default is Undefined, optional
        component arn selector
    parameter : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    componentArnRef?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRef

    componentArnSelector?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelector

    parameter?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRef:
    r"""
    Reference to a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelector:
    r"""
    Selector for a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec for provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecForProviderSystemsManagerAgent:
    r"""
    Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.

    Attributes
    ----------
    uninstallAfterBuild : bool, default is Undefined, optional
        Whether to remove the Systems Manager Agent after the image has been built.
    """


    uninstallAfterBuild?: bool


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the image recipe. Detailed below.
    component : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the image recipe. Detailed below.
    description : str, default is Undefined, optional
        Description of the image recipe.
    name : str, default is Undefined, optional
        Name of the image recipe.
    parentImage : str, default is Undefined, optional
        The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
    systemsManagerAgent : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderSystemsManagerAgent, default is Undefined, optional
        systems manager agent
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userDataBase64 : str, default is Undefined, optional
        Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
    version : str, default is Undefined, optional
        The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0]

    component?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0]

    description?: str

    name?: str

    parentImage?: str

    systemsManagerAgent?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderSystemsManagerAgent

    tags?: {str:str}

    userDataBase64?: str

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec init provider block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0Ebs, default is Undefined, optional
        ebs
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0Ebs

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderBlockDeviceMappingItems0Ebs:
    r"""
    Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec init provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    componentArnRef : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRef, default is Undefined, optional
        component arn ref
    componentArnSelector : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelector, default is Undefined, optional
        component arn selector
    parameter : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    componentArnRef?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRef

    componentArnSelector?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelector

    parameter?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRef:
    r"""
    Reference to a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelector:
    r"""
    Selector for a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe spec init provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecInitProviderSystemsManagerAgent:
    r"""
    Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.

    Attributes
    ----------
    uninstallAfterBuild : bool, default is Undefined, optional
        Whether to remove the Systems Manager Agent after the image has been built.
    """


    uninstallAfterBuild?: bool


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRef

    metadata?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToMetadata

    name: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatus:
    r"""
    ImageRecipeStatus defines the observed state of ImageRecipe.

    Attributes
    ----------
    atProvider : ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProvider

    conditions?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusConditionsItems0]

    observedGeneration?: int


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProvider:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the image recipe.
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the image recipe. Detailed below.
    component : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the image recipe. Detailed below.
    dateCreated : str, default is Undefined, optional
        Date the image recipe was created.
    description : str, default is Undefined, optional
        Description of the image recipe.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        Name of the image recipe.
    owner : str, default is Undefined, optional
        Owner of the image recipe.
    parentImage : str, default is Undefined, optional
        The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
    platform : str, default is Undefined, optional
        Platform of the image recipe.
    systemsManagerAgent : ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderSystemsManagerAgent, default is Undefined, optional
        systems manager agent
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    userDataBase64 : str, default is Undefined, optional
        Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
    version : str, default is Undefined, optional
        The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    arn?: str

    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0]

    component?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0]

    dateCreated?: str

    description?: str

    id?: str

    name?: str

    owner?: str

    parentImage?: str

    platform?: str

    systemsManagerAgent?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderSystemsManagerAgent

    tags?: {str:str}

    tagsAll?: {str:str}

    userDataBase64?: str

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe status at provider block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0Ebs, default is Undefined, optional
        ebs
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0Ebs

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderBlockDeviceMappingItems0Ebs:
    r"""
    Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe status at provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    parameter : [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    parameter?: [ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta2 image recipe status at provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusAtProviderSystemsManagerAgent:
    r"""
    Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.

    Attributes
    ----------
    uninstallAfterBuild : bool, default is Undefined, optional
        Whether to remove the Systems Manager Agent after the image has been built.
    """


    uninstallAfterBuild?: bool


schema ImagebuilderAwsUpboundIoV1beta2ImageRecipeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


