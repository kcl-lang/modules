"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClientScope:
    r"""
    ClientScope is the Schema for the ClientScopes API.

    Attributes
    ----------
    apiVersion : str, default is "openidclient.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClientScope", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpec, default is Undefined, required
        spec
    status : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatus, default is Undefined, optional
        status
    """


    apiVersion: "openidclient.keycloak.m.crossplane.io/v1alpha1" = "openidclient.keycloak.m.crossplane.io/v1alpha1"

    kind: "ClientScope" = "ClientScope"

    metadata?: v1.ObjectMeta

    spec: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpec

    status?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatus


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpec:
    r"""
    ClientScopeSpec defines the desired state of ClientScope

    Attributes
    ----------
    forProvider : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProvider

    initProvider?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecProviderConfigRef

    writeConnectionSecretToRef?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecWriteConnectionSecretToRef


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProvider:
    r"""
    openidclient keycloakm crossplane io v1alpha1 client scope spec for provider

    Attributes
    ----------
    consentScreenText : str, default is Undefined, optional
        When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
    description : str, default is Undefined, optional
        The description of this client scope in the GUI.
    guiOrder : float, default is Undefined, optional
        Specify order of the client scope in GUI (such as in Consent page) as integer.
    includeInTokenScope : bool, default is Undefined, optional
        When true, the name of this client scope will be added to the access token property 'scope' as well as to the Token Introspection Endpoint response.
    name : str, default is Undefined, optional
        The display name of this client scope in the GUI.
    realmId : str, default is Undefined, optional
        The realm this client scope belongs to.
    realmIdRef : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    consentScreenText?: str

    description?: str

    guiOrder?: float

    includeInTokenScope?: bool

    name?: str

    realmId?: str

    realmIdRef?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRef

    realmIdSelector?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelector


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRefPolicy


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelectorPolicy


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    consentScreenText : str, default is Undefined, optional
        When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
    description : str, default is Undefined, optional
        The description of this client scope in the GUI.
    guiOrder : float, default is Undefined, optional
        Specify order of the client scope in GUI (such as in Consent page) as integer.
    includeInTokenScope : bool, default is Undefined, optional
        When true, the name of this client scope will be added to the access token property 'scope' as well as to the Token Introspection Endpoint response.
    name : str, default is Undefined, optional
        The display name of this client scope in the GUI.
    realmId : str, default is Undefined, optional
        The realm this client scope belongs to.
    realmIdRef : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    consentScreenText?: str

    description?: str

    guiOrder?: float

    includeInTokenScope?: bool

    name?: str

    realmId?: str

    realmIdRef?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRef

    realmIdSelector?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelector


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRefPolicy


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelectorPolicy


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatus:
    r"""
    ClientScopeStatus defines the observed state of ClientScope.

    Attributes
    ----------
    atProvider : OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusAtProvider

    conditions?: [OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusConditionsItems0]

    observedGeneration?: int


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusAtProvider:
    r"""
    openidclient keycloakm crossplane io v1alpha1 client scope status at provider

    Attributes
    ----------
    consentScreenText : str, default is Undefined, optional
        When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
    description : str, default is Undefined, optional
        The description of this client scope in the GUI.
    guiOrder : float, default is Undefined, optional
        Specify order of the client scope in GUI (such as in Consent page) as integer.
    id : str, default is Undefined, optional
        id
    includeInTokenScope : bool, default is Undefined, optional
        When true, the name of this client scope will be added to the access token property 'scope' as well as to the Token Introspection Endpoint response.
    name : str, default is Undefined, optional
        The display name of this client scope in the GUI.
    realmId : str, default is Undefined, optional
        The realm this client scope belongs to.
    """


    consentScreenText?: str

    description?: str

    guiOrder?: float

    id?: str

    includeInTokenScope?: bool

    name?: str

    realmId?: str


schema OpenidclientKeycloakmCrossplaneIoV1alpha1ClientScopeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


