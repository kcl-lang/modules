"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterInstance:
    r"""
    ClusterInstance is the Schema for the ClusterInstances API. Provides an RDS Cluster Resource Instance

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ClusterInstanceSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ClusterInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "ClusterInstance" = "ClusterInstance"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1ClusterInstanceSpec

    status?: RdsAwsUpboundIoV1beta1ClusterInstanceStatus


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpec:
    r"""
    ClusterInstanceSpec defines the desired state of ClusterInstance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProvider:
    r"""
    rds aws upbound io v1beta1 cluster instance spec for provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    availabilityZone : str, default is Undefined, optional
        EC2 Availability Zone that the DB instance is created in. See docs about the details.
    caCertIdentifier : str, default is Undefined, optional
        Identifier of the CA certificate for the DB instance.
    clusterIdentifier : str, default is Undefined, optional
        Identifier of the aws_rds_cluster in which to launch this instance.
    clusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    copyTagsToSnapshot : bool, default is Undefined, optional
        defined tags from the DB instance to snapshots of the DB instance. Default false.
    customIamInstanceProfile : str, default is Undefined, optional
        Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    dbParameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate with this instance.
    dbParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRef, default is Undefined, optional
        db parameter group name ref
    dbParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelector, default is Undefined, optional
        db parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    engine : str, default is Undefined, optional
        Name of the database engine to be used for the RDS cluster instance.
        Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    engineVersion : str, default is Undefined, optional
        Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    forceDestroy : bool, default is Undefined, optional
        Forces an instance to be destroyed when a part of a read replica cluster. Note: will promote the read replica to a standalone cluster before instance deletion.
    instanceClass : str, default is Undefined, optional
        Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    monitoringInterval : float, default is Undefined, optional
        Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    monitoringRoleArnRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRef, default is Undefined, optional
        monitoring role arn ref
    monitoringRoleArnSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelector, default is Undefined, optional
        monitoring role arn selector
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights is enabled or not.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    performanceInsightsKmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRef, default is Undefined, optional
        performance insights kms key Id ref
    performanceInsightsKmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelector, default is Undefined, optional
        performance insights kms key Id selector
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    preferredMaintenanceWindow : str, default is Undefined, optional
        Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    promotionTier : float, default is Undefined, optional
        Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    caCertIdentifier?: str

    clusterIdentifier?: str

    clusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRef

    clusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelector

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    dbParameterGroupName?: str

    dbParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRef

    dbParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelector

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelector

    engine?: str

    engineVersion?: str

    forceDestroy?: bool

    instanceClass?: str

    monitoringInterval?: float

    monitoringRoleArn?: str

    monitoringRoleArnRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRef

    monitoringRoleArnSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelector

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsKmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRef

    performanceInsightsKmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelector

    performanceInsightsRetentionPeriod?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    promotionTier?: float

    publiclyAccessible?: bool

    region: str

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate dbParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate dbParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRef:
    r"""
    Reference to a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelector:
    r"""
    Selector for a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderMonitoringRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate performanceInsightsKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate performanceInsightsKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecForProviderPerformanceInsightsKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    availabilityZone : str, default is Undefined, optional
        EC2 Availability Zone that the DB instance is created in. See docs about the details.
    caCertIdentifier : str, default is Undefined, optional
        Identifier of the CA certificate for the DB instance.
    clusterIdentifier : str, default is Undefined, optional
        Identifier of the aws_rds_cluster in which to launch this instance.
    clusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    copyTagsToSnapshot : bool, default is Undefined, optional
        defined tags from the DB instance to snapshots of the DB instance. Default false.
    customIamInstanceProfile : str, default is Undefined, optional
        Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    dbParameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate with this instance.
    dbParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRef, default is Undefined, optional
        db parameter group name ref
    dbParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelector, default is Undefined, optional
        db parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    engine : str, default is Undefined, optional
        Name of the database engine to be used for the RDS cluster instance.
        Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    engineVersion : str, default is Undefined, optional
        Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    forceDestroy : bool, default is Undefined, optional
        Forces an instance to be destroyed when a part of a read replica cluster. Note: will promote the read replica to a standalone cluster before instance deletion.
    instanceClass : str, default is Undefined, optional
        Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    monitoringInterval : float, default is Undefined, optional
        Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    monitoringRoleArnRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRef, default is Undefined, optional
        monitoring role arn ref
    monitoringRoleArnSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelector, default is Undefined, optional
        monitoring role arn selector
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights is enabled or not.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    performanceInsightsKmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRef, default is Undefined, optional
        performance insights kms key Id ref
    performanceInsightsKmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelector, default is Undefined, optional
        performance insights kms key Id selector
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    preferredMaintenanceWindow : str, default is Undefined, optional
        Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    promotionTier : float, default is Undefined, optional
        Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    caCertIdentifier?: str

    clusterIdentifier?: str

    clusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRef

    clusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelector

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    dbParameterGroupName?: str

    dbParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRef

    dbParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelector

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelector

    engine?: str

    engineVersion?: str

    forceDestroy?: bool

    instanceClass?: str

    monitoringInterval?: float

    monitoringRoleArn?: str

    monitoringRoleArnRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRef

    monitoringRoleArnSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelector

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsKmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRef

    performanceInsightsKmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelector

    performanceInsightsRetentionPeriod?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    promotionTier?: float

    publiclyAccessible?: bool

    tags?: {str:str}


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate dbParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate dbParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRef:
    r"""
    Reference to a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelector:
    r"""
    Selector for a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderMonitoringRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate performanceInsightsKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate performanceInsightsKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecInitProviderPerformanceInsightsKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1ClusterInstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ClusterInstanceStatus:
    r"""
    ClusterInstanceStatus defines the observed state of ClusterInstance.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ClusterInstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ClusterInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1ClusterInstanceStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1ClusterInstanceStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1ClusterInstanceStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 cluster instance status at provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of cluster instance
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    availabilityZone : str, default is Undefined, optional
        EC2 Availability Zone that the DB instance is created in. See docs about the details.
    caCertIdentifier : str, default is Undefined, optional
        Identifier of the CA certificate for the DB instance.
    clusterIdentifier : str, default is Undefined, optional
        Identifier of the aws_rds_cluster in which to launch this instance.
    copyTagsToSnapshot : bool, default is Undefined, optional
        defined tags from the DB instance to snapshots of the DB instance. Default false.
    customIamInstanceProfile : str, default is Undefined, optional
        Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    dbParameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate with this instance.
    dbSubnetGroupName : str, default is Undefined, optional
        Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    dbiResourceId : str, default is Undefined, optional
        Region-unique, immutable identifier for the DB instance.
    endpoint : str, default is Undefined, optional
        DNS address for this instance. May not be writable
    engine : str, default is Undefined, optional
        Name of the database engine to be used for the RDS cluster instance.
        Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    engineVersion : str, default is Undefined, optional
        Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    engineVersionActual : str, default is Undefined, optional
        Database engine version
    forceDestroy : bool, default is Undefined, optional
        Forces an instance to be destroyed when a part of a read replica cluster. Note: will promote the read replica to a standalone cluster before instance deletion.
    id : str, default is Undefined, optional
        Instance identifier
    instanceClass : str, default is Undefined, optional
        Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS encryption key if one is set to the cluster.
    monitoringInterval : float, default is Undefined, optional
        Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    networkType : str, default is Undefined, optional
        Network type of the DB instance.
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights is enabled or not.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    port : float, default is Undefined, optional
        Database port
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    preferredMaintenanceWindow : str, default is Undefined, optional
        Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    promotionTier : float, default is Undefined, optional
        Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    writer : bool, default is Undefined, optional
        – Boolean indicating if this instance is writable. False indicates this instance is a read replica.
    """


    applyImmediately?: bool

    arn?: str

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    caCertIdentifier?: str

    clusterIdentifier?: str

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    dbParameterGroupName?: str

    dbSubnetGroupName?: str

    dbiResourceId?: str

    endpoint?: str

    engine?: str

    engineVersion?: str

    engineVersionActual?: str

    forceDestroy?: bool

    id?: str

    instanceClass?: str

    kmsKeyId?: str

    monitoringInterval?: float

    monitoringRoleArn?: str

    networkType?: str

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    promotionTier?: float

    publiclyAccessible?: bool

    storageEncrypted?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    writer?: bool


schema RdsAwsUpboundIoV1beta1ClusterInstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


