"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigRule:
    r"""
    ConfigRule is the Schema for the ConfigRules API. Provides an AWS Config Rule.

    Attributes
    ----------
    apiVersion : str, default is "configservice.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConfigRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpec, default is Undefined, required
        spec
    status : ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "configservice.aws.upbound.io/v1beta2" = "configservice.aws.upbound.io/v1beta2"

    kind: "ConfigRule" = "ConfigRule"

    metadata?: v1.ObjectMeta

    spec: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpec

    status?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatus


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpec:
    r"""
    ConfigRuleSpec defines the desired state of ConfigRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProvider

    initProvider?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecWriteConnectionSecretToRef


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProvider:
    r"""
    configservice aws upbound io v1beta2 config rule spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the rule
    evaluationMode : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderEvaluationModeItems0], default is Undefined, optional
        The modes the Config rule can be evaluated in. See Evaluation Mode for more details.
    inputParameters : str, default is Undefined, optional
        A string in JSON format that is passed to the AWS Config rule Lambda function.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scope : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderScope, default is Undefined, optional
        scope
    source : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSource, default is Undefined, optional
        source
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    evaluationMode?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderEvaluationModeItems0]

    inputParameters?: str

    maximumExecutionFrequency?: str

    region: str

    scope?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderScope

    source?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSource

    tags?: {str:str}


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderEvaluationModeItems0:
    r"""
    configservice aws upbound io v1beta2 config rule spec for provider evaluation mode items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The mode of an evaluation.
    """


    mode?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderScope:
    r"""
    Scope defines which resources can trigger an evaluation for the rule. See Scope Below.

    Attributes
    ----------
    complianceResourceId : str, default is Undefined, optional
        The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for compliance_resource_types.
    complianceResourceTypes : [str], default is Undefined, optional
        A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., AWS::EC2::Instance. You can only specify one type if you also specify a resource ID for compliance_resource_id. See relevant part of AWS Docs for available types.
    tagKey : str, default is Undefined, optional
        The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
    tagValue : str, default is Undefined, optional
        The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
    """


    complianceResourceId?: str

    complianceResourceTypes?: [str]

    tagKey?: str

    tagValue?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSource:
    r"""
    Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See Source Below.

    Attributes
    ----------
    customPolicyDetails : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceCustomPolicyDetails, default is Undefined, optional
        custom policy details
    owner : str, default is Undefined, optional
        Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are AWS, CUSTOM_LAMBDA or CUSTOM_POLICY. For more information about managed rules, see the AWS Config Managed Rules documentation. For more information about custom rules, see the AWS Config Custom Rules documentation. Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the aws_lambda_permission resource.
    sourceDetail : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceDetailItems0], default is Undefined, optional
        Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if owner is CUSTOM_LAMBDA or CUSTOM_POLICY. See Source Detail Below.
    sourceIdentifier : str, default is Undefined, optional
        For AWS Config managed rules, a predefined identifier, e.g IAM_PASSWORD_POLICY. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name or the arn attribute of the aws_lambda_function resource.
    sourceIdentifierRef : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRef, default is Undefined, optional
        source identifier ref
    sourceIdentifierSelector : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelector, default is Undefined, optional
        source identifier selector
    """


    customPolicyDetails?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceCustomPolicyDetails

    owner?: str

    sourceDetail?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceDetailItems0]

    sourceIdentifier?: str

    sourceIdentifierRef?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRef

    sourceIdentifierSelector?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelector


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceCustomPolicyDetails:
    r"""
    Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to CUSTOM_POLICY. See Custom Policy Details Below.

    Attributes
    ----------
    enableDebugLogDelivery : bool, default is Undefined, optional
        The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is false.
    policyRuntime : str, default is Undefined, optional
        The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the Guard GitHub Repository.
    policyText : str, default is Undefined, optional
        The policy definition containing the logic for your Config Custom Policy rule.
    """


    enableDebugLogDelivery?: bool

    policyRuntime?: str

    policyText?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceDetailItems0:
    r"""
    configservice aws upbound io v1beta2 config rule spec for provider source source detail items0

    Attributes
    ----------
    eventSource : str, default is Undefined, optional
        The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to aws.config and is the only valid value.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    messageType : str, default is Undefined, optional
        The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
    """


    eventSource?: str

    maximumExecutionFrequency?: str

    messageType?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRef:
    r"""
    Reference to a Function in lambda to populate sourceIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelector:
    r"""
    Selector for a Function in lambda to populate sourceIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelectorPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecForProviderSourceSourceIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the rule
    evaluationMode : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderEvaluationModeItems0], default is Undefined, optional
        The modes the Config rule can be evaluated in. See Evaluation Mode for more details.
    inputParameters : str, default is Undefined, optional
        A string in JSON format that is passed to the AWS Config rule Lambda function.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    scope : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderScope, default is Undefined, optional
        scope
    source : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSource, default is Undefined, optional
        source
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    evaluationMode?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderEvaluationModeItems0]

    inputParameters?: str

    maximumExecutionFrequency?: str

    scope?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderScope

    source?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSource

    tags?: {str:str}


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderEvaluationModeItems0:
    r"""
    configservice aws upbound io v1beta2 config rule spec init provider evaluation mode items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The mode of an evaluation.
    """


    mode?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderScope:
    r"""
    Scope defines which resources can trigger an evaluation for the rule. See Scope Below.

    Attributes
    ----------
    complianceResourceId : str, default is Undefined, optional
        The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for compliance_resource_types.
    complianceResourceTypes : [str], default is Undefined, optional
        A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., AWS::EC2::Instance. You can only specify one type if you also specify a resource ID for compliance_resource_id. See relevant part of AWS Docs for available types.
    tagKey : str, default is Undefined, optional
        The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
    tagValue : str, default is Undefined, optional
        The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
    """


    complianceResourceId?: str

    complianceResourceTypes?: [str]

    tagKey?: str

    tagValue?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSource:
    r"""
    Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See Source Below.

    Attributes
    ----------
    customPolicyDetails : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceCustomPolicyDetails, default is Undefined, optional
        custom policy details
    owner : str, default is Undefined, optional
        Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are AWS, CUSTOM_LAMBDA or CUSTOM_POLICY. For more information about managed rules, see the AWS Config Managed Rules documentation. For more information about custom rules, see the AWS Config Custom Rules documentation. Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the aws_lambda_permission resource.
    sourceDetail : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceDetailItems0], default is Undefined, optional
        Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if owner is CUSTOM_LAMBDA or CUSTOM_POLICY. See Source Detail Below.
    sourceIdentifier : str, default is Undefined, optional
        For AWS Config managed rules, a predefined identifier, e.g IAM_PASSWORD_POLICY. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name or the arn attribute of the aws_lambda_function resource.
    sourceIdentifierRef : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRef, default is Undefined, optional
        source identifier ref
    sourceIdentifierSelector : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelector, default is Undefined, optional
        source identifier selector
    """


    customPolicyDetails?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceCustomPolicyDetails

    owner?: str

    sourceDetail?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceDetailItems0]

    sourceIdentifier?: str

    sourceIdentifierRef?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRef

    sourceIdentifierSelector?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelector


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceCustomPolicyDetails:
    r"""
    Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to CUSTOM_POLICY. See Custom Policy Details Below.

    Attributes
    ----------
    enableDebugLogDelivery : bool, default is Undefined, optional
        The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is false.
    policyRuntime : str, default is Undefined, optional
        The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the Guard GitHub Repository.
    policyText : str, default is Undefined, optional
        The policy definition containing the logic for your Config Custom Policy rule.
    """


    enableDebugLogDelivery?: bool

    policyRuntime?: str

    policyText?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceDetailItems0:
    r"""
    configservice aws upbound io v1beta2 config rule spec init provider source source detail items0

    Attributes
    ----------
    eventSource : str, default is Undefined, optional
        The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to aws.config and is the only valid value.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    messageType : str, default is Undefined, optional
        The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
    """


    eventSource?: str

    maximumExecutionFrequency?: str

    messageType?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRef:
    r"""
    Reference to a Function in lambda to populate sourceIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelector:
    r"""
    Selector for a Function in lambda to populate sourceIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelectorPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecInitProviderSourceSourceIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatus:
    r"""
    ConfigRuleStatus defines the observed state of ConfigRule.

    Attributes
    ----------
    atProvider : ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProvider

    conditions?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusConditionsItems0]

    observedGeneration?: int


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProvider:
    r"""
    configservice aws upbound io v1beta2 config rule status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the config rule
    description : str, default is Undefined, optional
        Description of the rule
    evaluationMode : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderEvaluationModeItems0], default is Undefined, optional
        The modes the Config rule can be evaluated in. See Evaluation Mode for more details.
    id : str, default is Undefined, optional
        id
    inputParameters : str, default is Undefined, optional
        A string in JSON format that is passed to the AWS Config rule Lambda function.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    ruleId : str, default is Undefined, optional
        The ID of the config rule
    scope : ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderScope, default is Undefined, optional
        scope
    source : ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSource, default is Undefined, optional
        source
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    description?: str

    evaluationMode?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderEvaluationModeItems0]

    id?: str

    inputParameters?: str

    maximumExecutionFrequency?: str

    ruleId?: str

    scope?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderScope

    source?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSource

    tags?: {str:str}

    tagsAll?: {str:str}


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderEvaluationModeItems0:
    r"""
    configservice aws upbound io v1beta2 config rule status at provider evaluation mode items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The mode of an evaluation.
    """


    mode?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderScope:
    r"""
    Scope defines which resources can trigger an evaluation for the rule. See Scope Below.

    Attributes
    ----------
    complianceResourceId : str, default is Undefined, optional
        The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for compliance_resource_types.
    complianceResourceTypes : [str], default is Undefined, optional
        A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., AWS::EC2::Instance. You can only specify one type if you also specify a resource ID for compliance_resource_id. See relevant part of AWS Docs for available types.
    tagKey : str, default is Undefined, optional
        The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
    tagValue : str, default is Undefined, optional
        The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
    """


    complianceResourceId?: str

    complianceResourceTypes?: [str]

    tagKey?: str

    tagValue?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSource:
    r"""
    Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See Source Below.

    Attributes
    ----------
    customPolicyDetails : ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceCustomPolicyDetails, default is Undefined, optional
        custom policy details
    owner : str, default is Undefined, optional
        Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are AWS, CUSTOM_LAMBDA or CUSTOM_POLICY. For more information about managed rules, see the AWS Config Managed Rules documentation. For more information about custom rules, see the AWS Config Custom Rules documentation. Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the aws_lambda_permission resource.
    sourceDetail : [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceSourceDetailItems0], default is Undefined, optional
        Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if owner is CUSTOM_LAMBDA or CUSTOM_POLICY. See Source Detail Below.
    sourceIdentifier : str, default is Undefined, optional
        For AWS Config managed rules, a predefined identifier, e.g IAM_PASSWORD_POLICY. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name or the arn attribute of the aws_lambda_function resource.
    """


    customPolicyDetails?: ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceCustomPolicyDetails

    owner?: str

    sourceDetail?: [ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceSourceDetailItems0]

    sourceIdentifier?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceCustomPolicyDetails:
    r"""
    Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to CUSTOM_POLICY. See Custom Policy Details Below.

    Attributes
    ----------
    enableDebugLogDelivery : bool, default is Undefined, optional
        The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is false.
    policyRuntime : str, default is Undefined, optional
        The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the Guard GitHub Repository.
    policyText : str, default is Undefined, optional
        The policy definition containing the logic for your Config Custom Policy rule.
    """


    enableDebugLogDelivery?: bool

    policyRuntime?: str

    policyText?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusAtProviderSourceSourceDetailItems0:
    r"""
    configservice aws upbound io v1beta2 config rule status at provider source source detail items0

    Attributes
    ----------
    eventSource : str, default is Undefined, optional
        The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to aws.config and is the only valid value.
    maximumExecutionFrequency : str, default is Undefined, optional
        The maximum frequency with which AWS Config runs evaluations for a rule.
    messageType : str, default is Undefined, optional
        The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
    """


    eventSource?: str

    maximumExecutionFrequency?: str

    messageType?: str


schema ConfigserviceAwsUpboundIoV1beta2ConfigRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


