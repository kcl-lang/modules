"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MethodSettings:
    r"""
    MethodSettings is the Schema for the MethodSettingss API. Manages API Gateway Stage Method Settings

    Attributes
    ----------
    apiVersion : str, default is "apigateway.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MethodSettings", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpec, default is Undefined, required
        spec
    status : ApigatewayAwsUpboundIoV1beta1MethodSettingsStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigateway.aws.upbound.io/v1beta1" = "apigateway.aws.upbound.io/v1beta1"

    kind: "MethodSettings" = "MethodSettings"

    metadata?: v1.ObjectMeta

    spec: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpec

    status?: ApigatewayAwsUpboundIoV1beta1MethodSettingsStatus


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpec:
    r"""
    MethodSettingsSpec defines the desired state of MethodSettings

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProvider

    initProvider?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecWriteConnectionSecretToRef


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProvider:
    r"""
    apigateway aws upbound io v1beta1 method settings spec for provider

    Attributes
    ----------
    methodPath : str, default is Undefined, optional
        Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., trimprefix(aws_api_gateway_resource.example.path, "/")).
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    restApiId : str, default is Undefined, optional
        ID of the REST API
    restApiIdRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    settings : [ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderSettingsItems0], default is Undefined, optional
        Settings block, see below.
    stageName : str, default is Undefined, optional
        Name of the stage
    stageNameRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRef, default is Undefined, optional
        stage name ref
    stageNameSelector : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelector, default is Undefined, optional
        stage name selector
    """


    methodPath?: str

    region: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelector

    settings?: [ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderSettingsItems0]

    stageName?: str

    stageNameRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRef

    stageNameSelector?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelector


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderSettingsItems0:
    r"""
    apigateway aws upbound io v1beta1 method settings spec for provider settings items0

    Attributes
    ----------
    cacheDataEncrypted : bool, default is Undefined, optional
        Whether the cached responses are encrypted.
    cacheTtlInSeconds : float, default is Undefined, optional
        Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
    cachingEnabled : bool, default is Undefined, optional
        Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
    loggingLevel : str, default is Undefined, optional
        Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are OFF, ERROR, and INFO.
    metricsEnabled : bool, default is Undefined, optional
        Whether Amazon CloudWatch metrics are enabled for this method.
    requireAuthorizationForCacheControl : bool, default is Undefined, optional
        Whether authorization is required for a cache invalidation request.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit. Default: -1 (throttling disabled).
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit. Default: -1 (throttling disabled).
    unauthorizedCacheControlHeaderStrategy : str, default is Undefined, optional
        How to handle unauthorized requests for cache invalidation. The available values are FAIL_WITH_403, SUCCEED_WITH_RESPONSE_HEADER, SUCCEED_WITHOUT_RESPONSE_HEADER.
    """


    cacheDataEncrypted?: bool

    cacheTtlInSeconds?: float

    cachingEnabled?: bool

    dataTraceEnabled?: bool

    loggingLevel?: str

    metricsEnabled?: bool

    requireAuthorizationForCacheControl?: bool

    throttlingBurstLimit?: float

    throttlingRateLimit?: float

    unauthorizedCacheControlHeaderStrategy?: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRef:
    r"""
    Reference to a Stage in apigateway to populate stageName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelector:
    r"""
    Selector for a Stage in apigateway to populate stageName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecForProviderStageNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    methodPath : str, default is Undefined, optional
        Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., trimprefix(aws_api_gateway_resource.example.path, "/")).
    restApiId : str, default is Undefined, optional
        ID of the REST API
    restApiIdRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    settings : [ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderSettingsItems0], default is Undefined, optional
        Settings block, see below.
    stageName : str, default is Undefined, optional
        Name of the stage
    stageNameRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRef, default is Undefined, optional
        stage name ref
    stageNameSelector : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelector, default is Undefined, optional
        stage name selector
    """


    methodPath?: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelector

    settings?: [ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderSettingsItems0]

    stageName?: str

    stageNameRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRef

    stageNameSelector?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelector


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderSettingsItems0:
    r"""
    apigateway aws upbound io v1beta1 method settings spec init provider settings items0

    Attributes
    ----------
    cacheDataEncrypted : bool, default is Undefined, optional
        Whether the cached responses are encrypted.
    cacheTtlInSeconds : float, default is Undefined, optional
        Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
    cachingEnabled : bool, default is Undefined, optional
        Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
    loggingLevel : str, default is Undefined, optional
        Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are OFF, ERROR, and INFO.
    metricsEnabled : bool, default is Undefined, optional
        Whether Amazon CloudWatch metrics are enabled for this method.
    requireAuthorizationForCacheControl : bool, default is Undefined, optional
        Whether authorization is required for a cache invalidation request.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit. Default: -1 (throttling disabled).
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit. Default: -1 (throttling disabled).
    unauthorizedCacheControlHeaderStrategy : str, default is Undefined, optional
        How to handle unauthorized requests for cache invalidation. The available values are FAIL_WITH_403, SUCCEED_WITH_RESPONSE_HEADER, SUCCEED_WITHOUT_RESPONSE_HEADER.
    """


    cacheDataEncrypted?: bool

    cacheTtlInSeconds?: float

    cachingEnabled?: bool

    dataTraceEnabled?: bool

    loggingLevel?: str

    metricsEnabled?: bool

    requireAuthorizationForCacheControl?: bool

    throttlingBurstLimit?: float

    throttlingRateLimit?: float

    unauthorizedCacheControlHeaderStrategy?: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRef:
    r"""
    Reference to a Stage in apigateway to populate stageName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelector:
    r"""
    Selector for a Stage in apigateway to populate stageName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecInitProviderStageNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsStatus:
    r"""
    MethodSettingsStatus defines the observed state of MethodSettings.

    Attributes
    ----------
    atProvider : ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProvider

    conditions?: [ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusConditionsItems0]

    observedGeneration?: int


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProvider:
    r"""
    apigateway aws upbound io v1beta1 method settings status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        id
    methodPath : str, default is Undefined, optional
        Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., trimprefix(aws_api_gateway_resource.example.path, "/")).
    restApiId : str, default is Undefined, optional
        ID of the REST API
    settings : [ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProviderSettingsItems0], default is Undefined, optional
        Settings block, see below.
    stageName : str, default is Undefined, optional
        Name of the stage
    """


    id?: str

    methodPath?: str

    restApiId?: str

    settings?: [ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProviderSettingsItems0]

    stageName?: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusAtProviderSettingsItems0:
    r"""
    apigateway aws upbound io v1beta1 method settings status at provider settings items0

    Attributes
    ----------
    cacheDataEncrypted : bool, default is Undefined, optional
        Whether the cached responses are encrypted.
    cacheTtlInSeconds : float, default is Undefined, optional
        Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
    cachingEnabled : bool, default is Undefined, optional
        Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
    loggingLevel : str, default is Undefined, optional
        Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are OFF, ERROR, and INFO.
    metricsEnabled : bool, default is Undefined, optional
        Whether Amazon CloudWatch metrics are enabled for this method.
    requireAuthorizationForCacheControl : bool, default is Undefined, optional
        Whether authorization is required for a cache invalidation request.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit. Default: -1 (throttling disabled).
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit. Default: -1 (throttling disabled).
    unauthorizedCacheControlHeaderStrategy : str, default is Undefined, optional
        How to handle unauthorized requests for cache invalidation. The available values are FAIL_WITH_403, SUCCEED_WITH_RESPONSE_HEADER, SUCCEED_WITHOUT_RESPONSE_HEADER.
    """


    cacheDataEncrypted?: bool

    cacheTtlInSeconds?: float

    cachingEnabled?: bool

    dataTraceEnabled?: bool

    loggingLevel?: str

    metricsEnabled?: bool

    requireAuthorizationForCacheControl?: bool

    throttlingBurstLimit?: float

    throttlingRateLimit?: float

    unauthorizedCacheControlHeaderStrategy?: str


schema ApigatewayAwsUpboundIoV1beta1MethodSettingsStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


