"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Rule:
    r"""
    Rule is the Schema for the Rules API. Provides an EventBridge Rule resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatchevents.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Rule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatcheventsAwsUpboundIoV1beta1RuleSpec, default is Undefined, required
        spec
    status : CloudwatcheventsAwsUpboundIoV1beta1RuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatchevents.aws.upbound.io/v1beta1" = "cloudwatchevents.aws.upbound.io/v1beta1"

    kind: "Rule" = "Rule"

    metadata?: v1.ObjectMeta

    spec: CloudwatcheventsAwsUpboundIoV1beta1RuleSpec

    status?: CloudwatcheventsAwsUpboundIoV1beta1RuleStatus


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpec:
    r"""
    RuleSpec defines the desired state of Rule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProvider

    initProvider?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecWriteConnectionSecretToRef


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 rule spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the rule.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with this rule.
        If you omit this, the default event bus is used.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    eventPattern : str, default is Undefined, optional
        The event pattern described a JSON object. At least one of schedule_expression or event_pattern is required. See full documentation of Events and Event Patterns in EventBridge for details. Note: The event pattern size is 2048 by default but it is adjustable up to 4096 characters by submitting a service quota increase request. See Amazon EventBridge quotas for details.
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    isEnabled : bool, default is Undefined, optional
        Whether the rule should be enabled.
        Defaults to true.
        Conflicts with state.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
    roleArnRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    scheduleExpression : str, default is Undefined, optional
        The scheduling expression. For example, cron(0 20 * * ? *) or rate(5 minutes). At least one of schedule_expression or event_pattern is required. Can only be used on the default event bus. For more information, refer to the AWS documentation Schedule Expressions for Rules.
    state : str, default is Undefined, optional
        State of the rule.
        Valid values are DISABLED, ENABLED, and ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        When state is ENABLED, the rule is enabled for all events except those delivered by CloudTrail.
        To also enable the rule for events delivered by CloudTrail, set state to ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        Defaults to ENABLED.
        Conflicts with is_enabled.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelector

    eventPattern?: str

    forceDestroy?: bool

    isEnabled?: bool

    region: str

    roleArn?: str

    roleArnRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRef

    roleArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelector

    scheduleExpression?: str

    state?: str

    tags?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the rule.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with this rule.
        If you omit this, the default event bus is used.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    eventPattern : str, default is Undefined, optional
        The event pattern described a JSON object. At least one of schedule_expression or event_pattern is required. See full documentation of Events and Event Patterns in EventBridge for details. Note: The event pattern size is 2048 by default but it is adjustable up to 4096 characters by submitting a service quota increase request. See Amazon EventBridge quotas for details.
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    isEnabled : bool, default is Undefined, optional
        Whether the rule should be enabled.
        Defaults to true.
        Conflicts with state.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
    roleArnRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    scheduleExpression : str, default is Undefined, optional
        The scheduling expression. For example, cron(0 20 * * ? *) or rate(5 minutes). At least one of schedule_expression or event_pattern is required. Can only be used on the default event bus. For more information, refer to the AWS documentation Schedule Expressions for Rules.
    state : str, default is Undefined, optional
        State of the rule.
        Valid values are DISABLED, ENABLED, and ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        When state is ENABLED, the rule is enabled for all events except those delivered by CloudTrail.
        To also enable the rule for events delivered by CloudTrail, set state to ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        Defaults to ENABLED.
        Conflicts with is_enabled.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelector

    eventPattern?: str

    forceDestroy?: bool

    isEnabled?: bool

    roleArn?: str

    roleArnRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRef

    roleArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelector

    scheduleExpression?: str

    state?: str

    tags?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1RuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta1RuleStatus:
    r"""
    RuleStatus defines the observed state of Rule.

    Attributes
    ----------
    atProvider : CloudwatcheventsAwsUpboundIoV1beta1RuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatcheventsAwsUpboundIoV1beta1RuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatcheventsAwsUpboundIoV1beta1RuleStatusAtProvider

    conditions?: [CloudwatcheventsAwsUpboundIoV1beta1RuleStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatcheventsAwsUpboundIoV1beta1RuleStatusAtProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 rule status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the rule.
    description : str, default is Undefined, optional
        The description of the rule.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with this rule.
        If you omit this, the default event bus is used.
    eventPattern : str, default is Undefined, optional
        The event pattern described a JSON object. At least one of schedule_expression or event_pattern is required. See full documentation of Events and Event Patterns in EventBridge for details. Note: The event pattern size is 2048 by default but it is adjustable up to 4096 characters by submitting a service quota increase request. See Amazon EventBridge quotas for details.
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    id : str, default is Undefined, optional
        The name of the rule.
    isEnabled : bool, default is Undefined, optional
        Whether the rule should be enabled.
        Defaults to true.
        Conflicts with state.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
    scheduleExpression : str, default is Undefined, optional
        The scheduling expression. For example, cron(0 20 * * ? *) or rate(5 minutes). At least one of schedule_expression or event_pattern is required. Can only be used on the default event bus. For more information, refer to the AWS documentation Schedule Expressions for Rules.
    state : str, default is Undefined, optional
        State of the rule.
        Valid values are DISABLED, ENABLED, and ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        When state is ENABLED, the rule is enabled for all events except those delivered by CloudTrail.
        To also enable the rule for events delivered by CloudTrail, set state to ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS.
        Defaults to ENABLED.
        Conflicts with is_enabled.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    description?: str

    eventBusName?: str

    eventPattern?: str

    forceDestroy?: bool

    id?: str

    isEnabled?: bool

    roleArn?: str

    scheduleExpression?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1RuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


