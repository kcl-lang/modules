"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Integration:
    r"""
    Integration is the Schema for the Integrations API. Manages an Amazon API Gateway Version 2 integration.

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Integration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsUpboundIoV1beta2IntegrationStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.upbound.io/v1beta2" = "apigatewayv2.aws.upbound.io/v1beta2"

    kind: "Integration" = "Integration"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpec

    status?: Apigatewayv2AwsUpboundIoV1beta2IntegrationStatus


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpec:
    r"""
    IntegrationSpec defines the desired state of Integration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProvider, default is Undefined, required
        for provider
    initProvider : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProvider

    initProvider?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRef

    publishConnectionDetailsTo?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 integration spec for provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    connectionId : str, default is Undefined, optional
        ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
    connectionIdRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRef, default is Undefined, optional
        connection Id ref
    connectionIdSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelector, default is Undefined, optional
        connection Id selector
    connectionType : str, default is Undefined, optional
        Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
    credentialsArn : str, default is Undefined, optional
        Credentials required for the integration, if any.
    credentialsArnRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRef, default is Undefined, optional
        credentials arn ref
    credentialsArnSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelector, default is Undefined, optional
        credentials arn selector
    description : str, default is Undefined, optional
        Description of the integration.
    integrationMethod : str, default is Undefined, optional
        Integration's HTTP method. Must be specified if integration_type is not MOCK.
    integrationSubtype : str, default is Undefined, optional
        AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
    integrationType : str, default is Undefined, optional
        Integration type of an integration.
        Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
    integrationUri : str, default is Undefined, optional
        URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
        For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
    integrationUriRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRef, default is Undefined, optional
        integration Uri ref
    integrationUriSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelector, default is Undefined, optional
        integration Uri selector
    passthroughBehavior : str, default is Undefined, optional
        Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
        Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
    payloadFormatVersion : str, default is Undefined, optional
        The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requestParameters : {str:str}, default is Undefined, optional
        For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
        For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
        For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
        See the Amazon API Gateway Developer Guide for details.
    requestTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
    responseParameters : [Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderResponseParametersItems0], default is Undefined, optional
        Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration.
    timeoutMilliseconds : float, default is Undefined, optional
        Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
        The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
    tlsConfig : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderTLSConfig, default is Undefined, optional
        tls config
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelector

    connectionId?: str

    connectionIdRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRef

    connectionIdSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelector

    connectionType?: str

    contentHandlingStrategy?: str

    credentialsArn?: str

    credentialsArnRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRef

    credentialsArnSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelector

    description?: str

    integrationMethod?: str

    integrationSubtype?: str

    integrationType?: str

    integrationUri?: str

    integrationUriRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRef

    integrationUriSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelector

    passthroughBehavior?: str

    payloadFormatVersion?: str

    region: str

    requestParameters?: {str:str}

    requestTemplates?: {str:str}

    responseParameters?: [Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderResponseParametersItems0]

    templateSelectionExpression?: str

    timeoutMilliseconds?: float

    tlsConfig?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderTLSConfig


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRef:
    r"""
    Reference to a VPCLink in apigatewayv2 to populate connectionId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelector:
    r"""
    Selector for a VPCLink in apigatewayv2 to populate connectionId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderConnectionIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRef:
    r"""
    Reference to a Role in iam to populate credentialsArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelector:
    r"""
    Selector for a Role in iam to populate credentialsArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderCredentialsArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRef:
    r"""
    Reference to a Function in lambda to populate integrationUri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelector:
    r"""
    Selector for a Function in lambda to populate integrationUri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderIntegrationURISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderResponseParametersItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 integration spec for provider response parameters items0

    Attributes
    ----------
    mappings : {str:str}, default is Undefined, optional
        Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
        See the Amazon API Gateway Developer Guide for details.
    statusCode : str, default is Undefined, optional
        HTTP status code in the range 200-599.
    """


    mappings?: {str:str}

    statusCode?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecForProviderTLSConfig:
    r"""
    TLS configuration for a private integration. Supported only for HTTP APIs.

    Attributes
    ----------
    serverNameToVerify : str, default is Undefined, optional
        If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
    """


    serverNameToVerify?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    connectionId : str, default is Undefined, optional
        ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
    connectionIdRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRef, default is Undefined, optional
        connection Id ref
    connectionIdSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelector, default is Undefined, optional
        connection Id selector
    connectionType : str, default is Undefined, optional
        Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
    credentialsArn : str, default is Undefined, optional
        Credentials required for the integration, if any.
    credentialsArnRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRef, default is Undefined, optional
        credentials arn ref
    credentialsArnSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelector, default is Undefined, optional
        credentials arn selector
    description : str, default is Undefined, optional
        Description of the integration.
    integrationMethod : str, default is Undefined, optional
        Integration's HTTP method. Must be specified if integration_type is not MOCK.
    integrationSubtype : str, default is Undefined, optional
        AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
    integrationType : str, default is Undefined, optional
        Integration type of an integration.
        Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
    integrationUri : str, default is Undefined, optional
        URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
        For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
    integrationUriRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRef, default is Undefined, optional
        integration Uri ref
    integrationUriSelector : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelector, default is Undefined, optional
        integration Uri selector
    passthroughBehavior : str, default is Undefined, optional
        Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
        Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
    payloadFormatVersion : str, default is Undefined, optional
        The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
    requestParameters : {str:str}, default is Undefined, optional
        For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
        For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
        For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
        See the Amazon API Gateway Developer Guide for details.
    requestTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
    responseParameters : [Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderResponseParametersItems0], default is Undefined, optional
        Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration.
    timeoutMilliseconds : float, default is Undefined, optional
        Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
        The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
    tlsConfig : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderTLSConfig, default is Undefined, optional
        tls config
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelector

    connectionId?: str

    connectionIdRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRef

    connectionIdSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelector

    connectionType?: str

    contentHandlingStrategy?: str

    credentialsArn?: str

    credentialsArnRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRef

    credentialsArnSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelector

    description?: str

    integrationMethod?: str

    integrationSubtype?: str

    integrationType?: str

    integrationUri?: str

    integrationUriRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRef

    integrationUriSelector?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelector

    passthroughBehavior?: str

    payloadFormatVersion?: str

    requestParameters?: {str:str}

    requestTemplates?: {str:str}

    responseParameters?: [Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderResponseParametersItems0]

    templateSelectionExpression?: str

    timeoutMilliseconds?: float

    tlsConfig?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderTLSConfig


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRef:
    r"""
    Reference to a VPCLink in apigatewayv2 to populate connectionId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelector:
    r"""
    Selector for a VPCLink in apigatewayv2 to populate connectionId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderConnectionIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRef:
    r"""
    Reference to a Role in iam to populate credentialsArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelector:
    r"""
    Selector for a Role in iam to populate credentialsArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderCredentialsArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRef:
    r"""
    Reference to a Function in lambda to populate integrationUri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelector:
    r"""
    Selector for a Function in lambda to populate integrationUri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderIntegrationURISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderResponseParametersItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 integration spec init provider response parameters items0

    Attributes
    ----------
    mappings : {str:str}, default is Undefined, optional
        Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
        See the Amazon API Gateway Developer Guide for details.
    statusCode : str, default is Undefined, optional
        HTTP status code in the range 200-599.
    """


    mappings?: {str:str}

    statusCode?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecInitProviderTLSConfig:
    r"""
    TLS configuration for a private integration. Supported only for HTTP APIs.

    Attributes
    ----------
    serverNameToVerify : str, default is Undefined, optional
        If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
    """


    serverNameToVerify?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationStatus:
    r"""
    IntegrationStatus defines the observed state of Integration.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProvider

    conditions?: [Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusConditionsItems0]

    observedGeneration?: int


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 integration status at provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    connectionId : str, default is Undefined, optional
        ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
    connectionType : str, default is Undefined, optional
        Type of the network connection to the integration endpoint. Valid values: INTERNET, VPC_LINK. Default is INTERNET.
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT. Supported only for WebSocket APIs.
    credentialsArn : str, default is Undefined, optional
        Credentials required for the integration, if any.
    description : str, default is Undefined, optional
        Description of the integration.
    id : str, default is Undefined, optional
        Integration identifier.
    integrationMethod : str, default is Undefined, optional
        Integration's HTTP method. Must be specified if integration_type is not MOCK.
    integrationResponseSelectionExpression : str, default is Undefined, optional
        The integration response selection expression for the integration.
    integrationSubtype : str, default is Undefined, optional
        AWS service action to invoke. Supported only for HTTP APIs when integration_type is AWS_PROXY. See the AWS service integration reference documentation for supported values. Must be between 1 and 128 characters in length.
    integrationType : str, default is Undefined, optional
        Integration type of an integration.
        Valid values: AWS (supported only for WebSocket APIs), AWS_PROXY, HTTP (supported only for WebSocket APIs), HTTP_PROXY, MOCK (supported only for WebSocket APIs). For an HTTP API private integration, use HTTP_PROXY.
    integrationUri : str, default is Undefined, optional
        URI of the Lambda function for a Lambda proxy integration, when integration_type is AWS_PROXY.
        For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
    passthroughBehavior : str, default is Undefined, optional
        Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the request_templates attribute.
        Valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER. Default is WHEN_NO_MATCH. Supported only for WebSocket APIs.
    payloadFormatVersion : str, default is Undefined, optional
        The format of the payload sent to an integration. Valid values: 1.0, 2.0. Default is 1.0.
    requestParameters : {str:str}, default is Undefined, optional
        For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
        For HTTP APIs with a specified integration_subtype, a key-value map specifying parameters that are passed to AWS_PROXY integrations.
        For HTTP APIs without a specified integration_subtype, a key-value map specifying how to transform HTTP requests before sending them to the backend.
        See the Amazon API Gateway Developer Guide for details.
    requestTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
    responseParameters : [Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderResponseParametersItems0], default is Undefined, optional
        Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration.
    timeoutMilliseconds : float, default is Undefined, optional
        Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
        The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
    tlsConfig : Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderTLSConfig, default is Undefined, optional
        tls config
    """


    apiId?: str

    connectionId?: str

    connectionType?: str

    contentHandlingStrategy?: str

    credentialsArn?: str

    description?: str

    id?: str

    integrationMethod?: str

    integrationResponseSelectionExpression?: str

    integrationSubtype?: str

    integrationType?: str

    integrationUri?: str

    passthroughBehavior?: str

    payloadFormatVersion?: str

    requestParameters?: {str:str}

    requestTemplates?: {str:str}

    responseParameters?: [Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderResponseParametersItems0]

    templateSelectionExpression?: str

    timeoutMilliseconds?: float

    tlsConfig?: Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderTLSConfig


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderResponseParametersItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 integration status at provider response parameters items0

    Attributes
    ----------
    mappings : {str:str}, default is Undefined, optional
        Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter.
        See the Amazon API Gateway Developer Guide for details.
    statusCode : str, default is Undefined, optional
        HTTP status code in the range 200-599.
    """


    mappings?: {str:str}

    statusCode?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusAtProviderTLSConfig:
    r"""
    TLS configuration for a private integration. Supported only for HTTP APIs.

    Attributes
    ----------
    serverNameToVerify : str, default is Undefined, optional
        If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
    """


    serverNameToVerify?: str


schema Apigatewayv2AwsUpboundIoV1beta2IntegrationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


