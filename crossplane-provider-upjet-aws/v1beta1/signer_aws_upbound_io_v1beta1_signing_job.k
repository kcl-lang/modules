"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SigningJob:
    r"""
    SigningJob is the Schema for the SigningJobs API. Creates a Signer Signing Job.

    Attributes
    ----------
    apiVersion : str, default is "signer.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SigningJob", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SignerAwsUpboundIoV1beta1SigningJobSpec, default is Undefined, required
        spec
    status : SignerAwsUpboundIoV1beta1SigningJobStatus, default is Undefined, optional
        status
    """


    apiVersion: "signer.aws.upbound.io/v1beta1" = "signer.aws.upbound.io/v1beta1"

    kind: "SigningJob" = "SigningJob"

    metadata?: v1.ObjectMeta

    spec: SignerAwsUpboundIoV1beta1SigningJobSpec

    status?: SignerAwsUpboundIoV1beta1SigningJobStatus


schema SignerAwsUpboundIoV1beta1SigningJobSpec:
    r"""
    SigningJobSpec defines the desired state of SigningJob

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SignerAwsUpboundIoV1beta1SigningJobSpecForProvider, default is Undefined, required
        for provider
    initProvider : SignerAwsUpboundIoV1beta1SigningJobSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SignerAwsUpboundIoV1beta1SigningJobSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SignerAwsUpboundIoV1beta1SigningJobSpecForProvider

    initProvider?: SignerAwsUpboundIoV1beta1SigningJobSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRef

    publishConnectionDetailsTo?: SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SignerAwsUpboundIoV1beta1SigningJobSpecWriteConnectionSecretToRef


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProvider:
    r"""
    signer aws upbound io v1beta1 signing job spec for provider

    Attributes
    ----------
    destination : [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0], default is Undefined, optional
        The S3 bucket in which to save your signed object. See Destination below for details.
    ignoreSigningJobFailure : bool, default is Undefined, optional
        Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.
    profileName : str, default is Undefined, optional
        The name of the profile to initiate the signing operation.
    profileNameRef : SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRef, default is Undefined, optional
        profile name ref
    profileNameSelector : SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelector, default is Undefined, optional
        profile name selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    source : [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0], default is Undefined, optional
        The S3 bucket that contains the object to sign. See Source below for details.
    """


    destination?: [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0]

    ignoreSigningJobFailure?: bool

    profileName?: str

    profileNameRef?: SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRef

    profileNameSelector?: SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelector

    region: str

    source?: [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0:
    r"""
    signer aws upbound io v1beta1 signing job spec for provider destination items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderDestinationItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job spec for provider destination items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    prefix : str, default is Undefined, optional
        An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
    """


    bucket?: str

    prefix?: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRef:
    r"""
    Reference to a SigningProfile in signer to populate profileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRefPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelector:
    r"""
    Selector for a SigningProfile in signer to populate profileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelectorPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0:
    r"""
    signer aws upbound io v1beta1 signing job spec for provider source items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecForProviderSourceItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job spec for provider source items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    key : str, default is Undefined, optional
        Key name of the object that contains your unsigned code.
    version : str, default is Undefined, optional
        Version of your source image in your version enabled S3 bucket.
    """


    bucket?: str

    key?: str

    version?: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    destination : [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0], default is Undefined, optional
        The S3 bucket in which to save your signed object. See Destination below for details.
    ignoreSigningJobFailure : bool, default is Undefined, optional
        Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.
    profileName : str, default is Undefined, optional
        The name of the profile to initiate the signing operation.
    profileNameRef : SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRef, default is Undefined, optional
        profile name ref
    profileNameSelector : SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelector, default is Undefined, optional
        profile name selector
    source : [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0], default is Undefined, optional
        The S3 bucket that contains the object to sign. See Source below for details.
    """


    destination?: [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0]

    ignoreSigningJobFailure?: bool

    profileName?: str

    profileNameRef?: SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRef

    profileNameSelector?: SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelector

    source?: [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0:
    r"""
    signer aws upbound io v1beta1 signing job spec init provider destination items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderDestinationItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job spec init provider destination items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    prefix : str, default is Undefined, optional
        An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
    """


    bucket?: str

    prefix?: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRef:
    r"""
    Reference to a SigningProfile in signer to populate profileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRefPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelector:
    r"""
    Selector for a SigningProfile in signer to populate profileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelectorPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0:
    r"""
    signer aws upbound io v1beta1 signing job spec init provider source items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobSpecInitProviderSourceItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job spec init provider source items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    key : str, default is Undefined, optional
        Key name of the object that contains your unsigned code.
    version : str, default is Undefined, optional
        Version of your source image in your version enabled S3 bucket.
    """


    bucket?: str

    key?: str

    version?: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRefPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRef

    metadata?: SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToMetadata

    name: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRefPolicy


schema SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SignerAwsUpboundIoV1beta1SigningJobSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SignerAwsUpboundIoV1beta1SigningJobSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SignerAwsUpboundIoV1beta1SigningJobStatus:
    r"""
    SigningJobStatus defines the observed state of SigningJob.

    Attributes
    ----------
    atProvider : SignerAwsUpboundIoV1beta1SigningJobStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SignerAwsUpboundIoV1beta1SigningJobStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SignerAwsUpboundIoV1beta1SigningJobStatusAtProvider

    conditions?: [SignerAwsUpboundIoV1beta1SigningJobStatusConditionsItems0]

    observedGeneration?: int


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProvider:
    r"""
    signer aws upbound io v1beta1 signing job status at provider

    Attributes
    ----------
    completedAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the signing job was completed.
    createdAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the signing job was created.
    destination : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0], default is Undefined, optional
        The S3 bucket in which to save your signed object. See Destination below for details.
    id : str, default is Undefined, optional
        id
    ignoreSigningJobFailure : bool, default is Undefined, optional
        Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.
    jobId : str, default is Undefined, optional
        The ID of the signing job on output.
    jobInvoker : str, default is Undefined, optional
        The IAM entity that initiated the signing job.
    jobOwner : str, default is Undefined, optional
        The AWS account ID of the job owner.
    platformDisplayName : str, default is Undefined, optional
        A human-readable name for the signing platform associated with the signing job.
    platformId : str, default is Undefined, optional
        The platform to which your signed code image will be distributed.
    profileName : str, default is Undefined, optional
        The name of the profile to initiate the signing operation.
    profileVersion : str, default is Undefined, optional
        The version of the signing profile used to initiate the signing job.
    requestedBy : str, default is Undefined, optional
        The IAM principal that requested the signing job.
    revocationRecord : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderRevocationRecordItems0], default is Undefined, optional
        A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
    signatureExpiresAt : str, default is Undefined, optional
        The time when the signature of a signing job expires.
    signedObject : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0], default is Undefined, optional
        Name of the S3 bucket where the signed code image is saved by code signing.
    source : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0], default is Undefined, optional
        The S3 bucket that contains the object to sign. See Source below for details.
    status : str, default is Undefined, optional
        Status of the signing job.
    statusReason : str, default is Undefined, optional
        String value that contains the status reason.
    """


    completedAt?: str

    createdAt?: str

    destination?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0]

    id?: str

    ignoreSigningJobFailure?: bool

    jobId?: str

    jobInvoker?: str

    jobOwner?: str

    platformDisplayName?: str

    platformId?: str

    profileName?: str

    profileVersion?: str

    requestedBy?: str

    revocationRecord?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderRevocationRecordItems0]

    signatureExpiresAt?: str

    signedObject?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0]

    source?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0]

    status?: str

    statusReason?: str


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider destination items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderDestinationItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider destination items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    prefix : str, default is Undefined, optional
        An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
    """


    bucket?: str

    prefix?: str


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderRevocationRecordItems0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider revocation record items0

    Attributes
    ----------
    reason : str, default is Undefined, optional
        reason
    revokedAt : str, default is Undefined, optional
        revoked at
    revokedBy : str, default is Undefined, optional
        revoked by
    """


    reason?: str

    revokedAt?: str

    revokedBy?: str


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider signed object items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSignedObjectItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider signed object items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    key : str, default is Undefined, optional
        Key name of the object that contains your unsigned code.
    """


    bucket?: str

    key?: str


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider source items0

    Attributes
    ----------
    s3 : [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0S3Items0], default is Undefined, optional
        A configuration block describing the S3 Source object: See S3 Source below for details.
    """


    s3?: [SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0S3Items0]


schema SignerAwsUpboundIoV1beta1SigningJobStatusAtProviderSourceItems0S3Items0:
    r"""
    signer aws upbound io v1beta1 signing job status at provider source items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket.
    key : str, default is Undefined, optional
        Key name of the object that contains your unsigned code.
    version : str, default is Undefined, optional
        Version of your source image in your version enabled S3 bucket.
    """


    bucket?: str

    key?: str

    version?: str


schema SignerAwsUpboundIoV1beta1SigningJobStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


