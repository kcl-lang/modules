"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Connection:
    r"""
    Connection is the Schema for the Connections API. Provides an EventBridge connection resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatchevents.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Connection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpec, default is Undefined, required
        spec
    status : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatchevents.aws.upbound.io/v1beta2" = "cloudwatchevents.aws.upbound.io/v1beta2"

    kind: "Connection" = "Connection"

    metadata?: v1.ObjectMeta

    spec: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpec

    status?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatus


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpec:
    r"""
    ConnectionSpec defines the desired state of Connection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProvider

    initProvider?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProvider:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider

    Attributes
    ----------
    authParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParameters, default is Undefined, optional
        auth parameters
    authorizationType : str, default is Undefined, optional
        Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.
    description : str, default is Undefined, optional
        Enter a description for the connection. Maximum of 512 characters.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    authParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParameters

    authorizationType?: str

    description?: str

    region: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParameters:
    r"""
    Parameters used for authorization. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    apiKey : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKey, default is Undefined, optional
        api key
    basic : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasic, default is Undefined, optional
        basic
    invocationHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParameters, default is Undefined, optional
        invocation Http parameters
    oauth : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauth, default is Undefined, optional
        oauth
    """


    apiKey?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKey

    basic?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasic

    invocationHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParameters

    oauth?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauth


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKey:
    r"""
    Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKeyValueSecretRef, default is Undefined, optional
        value secret ref
    """


    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKeyValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersAPIKeyValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasic:
    r"""
    Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.

    Attributes
    ----------
    passwordSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasicPasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        A username for the authorization.
    """


    passwordSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasicPasswordSecretRef

    username?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersBasicPasswordSecretRef:
    r"""
    A password for the authorization. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParameters:
    r"""
    Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters invocation HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters invocation HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters invocation HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauth:
    r"""
    Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.

    Attributes
    ----------
    authorizationEndpoint : str, default is Undefined, optional
        The URL to the authorization endpoint.
    clientParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParameters, default is Undefined, optional
        client parameters
    httpMethod : str, default is Undefined, optional
        A password for the authorization. Created and stored in AWS Secrets Manager.
    oauthHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParameters, default is Undefined, optional
        oauth Http parameters
    """


    authorizationEndpoint?: str

    clientParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParameters

    httpMethod?: str

    oauthHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParameters


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParameters:
    r"""
    Contains the client parameters for OAuth authorization. Contains the following two parameters.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
    clientSecretSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParametersClientSecretSecretRef, default is Undefined, optional
        client secret secret ref
    """


    clientId?: str

    clientSecretSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParametersClientSecretSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthClientParametersClientSecretSecretRef:
    r"""
    The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParameters:
    r"""
    OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters oauth oauth HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters oauth oauth HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec for provider auth parameters oauth oauth HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecForProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    authParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParameters, default is Undefined, optional
        auth parameters
    authorizationType : str, default is Undefined, optional
        Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.
    description : str, default is Undefined, optional
        Enter a description for the connection. Maximum of 512 characters.
    """


    authParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParameters

    authorizationType?: str

    description?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParameters:
    r"""
    Parameters used for authorization. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    apiKey : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKey, default is Undefined, optional
        api key
    basic : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasic, default is Undefined, optional
        basic
    invocationHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParameters, default is Undefined, optional
        invocation Http parameters
    oauth : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauth, default is Undefined, optional
        oauth
    """


    apiKey?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKey

    basic?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasic

    invocationHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParameters

    oauth?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauth


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKey:
    r"""
    Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKeyValueSecretRef, default is Undefined, required
        value secret ref
    """


    key?: str

    valueSecretRef: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKeyValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersAPIKeyValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasic:
    r"""
    Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.

    Attributes
    ----------
    passwordSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasicPasswordSecretRef, default is Undefined, required
        password secret ref
    username : str, default is Undefined, optional
        A username for the authorization.
    """


    passwordSecretRef: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasicPasswordSecretRef

    username?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersBasicPasswordSecretRef:
    r"""
    A password for the authorization. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParameters:
    r"""
    Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters invocation HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersBodyItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters invocation HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersHeaderItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters invocation HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersInvocationHTTPParametersQueryStringItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauth:
    r"""
    Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.

    Attributes
    ----------
    authorizationEndpoint : str, default is Undefined, optional
        The URL to the authorization endpoint.
    clientParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParameters, default is Undefined, optional
        client parameters
    httpMethod : str, default is Undefined, optional
        A password for the authorization. Created and stored in AWS Secrets Manager.
    oauthHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParameters, default is Undefined, optional
        oauth Http parameters
    """


    authorizationEndpoint?: str

    clientParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParameters

    httpMethod?: str

    oauthHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParameters


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParameters:
    r"""
    Contains the client parameters for OAuth authorization. Contains the following two parameters.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
    clientSecretSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParametersClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    """


    clientId?: str

    clientSecretSecretRef: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParametersClientSecretSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthClientParametersClientSecretSecretRef:
    r"""
    The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParameters:
    r"""
    OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters oauth oauth HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersBodyItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters oauth oauth HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersHeaderItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection spec init provider auth parameters oauth oauth HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    valueSecretRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef, default is Undefined, optional
        value secret ref
    """


    isValueSecret?: bool

    key?: str

    valueSecretRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecInitProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0ValueSecretRef:
    r"""
    Header Value. Created and stored in AWS Secrets Manager.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatus:
    r"""
    ConnectionStatus defines the observed state of Connection.

    Attributes
    ----------
    atProvider : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProvider

    conditions?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProvider:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the connection.
    authParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParameters, default is Undefined, optional
        auth parameters
    authorizationType : str, default is Undefined, optional
        Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.
    description : str, default is Undefined, optional
        Enter a description for the connection. Maximum of 512 characters.
    id : str, default is Undefined, optional
        id
    secretArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
    """


    arn?: str

    authParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParameters

    authorizationType?: str

    description?: str

    id?: str

    secretArn?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParameters:
    r"""
    Parameters used for authorization. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    apiKey : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersAPIKey, default is Undefined, optional
        api key
    basic : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersBasic, default is Undefined, optional
        basic
    invocationHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParameters, default is Undefined, optional
        invocation Http parameters
    oauth : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauth, default is Undefined, optional
        oauth
    """


    apiKey?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersAPIKey

    basic?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersBasic

    invocationHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParameters

    oauth?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauth


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersAPIKey:
    r"""
    Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Header Name.
    """


    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersBasic:
    r"""
    Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.

    Attributes
    ----------
    username : str, default is Undefined, optional
        A username for the authorization.
    """


    username?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParameters:
    r"""
    Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters invocation HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters invocation HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersInvocationHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters invocation HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauth:
    r"""
    Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.

    Attributes
    ----------
    authorizationEndpoint : str, default is Undefined, optional
        The URL to the authorization endpoint.
    clientParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthClientParameters, default is Undefined, optional
        client parameters
    httpMethod : str, default is Undefined, optional
        A password for the authorization. Created and stored in AWS Secrets Manager.
    oauthHttpParameters : CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParameters, default is Undefined, optional
        oauth Http parameters
    """


    authorizationEndpoint?: str

    clientParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthClientParameters

    httpMethod?: str

    oauthHttpParameters?: CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParameters


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthClientParameters:
    r"""
    Contains the client parameters for OAuth authorization. Contains the following two parameters.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
    """


    clientId?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParameters:
    r"""
    OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

    Attributes
    ----------
    body : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersBodyItems0], default is Undefined, optional
        Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    header : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersHeaderItems0], default is Undefined, optional
        Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    queryString : [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0], default is Undefined, optional
        Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    """


    body?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersBodyItems0]

    header?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersHeaderItems0]

    queryString?: [CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0]


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersBodyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters oauth oauth HTTP parameters body items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersHeaderItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters oauth oauth HTTP parameters header items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusAtProviderAuthParametersOauthOauthHTTPParametersQueryStringItems0:
    r"""
    cloudwatchevents aws upbound io v1beta2 connection status at provider auth parameters oauth oauth HTTP parameters query string items0

    Attributes
    ----------
    isValueSecret : bool, default is Undefined, optional
        Specified whether the value is secret.
    key : str, default is Undefined, optional
        Header Name.
    """


    isValueSecret?: bool

    key?: str


schema CloudwatcheventsAwsUpboundIoV1beta2ConnectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


