"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Image:
    r"""
    Image is the Schema for the Images API. Manages an Image Builder Image

    Attributes
    ----------
    apiVersion : str, default is "imagebuilder.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Image", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagebuilderAwsUpboundIoV1beta1ImageSpec, default is Undefined, required
        spec
    status : ImagebuilderAwsUpboundIoV1beta1ImageStatus, default is Undefined, optional
        status
    """


    apiVersion: "imagebuilder.aws.upbound.io/v1beta1" = "imagebuilder.aws.upbound.io/v1beta1"

    kind: "Image" = "Image"

    metadata?: v1.ObjectMeta

    spec: ImagebuilderAwsUpboundIoV1beta1ImageSpec

    status?: ImagebuilderAwsUpboundIoV1beta1ImageStatus


schema ImagebuilderAwsUpboundIoV1beta1ImageSpec:
    r"""
    ImageSpec defines the desired state of Image

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProvider

    initProvider?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRef

    publishConnectionDetailsTo?: ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecWriteConnectionSecretToRef


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProvider:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider

    Attributes
    ----------
    containerRecipeArn : str, default is Undefined, optional
        - Amazon Resource Name (ARN) of the container recipe.
    distributionConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
    distributionConfigurationArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRef, default is Undefined, optional
        distribution configuration arn ref
    distributionConfigurationArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelector, default is Undefined, optional
        distribution configuration arn selector
    enhancedImageMetadataEnabled : bool, default is Undefined, optional
        Whether additional information about the image being created is collected. Defaults to true.
    executionRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.
    imageRecipeArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the image recipe.
    imageRecipeArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRef, default is Undefined, optional
        image recipe arn ref
    imageRecipeArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelector, default is Undefined, optional
        image recipe arn selector
    imageScanningConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0], default is Undefined, optional
        Configuration block with image scanning configuration. Detailed below.
    imageTestsConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageTestsConfigurationItems0], default is Undefined, optional
        Configuration block with image tests configuration. Detailed below.
    infrastructureConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
    infrastructureConfigurationArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRef, default is Undefined, optional
        infrastructure configuration arn ref
    infrastructureConfigurationArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelector, default is Undefined, optional
        infrastructure configuration arn selector
    region : str, default is Undefined, required
        Region of the AMI.
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workflow : [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0], default is Undefined, optional
        Configuration block with the workflow configuration. Detailed below.
    """


    containerRecipeArn?: str

    distributionConfigurationArn?: str

    distributionConfigurationArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRef

    distributionConfigurationArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelector

    enhancedImageMetadataEnabled?: bool

    executionRole?: str

    imageRecipeArn?: str

    imageRecipeArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRef

    imageRecipeArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelector

    imageScanningConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0]

    imageTestsConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageTestsConfigurationItems0]

    infrastructureConfigurationArn?: str

    infrastructureConfigurationArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRef

    infrastructureConfigurationArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelector

    region: str

    tags?: {str:str}

    workflow?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0]


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRef:
    r"""
    Reference to a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelector:
    r"""
    Selector for a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderDistributionConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRef:
    r"""
    Reference to a ImageRecipe in imagebuilder to populate imageRecipeArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelector:
    r"""
    Selector for a ImageRecipe in imagebuilder to populate imageRecipeArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageRecipeArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider image scanning configuration items0

    Attributes
    ----------
    ecrConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0EcrConfigurationItems0], default is Undefined, optional
        Configuration block with ECR configuration. Detailed below.
    imageScanningEnabled : bool, default is Undefined, optional
        Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.
    """


    ecrConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0EcrConfigurationItems0]

    imageScanningEnabled?: bool


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageScanningConfigurationItems0EcrConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider image scanning configuration items0 ecr configuration items0

    Attributes
    ----------
    containerTags : [str], default is Undefined, optional
        Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.
    repositoryName : str, default is Undefined, optional
        The name of the container repository that Amazon Inspector scans to identify findings for your container images.
    """


    containerTags?: [str]

    repositoryName?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderImageTestsConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider image tests configuration items0

    Attributes
    ----------
    imageTestsEnabled : bool, default is Undefined, optional
        Whether image tests are enabled. Defaults to true.
    timeoutMinutes : float, default is Undefined, optional
        Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.
    """


    imageTestsEnabled?: bool

    timeoutMinutes?: float


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRef:
    r"""
    Reference to a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelector:
    r"""
    Selector for a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderInfrastructureConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider workflow items0

    Attributes
    ----------
    onFailure : str, default is Undefined, optional
        The action to take if the workflow fails. Must be one of CONTINUE or ABORT.
    parallelGroup : str, default is Undefined, optional
        The parallel group in which to run a test Workflow.
    parameter : [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0ParameterItems0], default is Undefined, optional
        Configuration block for the workflow parameters. Detailed below.
    workflowArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Workflow.
    """


    onFailure?: str

    parallelGroup?: str

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0ParameterItems0]

    workflowArn?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecForProviderWorkflowItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec for provider workflow items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Workflow parameter.
    value : str, default is Undefined, optional
        The value of the Workflow parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    containerRecipeArn : str, default is Undefined, optional
        - Amazon Resource Name (ARN) of the container recipe.
    distributionConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
    distributionConfigurationArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRef, default is Undefined, optional
        distribution configuration arn ref
    distributionConfigurationArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelector, default is Undefined, optional
        distribution configuration arn selector
    enhancedImageMetadataEnabled : bool, default is Undefined, optional
        Whether additional information about the image being created is collected. Defaults to true.
    executionRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.
    imageRecipeArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the image recipe.
    imageRecipeArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRef, default is Undefined, optional
        image recipe arn ref
    imageRecipeArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelector, default is Undefined, optional
        image recipe arn selector
    imageScanningConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0], default is Undefined, optional
        Configuration block with image scanning configuration. Detailed below.
    imageTestsConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageTestsConfigurationItems0], default is Undefined, optional
        Configuration block with image tests configuration. Detailed below.
    infrastructureConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
    infrastructureConfigurationArnRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRef, default is Undefined, optional
        infrastructure configuration arn ref
    infrastructureConfigurationArnSelector : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelector, default is Undefined, optional
        infrastructure configuration arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workflow : [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0], default is Undefined, optional
        Configuration block with the workflow configuration. Detailed below.
    """


    containerRecipeArn?: str

    distributionConfigurationArn?: str

    distributionConfigurationArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRef

    distributionConfigurationArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelector

    enhancedImageMetadataEnabled?: bool

    executionRole?: str

    imageRecipeArn?: str

    imageRecipeArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRef

    imageRecipeArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelector

    imageScanningConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0]

    imageTestsConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageTestsConfigurationItems0]

    infrastructureConfigurationArn?: str

    infrastructureConfigurationArnRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRef

    infrastructureConfigurationArnSelector?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelector

    tags?: {str:str}

    workflow?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0]


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRef:
    r"""
    Reference to a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelector:
    r"""
    Selector for a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderDistributionConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRef:
    r"""
    Reference to a ImageRecipe in imagebuilder to populate imageRecipeArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelector:
    r"""
    Selector for a ImageRecipe in imagebuilder to populate imageRecipeArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageRecipeArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec init provider image scanning configuration items0

    Attributes
    ----------
    ecrConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0EcrConfigurationItems0], default is Undefined, optional
        Configuration block with ECR configuration. Detailed below.
    imageScanningEnabled : bool, default is Undefined, optional
        Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.
    """


    ecrConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0EcrConfigurationItems0]

    imageScanningEnabled?: bool


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageScanningConfigurationItems0EcrConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec init provider image scanning configuration items0 ecr configuration items0

    Attributes
    ----------
    containerTags : [str], default is Undefined, optional
        Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.
    repositoryName : str, default is Undefined, optional
        The name of the container repository that Amazon Inspector scans to identify findings for your container images.
    """


    containerTags?: [str]

    repositoryName?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderImageTestsConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec init provider image tests configuration items0

    Attributes
    ----------
    imageTestsEnabled : bool, default is Undefined, optional
        Whether image tests are enabled. Defaults to true.
    timeoutMinutes : float, default is Undefined, optional
        Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.
    """


    imageTestsEnabled?: bool

    timeoutMinutes?: float


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRef:
    r"""
    Reference to a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelector:
    r"""
    Selector for a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderInfrastructureConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec init provider workflow items0

    Attributes
    ----------
    onFailure : str, default is Undefined, optional
        The action to take if the workflow fails. Must be one of CONTINUE or ABORT.
    parallelGroup : str, default is Undefined, optional
        The parallel group in which to run a test Workflow.
    parameter : [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0ParameterItems0], default is Undefined, optional
        Configuration block for the workflow parameters. Detailed below.
    workflowArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Workflow.
    """


    onFailure?: str

    parallelGroup?: str

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0ParameterItems0]

    workflowArn?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecInitProviderWorkflowItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image spec init provider workflow items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Workflow parameter.
    value : str, default is Undefined, optional
        The value of the Workflow parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRef

    metadata?: ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToMetadata

    name: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatus:
    r"""
    ImageStatus defines the observed state of Image.

    Attributes
    ----------
    atProvider : ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagebuilderAwsUpboundIoV1beta1ImageStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProvider

    conditions?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusConditionsItems0]

    observedGeneration?: int


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProvider:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the image.
    containerRecipeArn : str, default is Undefined, optional
        - Amazon Resource Name (ARN) of the container recipe.
    dateCreated : str, default is Undefined, optional
        Date the image was created.
    distributionConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
    enhancedImageMetadataEnabled : bool, default is Undefined, optional
        Whether additional information about the image being created is collected. Defaults to true.
    executionRole : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.
    id : str, default is Undefined, optional
        id
    imageRecipeArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the image recipe.
    imageScanningConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0], default is Undefined, optional
        Configuration block with image scanning configuration. Detailed below.
    imageTestsConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageTestsConfigurationItems0], default is Undefined, optional
        Configuration block with image tests configuration. Detailed below.
    infrastructureConfigurationArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
    name : str, default is Undefined, optional
        Name of the AMI.
    osVersion : str, default is Undefined, optional
        Operating System version of the image.
    outputResources : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0], default is Undefined, optional
        List of objects with resources created by the image.
    platform : str, default is Undefined, optional
        Platform of the image.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : str, default is Undefined, optional
        Version of the image.
    workflow : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0], default is Undefined, optional
        Configuration block with the workflow configuration. Detailed below.
    """


    arn?: str

    containerRecipeArn?: str

    dateCreated?: str

    distributionConfigurationArn?: str

    enhancedImageMetadataEnabled?: bool

    executionRole?: str

    id?: str

    imageRecipeArn?: str

    imageScanningConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0]

    imageTestsConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageTestsConfigurationItems0]

    infrastructureConfigurationArn?: str

    name?: str

    osVersion?: str

    outputResources?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0]

    platform?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: str

    workflow?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0]


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider image scanning configuration items0

    Attributes
    ----------
    ecrConfiguration : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0EcrConfigurationItems0], default is Undefined, optional
        Configuration block with ECR configuration. Detailed below.
    imageScanningEnabled : bool, default is Undefined, optional
        Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.
    """


    ecrConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0EcrConfigurationItems0]

    imageScanningEnabled?: bool


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageScanningConfigurationItems0EcrConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider image scanning configuration items0 ecr configuration items0

    Attributes
    ----------
    containerTags : [str], default is Undefined, optional
        Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.
    repositoryName : str, default is Undefined, optional
        The name of the container repository that Amazon Inspector scans to identify findings for your container images.
    """


    containerTags?: [str]

    repositoryName?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderImageTestsConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider image tests configuration items0

    Attributes
    ----------
    imageTestsEnabled : bool, default is Undefined, optional
        Whether image tests are enabled. Defaults to true.
    timeoutMinutes : float, default is Undefined, optional
        Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.
    """


    imageTestsEnabled?: bool

    timeoutMinutes?: float


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider output resources items0

    Attributes
    ----------
    amis : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0AmisItems0], default is Undefined, optional
        Set of objects with each Amazon Machine Image (AMI) created.
    containers : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0ContainersItems0], default is Undefined, optional
        Set of objects with each container image created and stored in the output repository.
    """


    amis?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0AmisItems0]

    containers?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0ContainersItems0]


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0AmisItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider output resources items0 amis items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        Account identifier of the AMI.
    description : str, default is Undefined, optional
        Description of the AMI.
    image : str, default is Undefined, optional
        Identifier of the AMI.
    name : str, default is Undefined, optional
        The name of the Workflow parameter.
    region : str, default is Undefined, optional
        Region of the AMI.
    """


    accountId?: str

    description?: str

    image?: str

    name?: str

    region?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderOutputResourcesItems0ContainersItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider output resources items0 containers items0

    Attributes
    ----------
    imageUris : [str], default is Undefined, optional
        Set of URIs for created containers.
    region : str, default is Undefined, optional
        Region of the AMI.
    """


    imageUris?: [str]

    region?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider workflow items0

    Attributes
    ----------
    onFailure : str, default is Undefined, optional
        The action to take if the workflow fails. Must be one of CONTINUE or ABORT.
    parallelGroup : str, default is Undefined, optional
        The parallel group in which to run a test Workflow.
    parameter : [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0ParameterItems0], default is Undefined, optional
        Configuration block for the workflow parameters. Detailed below.
    workflowArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Workflow.
    """


    onFailure?: str

    parallelGroup?: str

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0ParameterItems0]

    workflowArn?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusAtProviderWorkflowItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 image status at provider workflow items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Workflow parameter.
    value : str, default is Undefined, optional
        The value of the Workflow parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ImageStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


