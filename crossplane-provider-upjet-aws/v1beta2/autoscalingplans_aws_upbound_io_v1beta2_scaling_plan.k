"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ScalingPlan:
    r"""
    ScalingPlan is the Schema for the ScalingPlans API. Manages an AWS Auto Scaling scaling plan.

    Attributes
    ----------
    apiVersion : str, default is "autoscalingplans.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ScalingPlan", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpec, default is Undefined, required
        spec
    status : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatus, default is Undefined, optional
        status
    """


    apiVersion: "autoscalingplans.aws.upbound.io/v1beta2" = "autoscalingplans.aws.upbound.io/v1beta2"

    kind: "ScalingPlan" = "ScalingPlan"

    metadata?: v1.ObjectMeta

    spec: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpec

    status?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatus


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpec:
    r"""
    ScalingPlanSpec defines the desired state of ScalingPlan

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProvider, default is Undefined, required
        for provider
    initProvider : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProvider

    initProvider?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRef

    publishConnectionDetailsTo?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecWriteConnectionSecretToRef


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProvider:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec for provider

    Attributes
    ----------
    applicationSource : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSource, default is Undefined, optional
        application source
    name : str, default is Undefined, optional
        Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scalingInstruction : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0], default is Undefined, optional
        Scaling instructions. More details can be found in the AWS Auto Scaling API Reference.
    """


    applicationSource?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSource

    name?: str

    region: str

    scalingInstruction?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSource:
    r"""
    CloudFormation stack or set of tags. You can create one scaling plan per application source.

    Attributes
    ----------
    cloudformationStackArn : str, default is Undefined, optional
        ARN of a AWS CloudFormation stack.
    tagFilter : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSourceTagFilterItems0], default is Undefined, optional
        Set of tags.
    """


    cloudformationStackArn?: str

    tagFilter?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSourceTagFilterItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderApplicationSourceTagFilterItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec for provider application source tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Tag key.
    values : [str], default is Undefined, optional
        Tag values.
    """


    key?: str

    values?: [str]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec for provider scaling instruction items0

    Attributes
    ----------
    customizedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0CustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    disableDynamicScaling : bool, default is Undefined, optional
        Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to false.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for predictive_scaling_max_capacity_behavior.
    minCapacity : float, default is Undefined, optional
        Minimum capacity of the resource.
    predefinedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0PredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predictiveScalingMaxCapacityBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
        Valid values: SetForecastCapacityToMaxCapacity, SetMaxCapacityAboveForecastCapacity, SetMaxCapacityToForecastCapacity.
    predictiveScalingMaxCapacityBuffer : float, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
    predictiveScalingMode : str, default is Undefined, optional
        Predictive scaling mode. Valid values: ForecastAndScale, ForecastOnly.
    resourceId : str, default is Undefined, optional
        ID of the resource. This string consists of the resource type and unique identifier.
    scalableDimension : str, default is Undefined, optional
        Scalable dimension associated with the resource. Valid values: autoscaling:autoScalingGroup:DesiredCapacity, dynamodb:index:ReadCapacityUnits, dynamodb:index:WriteCapacityUnits, dynamodb:table:ReadCapacityUnits, dynamodb:table:WriteCapacityUnits, ecs:service:DesiredCount, ec2:spot-fleet-request:TargetCapacity, rds:cluster:ReadReplicaCount.
    scalingPolicyUpdateBehavior : str, default is Undefined, optional
        Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: KeepExternalPolicies, ReplaceExternalPolicies. Defaults to KeepExternalPolicies.
    scheduledActionBufferTime : float, default is Undefined, optional
        Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Valid values: autoscaling, dynamodb, ecs, ec2, rds.
    targetTrackingConfiguration : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0], default is Undefined, optional
        Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
        More details can be found in the AWS Auto Scaling API Reference.
    """


    customizedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0CustomizedLoadMetricSpecification

    disableDynamicScaling?: bool

    maxCapacity?: float

    minCapacity?: float

    predefinedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0PredefinedLoadMetricSpecification

    predictiveScalingMaxCapacityBehavior?: str

    predictiveScalingMaxCapacityBuffer?: float

    predictiveScalingMode?: str

    resourceId?: str

    scalableDimension?: str

    scalingPolicyUpdateBehavior?: str

    scheduledActionBufferTime?: float

    serviceNamespace?: str

    targetTrackingConfiguration?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0CustomizedLoadMetricSpecification:
    r"""
    Customized load metric to use for predictive scaling. You must specify either customized_load_metric_specification or predefined_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0PredefinedLoadMetricSpecification:
    r"""
    Predefined load metric to use for predictive scaling. You must specify either predefined_load_metric_specification or customized_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedLoadMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBTargetGroupRequestCount, ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedLoadMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec for provider scaling instruction items0 target tracking configuration items0

    Attributes
    ----------
    customizedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    disableScaleIn : bool, default is Undefined, optional
        Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to false.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
        This value is used only if the resource is an Auto Scaling group.
    predefinedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification

    disableScaleIn?: bool

    estimatedInstanceWarmup?: float

    predefinedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification:
    r"""
    Customized metric. You can specify either customized_scaling_metric_specification or predefined_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecForProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification:
    r"""
    Predefined metric. You can specify either predefined_scaling_metric_specification or customized_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedScalingMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBRequestCountPerTarget, ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, DynamoDBReadCapacityUtilization, DynamoDBWriteCapacityUtilization, ECSServiceAverageCPUUtilization, ECSServiceAverageMemoryUtilization, EC2SpotFleetRequestAverageCPUUtilization, EC2SpotFleetRequestAverageNetworkIn, EC2SpotFleetRequestAverageNetworkOut, RDSReaderAverageCPUUtilization, RDSReaderAverageDatabaseConnections.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedScalingMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationSource : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSource, default is Undefined, optional
        application source
    name : str, default is Undefined, optional
        Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.
    scalingInstruction : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0], default is Undefined, optional
        Scaling instructions. More details can be found in the AWS Auto Scaling API Reference.
    """


    applicationSource?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSource

    name?: str

    scalingInstruction?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSource:
    r"""
    CloudFormation stack or set of tags. You can create one scaling plan per application source.

    Attributes
    ----------
    cloudformationStackArn : str, default is Undefined, optional
        ARN of a AWS CloudFormation stack.
    tagFilter : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSourceTagFilterItems0], default is Undefined, optional
        Set of tags.
    """


    cloudformationStackArn?: str

    tagFilter?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSourceTagFilterItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderApplicationSourceTagFilterItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec init provider application source tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Tag key.
    values : [str], default is Undefined, optional
        Tag values.
    """


    key?: str

    values?: [str]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec init provider scaling instruction items0

    Attributes
    ----------
    customizedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0CustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    disableDynamicScaling : bool, default is Undefined, optional
        Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to false.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for predictive_scaling_max_capacity_behavior.
    minCapacity : float, default is Undefined, optional
        Minimum capacity of the resource.
    predefinedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0PredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predictiveScalingMaxCapacityBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
        Valid values: SetForecastCapacityToMaxCapacity, SetMaxCapacityAboveForecastCapacity, SetMaxCapacityToForecastCapacity.
    predictiveScalingMaxCapacityBuffer : float, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
    predictiveScalingMode : str, default is Undefined, optional
        Predictive scaling mode. Valid values: ForecastAndScale, ForecastOnly.
    resourceId : str, default is Undefined, optional
        ID of the resource. This string consists of the resource type and unique identifier.
    scalableDimension : str, default is Undefined, optional
        Scalable dimension associated with the resource. Valid values: autoscaling:autoScalingGroup:DesiredCapacity, dynamodb:index:ReadCapacityUnits, dynamodb:index:WriteCapacityUnits, dynamodb:table:ReadCapacityUnits, dynamodb:table:WriteCapacityUnits, ecs:service:DesiredCount, ec2:spot-fleet-request:TargetCapacity, rds:cluster:ReadReplicaCount.
    scalingPolicyUpdateBehavior : str, default is Undefined, optional
        Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: KeepExternalPolicies, ReplaceExternalPolicies. Defaults to KeepExternalPolicies.
    scheduledActionBufferTime : float, default is Undefined, optional
        Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Valid values: autoscaling, dynamodb, ecs, ec2, rds.
    targetTrackingConfiguration : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0], default is Undefined, optional
        Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
        More details can be found in the AWS Auto Scaling API Reference.
    """


    customizedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0CustomizedLoadMetricSpecification

    disableDynamicScaling?: bool

    maxCapacity?: float

    minCapacity?: float

    predefinedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0PredefinedLoadMetricSpecification

    predictiveScalingMaxCapacityBehavior?: str

    predictiveScalingMaxCapacityBuffer?: float

    predictiveScalingMode?: str

    resourceId?: str

    scalableDimension?: str

    scalingPolicyUpdateBehavior?: str

    scheduledActionBufferTime?: float

    serviceNamespace?: str

    targetTrackingConfiguration?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0CustomizedLoadMetricSpecification:
    r"""
    Customized load metric to use for predictive scaling. You must specify either customized_load_metric_specification or predefined_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0PredefinedLoadMetricSpecification:
    r"""
    Predefined load metric to use for predictive scaling. You must specify either predefined_load_metric_specification or customized_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedLoadMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBTargetGroupRequestCount, ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedLoadMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan spec init provider scaling instruction items0 target tracking configuration items0

    Attributes
    ----------
    customizedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    disableScaleIn : bool, default is Undefined, optional
        Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to false.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
        This value is used only if the resource is an Auto Scaling group.
    predefinedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification

    disableScaleIn?: bool

    estimatedInstanceWarmup?: float

    predefinedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification:
    r"""
    Customized metric. You can specify either customized_scaling_metric_specification or predefined_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecInitProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification:
    r"""
    Predefined metric. You can specify either predefined_scaling_metric_specification or customized_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedScalingMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBRequestCountPerTarget, ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, DynamoDBReadCapacityUtilization, DynamoDBWriteCapacityUtilization, ECSServiceAverageCPUUtilization, ECSServiceAverageMemoryUtilization, EC2SpotFleetRequestAverageCPUUtilization, EC2SpotFleetRequestAverageNetworkIn, EC2SpotFleetRequestAverageNetworkOut, RDSReaderAverageCPUUtilization, RDSReaderAverageDatabaseConnections.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedScalingMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRefPolicy


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRef

    metadata?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToMetadata

    name: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRefPolicy


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatus:
    r"""
    ScalingPlanStatus defines the observed state of ScalingPlan.

    Attributes
    ----------
    atProvider : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProvider

    conditions?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusConditionsItems0]

    observedGeneration?: int


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProvider:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan status at provider

    Attributes
    ----------
    applicationSource : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSource, default is Undefined, optional
        application source
    id : str, default is Undefined, optional
        Scaling plan identifier.
    name : str, default is Undefined, optional
        Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.
    scalingInstruction : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0], default is Undefined, optional
        Scaling instructions. More details can be found in the AWS Auto Scaling API Reference.
    scalingPlanVersion : float, default is Undefined, optional
        The version number of the scaling plan. This value is always 1.
    """


    applicationSource?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSource

    id?: str

    name?: str

    scalingInstruction?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0]

    scalingPlanVersion?: float


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSource:
    r"""
    CloudFormation stack or set of tags. You can create one scaling plan per application source.

    Attributes
    ----------
    cloudformationStackArn : str, default is Undefined, optional
        ARN of a AWS CloudFormation stack.
    tagFilter : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSourceTagFilterItems0], default is Undefined, optional
        Set of tags.
    """


    cloudformationStackArn?: str

    tagFilter?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSourceTagFilterItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderApplicationSourceTagFilterItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan status at provider application source tag filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Tag key.
    values : [str], default is Undefined, optional
        Tag values.
    """


    key?: str

    values?: [str]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan status at provider scaling instruction items0

    Attributes
    ----------
    customizedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0CustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    disableDynamicScaling : bool, default is Undefined, optional
        Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to false.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for predictive_scaling_max_capacity_behavior.
    minCapacity : float, default is Undefined, optional
        Minimum capacity of the resource.
    predefinedLoadMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0PredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predictiveScalingMaxCapacityBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
        Valid values: SetForecastCapacityToMaxCapacity, SetMaxCapacityAboveForecastCapacity, SetMaxCapacityToForecastCapacity.
    predictiveScalingMaxCapacityBuffer : float, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
    predictiveScalingMode : str, default is Undefined, optional
        Predictive scaling mode. Valid values: ForecastAndScale, ForecastOnly.
    resourceId : str, default is Undefined, optional
        ID of the resource. This string consists of the resource type and unique identifier.
    scalableDimension : str, default is Undefined, optional
        Scalable dimension associated with the resource. Valid values: autoscaling:autoScalingGroup:DesiredCapacity, dynamodb:index:ReadCapacityUnits, dynamodb:index:WriteCapacityUnits, dynamodb:table:ReadCapacityUnits, dynamodb:table:WriteCapacityUnits, ecs:service:DesiredCount, ec2:spot-fleet-request:TargetCapacity, rds:cluster:ReadReplicaCount.
    scalingPolicyUpdateBehavior : str, default is Undefined, optional
        Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: KeepExternalPolicies, ReplaceExternalPolicies. Defaults to KeepExternalPolicies.
    scheduledActionBufferTime : float, default is Undefined, optional
        Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Valid values: autoscaling, dynamodb, ecs, ec2, rds.
    targetTrackingConfiguration : [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0], default is Undefined, optional
        Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
        More details can be found in the AWS Auto Scaling API Reference.
    """


    customizedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0CustomizedLoadMetricSpecification

    disableDynamicScaling?: bool

    maxCapacity?: float

    minCapacity?: float

    predefinedLoadMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0PredefinedLoadMetricSpecification

    predictiveScalingMaxCapacityBehavior?: str

    predictiveScalingMaxCapacityBuffer?: float

    predictiveScalingMode?: str

    resourceId?: str

    scalableDimension?: str

    scalingPolicyUpdateBehavior?: str

    scheduledActionBufferTime?: float

    serviceNamespace?: str

    targetTrackingConfiguration?: [AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0]


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0CustomizedLoadMetricSpecification:
    r"""
    Customized load metric to use for predictive scaling. You must specify either customized_load_metric_specification or predefined_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0PredefinedLoadMetricSpecification:
    r"""
    Predefined load metric to use for predictive scaling. You must specify either predefined_load_metric_specification or customized_load_metric_specification when configuring predictive scaling.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedLoadMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBTargetGroupRequestCount, ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedLoadMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0:
    r"""
    autoscalingplans aws upbound io v1beta2 scaling plan status at provider scaling instruction items0 target tracking configuration items0

    Attributes
    ----------
    customizedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    disableScaleIn : bool, default is Undefined, optional
        Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to false.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
        This value is used only if the resource is an Auto Scaling group.
    predefinedScalingMetricSpecification : AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    scaleInCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    scaleOutCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
        This value is not used if the scalable resource is an Auto Scaling group.
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification

    disableScaleIn?: bool

    estimatedInstanceWarmup?: float

    predefinedScalingMetricSpecification?: AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification

    scaleInCooldown?: float

    scaleOutCooldown?: float

    targetValue?: float


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0CustomizedScalingMetricSpecification:
    r"""
    Customized metric. You can specify either customized_scaling_metric_specification or predefined_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric. Currently, the value must always be Sum.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusAtProviderScalingInstructionItems0TargetTrackingConfigurationItems0PredefinedScalingMetricSpecification:
    r"""
    Predefined metric. You can specify either predefined_scaling_metric_specification or customized_scaling_metric_specification.
    More details can be found in the AWS Auto Scaling API Reference.

    Attributes
    ----------
    predefinedScalingMetricType : str, default is Undefined, optional
        Metric type. Valid values: ALBRequestCountPerTarget, ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, DynamoDBReadCapacityUtilization, DynamoDBWriteCapacityUtilization, ECSServiceAverageCPUUtilization, ECSServiceAverageMemoryUtilization, EC2SpotFleetRequestAverageCPUUtilization, EC2SpotFleetRequestAverageNetworkIn, EC2SpotFleetRequestAverageNetworkOut, RDSReaderAverageCPUUtilization, RDSReaderAverageDatabaseConnections.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedScalingMetricType?: str

    resourceLabel?: str


schema AutoscalingplansAwsUpboundIoV1beta2ScalingPlanStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


