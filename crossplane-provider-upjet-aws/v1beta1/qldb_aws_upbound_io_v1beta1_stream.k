"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stream:
    r"""
    Stream is the Schema for the Streams API. Provides a QLDB Stream resource.

    Attributes
    ----------
    apiVersion : str, default is "qldb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stream", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : QldbAwsUpboundIoV1beta1StreamSpec, default is Undefined, required
        spec
    status : QldbAwsUpboundIoV1beta1StreamStatus, default is Undefined, optional
        status
    """


    apiVersion: "qldb.aws.upbound.io/v1beta1" = "qldb.aws.upbound.io/v1beta1"

    kind: "Stream" = "Stream"

    metadata?: v1.ObjectMeta

    spec: QldbAwsUpboundIoV1beta1StreamSpec

    status?: QldbAwsUpboundIoV1beta1StreamStatus


schema QldbAwsUpboundIoV1beta1StreamSpec:
    r"""
    StreamSpec defines the desired state of Stream

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : QldbAwsUpboundIoV1beta1StreamSpecForProvider, default is Undefined, required
        for provider
    initProvider : QldbAwsUpboundIoV1beta1StreamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : QldbAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: QldbAwsUpboundIoV1beta1StreamSpecForProvider

    initProvider?: QldbAwsUpboundIoV1beta1StreamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRef

    publishConnectionDetailsTo?: QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: QldbAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef


schema QldbAwsUpboundIoV1beta1StreamSpecForProvider:
    r"""
    qldb aws upbound io v1beta1 stream spec for provider

    Attributes
    ----------
    exclusiveEndTime : str, default is Undefined, optional
        The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".
    inclusiveStartTime : str, default is Undefined, optional
        The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger's CreationDateTime, QLDB effectively defaults it to the ledger's CreationDateTime.
    kinesisConfiguration : [QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0], default is Undefined, optional
        The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
    ledgerName : str, default is Undefined, optional
        The name of the QLDB ledger.
    ledgerNameRef : QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRef, default is Undefined, optional
        ledger name ref
    ledgerNameSelector : QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelector, default is Undefined, optional
        ledger name selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
    roleArnRef : QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    streamName : str, default is Undefined, optional
        The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    exclusiveEndTime?: str

    inclusiveStartTime?: str

    kinesisConfiguration?: [QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0]

    ledgerName?: str

    ledgerNameRef?: QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRef

    ledgerNameSelector?: QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelector

    region: str

    roleArn?: str

    roleArnRef?: QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRef

    roleArnSelector?: QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelector

    streamName?: str

    tags?: {str:str}


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0:
    r"""
    qldb aws upbound io v1beta1 stream spec for provider kinesis configuration items0

    Attributes
    ----------
    aggregationEnabled : bool, default is Undefined, optional
        Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.
    streamArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
    streamArnRef : QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRef, default is Undefined, optional
        stream arn ref
    streamArnSelector : QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelector, default is Undefined, optional
        stream arn selector
    """


    aggregationEnabled?: bool

    streamArn?: str

    streamArnRef?: QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRef

    streamArnSelector?: QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelector


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRef:
    r"""
    Reference to a Stream in kinesis to populate streamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelector:
    r"""
    Selector for a Stream in kinesis to populate streamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderKinesisConfigurationItems0StreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRef:
    r"""
    Reference to a Ledger in qldb to populate ledgerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelector:
    r"""
    Selector for a Ledger in qldb to populate ledgerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderLedgerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    exclusiveEndTime : str, default is Undefined, optional
        The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".
    inclusiveStartTime : str, default is Undefined, optional
        The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger's CreationDateTime, QLDB effectively defaults it to the ledger's CreationDateTime.
    kinesisConfiguration : [QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0], default is Undefined, optional
        The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
    ledgerName : str, default is Undefined, optional
        The name of the QLDB ledger.
    ledgerNameRef : QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRef, default is Undefined, optional
        ledger name ref
    ledgerNameSelector : QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelector, default is Undefined, optional
        ledger name selector
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
    roleArnRef : QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    streamName : str, default is Undefined, optional
        The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    exclusiveEndTime?: str

    inclusiveStartTime?: str

    kinesisConfiguration?: [QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0]

    ledgerName?: str

    ledgerNameRef?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRef

    ledgerNameSelector?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelector

    roleArn?: str

    roleArnRef?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRef

    roleArnSelector?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelector

    streamName?: str

    tags?: {str:str}


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0:
    r"""
    qldb aws upbound io v1beta1 stream spec init provider kinesis configuration items0

    Attributes
    ----------
    aggregationEnabled : bool, default is Undefined, optional
        Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.
    streamArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
    streamArnRef : QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRef, default is Undefined, optional
        stream arn ref
    streamArnSelector : QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelector, default is Undefined, optional
        stream arn selector
    """


    aggregationEnabled?: bool

    streamArn?: str

    streamArnRef?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRef

    streamArnSelector?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelector


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRef:
    r"""
    Reference to a Stream in kinesis to populate streamArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelector:
    r"""
    Selector for a Stream in kinesis to populate streamArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderKinesisConfigurationItems0StreamArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRef:
    r"""
    Reference to a Ledger in qldb to populate ledgerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelector:
    r"""
    Selector for a Ledger in qldb to populate ledgerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderLedgerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelectorPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef

    metadata?: QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata

    name: str


schema QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy


schema QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema QldbAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema QldbAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema QldbAwsUpboundIoV1beta1StreamStatus:
    r"""
    StreamStatus defines the observed state of Stream.

    Attributes
    ----------
    atProvider : QldbAwsUpboundIoV1beta1StreamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [QldbAwsUpboundIoV1beta1StreamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: QldbAwsUpboundIoV1beta1StreamStatusAtProvider

    conditions?: [QldbAwsUpboundIoV1beta1StreamStatusConditionsItems0]

    observedGeneration?: int


schema QldbAwsUpboundIoV1beta1StreamStatusAtProvider:
    r"""
    qldb aws upbound io v1beta1 stream status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the QLDB Stream.
    exclusiveEndTime : str, default is Undefined, optional
        The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".
    id : str, default is Undefined, optional
        The ID of the QLDB Stream.
    inclusiveStartTime : str, default is Undefined, optional
        The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger's CreationDateTime, QLDB effectively defaults it to the ledger's CreationDateTime.
    kinesisConfiguration : [QldbAwsUpboundIoV1beta1StreamStatusAtProviderKinesisConfigurationItems0], default is Undefined, optional
        The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
    ledgerName : str, default is Undefined, optional
        The name of the QLDB ledger.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
    streamName : str, default is Undefined, optional
        The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    exclusiveEndTime?: str

    id?: str

    inclusiveStartTime?: str

    kinesisConfiguration?: [QldbAwsUpboundIoV1beta1StreamStatusAtProviderKinesisConfigurationItems0]

    ledgerName?: str

    roleArn?: str

    streamName?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema QldbAwsUpboundIoV1beta1StreamStatusAtProviderKinesisConfigurationItems0:
    r"""
    qldb aws upbound io v1beta1 stream status at provider kinesis configuration items0

    Attributes
    ----------
    aggregationEnabled : bool, default is Undefined, optional
        Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.
    streamArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
    """


    aggregationEnabled?: bool

    streamArn?: str


schema QldbAwsUpboundIoV1beta1StreamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


