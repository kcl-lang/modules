"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AccessPoint:
    r"""
    AccessPoint is the Schema for the AccessPoints API. Manages an S3 Access Point.

    Attributes
    ----------
    apiVersion : str, default is "s3control.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AccessPoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3controlAwsUpboundIoV1beta1AccessPointSpec, default is Undefined, required
        spec
    status : S3controlAwsUpboundIoV1beta1AccessPointStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3control.aws.upbound.io/v1beta1" = "s3control.aws.upbound.io/v1beta1"

    kind: "AccessPoint" = "AccessPoint"

    metadata?: v1.ObjectMeta

    spec: S3controlAwsUpboundIoV1beta1AccessPointSpec

    status?: S3controlAwsUpboundIoV1beta1AccessPointStatus


schema S3controlAwsUpboundIoV1beta1AccessPointSpec:
    r"""
    AccessPointSpec defines the desired state of AccessPoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3controlAwsUpboundIoV1beta1AccessPointSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3controlAwsUpboundIoV1beta1AccessPointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3controlAwsUpboundIoV1beta1AccessPointSpecForProvider

    initProvider?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRef

    publishConnectionDetailsTo?: S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecWriteConnectionSecretToRef


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProvider:
    r"""
    s3control aws upbound io v1beta1 access point spec for provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        AWS account ID for the owner of the bucket for which you want to create an access point.
    bucket : str, default is Undefined, optional
        Name of an AWS Partition S3 General Purpose Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.
    bucketAccountId : str, default is Undefined, optional
        AWS account ID associated with the S3 bucket associated with this access point.
    bucketRef : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    name : str, default is Undefined, optional
        Name you want to assign to this access point.
    policy : str, default is Undefined, optional
        Valid JSON document that specifies the policy that you want to apply to this access point. Removing policy from your configuration or setting policy to null or an empty string (i.e., policy = "") will not delete the policy since it could have been set by aws_s3control_access_point_policy. To remove the policy, set it to "{}" (an empty JSON document).
    publicAccessBlockConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderPublicAccessBlockConfigurationItems0], default is Undefined, optional
        Configuration block to manage the PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    vpcConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0], default is Undefined, optional
        Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.
    """


    accountId?: str

    bucket?: str

    bucketAccountId?: str

    bucketRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRef

    bucketSelector?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelector

    name?: str

    policy?: str

    publicAccessBlockConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderPublicAccessBlockConfigurationItems0]

    region: str

    vpcConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelectorPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderPublicAccessBlockConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point spec for provider public access block configuration items0

    Attributes
    ----------
    blockPublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:
    blockPublicPolicy : bool, default is Undefined, optional
        Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:
    ignorePublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to true causes Amazon S3 to:
    restrictPublicBuckets : bool, default is Undefined, optional
        Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:
    """


    blockPublicAcls?: bool

    blockPublicPolicy?: bool

    ignorePublicAcls?: bool

    restrictPublicBuckets?: bool


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point spec for provider vpc configuration items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        This access point will only allow connections from the specified VPC ID.
    vpcIdRef : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    vpcId?: str

    vpcIdRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRef

    vpcIdSelector?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelector


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelectorPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecForProviderVpcConfigurationItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        AWS account ID for the owner of the bucket for which you want to create an access point.
    bucket : str, default is Undefined, optional
        Name of an AWS Partition S3 General Purpose Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.
    bucketAccountId : str, default is Undefined, optional
        AWS account ID associated with the S3 bucket associated with this access point.
    bucketRef : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    name : str, default is Undefined, optional
        Name you want to assign to this access point.
    policy : str, default is Undefined, optional
        Valid JSON document that specifies the policy that you want to apply to this access point. Removing policy from your configuration or setting policy to null or an empty string (i.e., policy = "") will not delete the policy since it could have been set by aws_s3control_access_point_policy. To remove the policy, set it to "{}" (an empty JSON document).
    publicAccessBlockConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderPublicAccessBlockConfigurationItems0], default is Undefined, optional
        Configuration block to manage the PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.
    vpcConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0], default is Undefined, optional
        Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.
    """


    accountId?: str

    bucket?: str

    bucketAccountId?: str

    bucketRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRef

    bucketSelector?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelector

    name?: str

    policy?: str

    publicAccessBlockConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderPublicAccessBlockConfigurationItems0]

    vpcConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelectorPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderPublicAccessBlockConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point spec init provider public access block configuration items0

    Attributes
    ----------
    blockPublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:
    blockPublicPolicy : bool, default is Undefined, optional
        Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:
    ignorePublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to true causes Amazon S3 to:
    restrictPublicBuckets : bool, default is Undefined, optional
        Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:
    """


    blockPublicAcls?: bool

    blockPublicPolicy?: bool

    ignorePublicAcls?: bool

    restrictPublicBuckets?: bool


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point spec init provider vpc configuration items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        This access point will only allow connections from the specified VPC ID.
    vpcIdRef : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    vpcId?: str

    vpcIdRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRef

    vpcIdSelector?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelector


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelectorPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecInitProviderVpcConfigurationItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRef

    metadata?: S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToMetadata

    name: str


schema S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRefPolicy


schema S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1AccessPointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3controlAwsUpboundIoV1beta1AccessPointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3controlAwsUpboundIoV1beta1AccessPointStatus:
    r"""
    AccessPointStatus defines the observed state of AccessPoint.

    Attributes
    ----------
    atProvider : S3controlAwsUpboundIoV1beta1AccessPointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3controlAwsUpboundIoV1beta1AccessPointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3controlAwsUpboundIoV1beta1AccessPointStatusAtProvider

    conditions?: [S3controlAwsUpboundIoV1beta1AccessPointStatusConditionsItems0]

    observedGeneration?: int


schema S3controlAwsUpboundIoV1beta1AccessPointStatusAtProvider:
    r"""
    s3control aws upbound io v1beta1 access point status at provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        AWS account ID for the owner of the bucket for which you want to create an access point.
    alias : str, default is Undefined, optional
        Alias of the S3 Access Point.
    arn : str, default is Undefined, optional
        ARN of the S3 Access Point.
    bucket : str, default is Undefined, optional
        Name of an AWS Partition S3 General Purpose Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.
    bucketAccountId : str, default is Undefined, optional
        AWS account ID associated with the S3 bucket associated with this access point.
    domainName : str, default is Undefined, optional
        DNS domain name of the S3 Access Point in the format name-account_id.s3-accesspoint.region.amazonaws.com.
        Note: S3 access points only support secure access by HTTPS. HTTP isn't supported.
    endpoints : {str:str}, default is Undefined, optional
        VPC endpoints for the S3 Access Point.
    hasPublicAccessPolicy : bool, default is Undefined, optional
        Indicates whether this access point currently has a policy that allows public access.
    id : str, default is Undefined, optional
        For Access Point of an AWS Partition S3 Bucket, the AWS account ID and access point name separated by a colon (:). For S3 on Outposts Bucket, the ARN of the Access Point.
    name : str, default is Undefined, optional
        Name you want to assign to this access point.
    networkOrigin : str, default is Undefined, optional
        Indicates whether this access point allows access from the public Internet. Values are VPC (the access point doesn't allow access from the public Internet) and Internet (the access point allows access from the public Internet, subject to the access point and bucket access policies).
    policy : str, default is Undefined, optional
        Valid JSON document that specifies the policy that you want to apply to this access point. Removing policy from your configuration or setting policy to null or an empty string (i.e., policy = "") will not delete the policy since it could have been set by aws_s3control_access_point_policy. To remove the policy, set it to "{}" (an empty JSON document).
    publicAccessBlockConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderPublicAccessBlockConfigurationItems0], default is Undefined, optional
        Configuration block to manage the PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.
    vpcConfiguration : [S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderVpcConfigurationItems0], default is Undefined, optional
        Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.
    """


    accountId?: str

    alias?: str

    arn?: str

    bucket?: str

    bucketAccountId?: str

    domainName?: str

    endpoints?: {str:str}

    hasPublicAccessPolicy?: bool

    id?: str

    name?: str

    networkOrigin?: str

    policy?: str

    publicAccessBlockConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderPublicAccessBlockConfigurationItems0]

    vpcConfiguration?: [S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderVpcConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderPublicAccessBlockConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point status at provider public access block configuration items0

    Attributes
    ----------
    blockPublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:
    blockPublicPolicy : bool, default is Undefined, optional
        Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:
    ignorePublicAcls : bool, default is Undefined, optional
        Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to true. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to true causes Amazon S3 to:
    restrictPublicBuckets : bool, default is Undefined, optional
        Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to true. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:
    """


    blockPublicAcls?: bool

    blockPublicPolicy?: bool

    ignorePublicAcls?: bool

    restrictPublicBuckets?: bool


schema S3controlAwsUpboundIoV1beta1AccessPointStatusAtProviderVpcConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 access point status at provider vpc configuration items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        This access point will only allow connections from the specified VPC ID.
    """


    vpcId?: str


schema S3controlAwsUpboundIoV1beta1AccessPointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


