"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Association:
    r"""
    Association is the Schema for the Associations API. Associates an SSM Document to an instance or EC2 tag.

    Attributes
    ----------
    apiVersion : str, default is "ssm.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Association", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SsmAwsUpboundIoV1beta1AssociationSpec, default is Undefined, required
        spec
    status : SsmAwsUpboundIoV1beta1AssociationStatus, default is Undefined, optional
        status
    """


    apiVersion: "ssm.aws.upbound.io/v1beta1" = "ssm.aws.upbound.io/v1beta1"

    kind: "Association" = "Association"

    metadata?: v1.ObjectMeta

    spec: SsmAwsUpboundIoV1beta1AssociationSpec

    status?: SsmAwsUpboundIoV1beta1AssociationStatus


schema SsmAwsUpboundIoV1beta1AssociationSpec:
    r"""
    AssociationSpec defines the desired state of Association

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SsmAwsUpboundIoV1beta1AssociationSpecForProvider, default is Undefined, required
        for provider
    initProvider : SsmAwsUpboundIoV1beta1AssociationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SsmAwsUpboundIoV1beta1AssociationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SsmAwsUpboundIoV1beta1AssociationSpecForProvider

    initProvider?: SsmAwsUpboundIoV1beta1AssociationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRef

    publishConnectionDetailsTo?: SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SsmAwsUpboundIoV1beta1AssociationSpecWriteConnectionSecretToRef


schema SsmAwsUpboundIoV1beta1AssociationSpecForProvider:
    r"""
    ssm aws upbound io v1beta1 association spec for provider

    Attributes
    ----------
    applyOnlyAtCronInterval : bool, default is Undefined, optional
        By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: false.
    associationName : str, default is Undefined, optional
        The descriptive name for the association.
    automationTargetParameterName : str, default is Undefined, optional
        Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls. This should be set to the SSM document parameter that will define how your automation will branch out.
    complianceSeverity : str, default is Undefined, optional
        The compliance severity for the association. Can be one of the following: UNSPECIFIED, LOW, MEDIUM, HIGH or CRITICAL
    documentVersion : str, default is Undefined, optional
        The document version you want to associate with the target(s). Can be a specific version or the default version.
    instanceId : str, default is Undefined, optional
        The instance ID to apply an SSM document to. Use targets with key InstanceIds for document schema versions 2.0 and above. Use the targets attribute instead.
    maxConcurrency : str, default is Undefined, optional
        The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
    maxErrors : str, default is Undefined, optional
        The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
    name : str, default is Undefined, optional
        The name of the SSM document to apply.
    nameRef : SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRef, default is Undefined, optional
        name ref
    nameSelector : SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelector, default is Undefined, optional
        name selector
    outputLocation : [SsmAwsUpboundIoV1beta1AssociationSpecForProviderOutputLocationItems0], default is Undefined, optional
        An output location block. Output Location is documented below.
    parameters : {str:str}, default is Undefined, optional
        A block of arbitrary string parameters to pass to the SSM document.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scheduleExpression : str, default is Undefined, optional
        A cron or rate expression that specifies when the association runs.
    syncCompliance : str, default is Undefined, optional
        The mode for generating association compliance. You can specify AUTO or MANUAL.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targets : [SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0], default is Undefined, optional
        A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
    waitForSuccessTimeoutSeconds : float, default is Undefined, optional
        The number of seconds to wait for the association status to be Success. If Success status is not reached within the given time, create opration will fail.
    """


    applyOnlyAtCronInterval?: bool

    associationName?: str

    automationTargetParameterName?: str

    complianceSeverity?: str

    documentVersion?: str

    instanceId?: str

    maxConcurrency?: str

    maxErrors?: str

    name?: str

    nameRef?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRef

    nameSelector?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelector

    outputLocation?: [SsmAwsUpboundIoV1beta1AssociationSpecForProviderOutputLocationItems0]

    parameters?: {str:str}

    region: str

    scheduleExpression?: str

    syncCompliance?: str

    tags?: {str:str}

    targets?: [SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0]

    waitForSuccessTimeoutSeconds?: float


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRef:
    r"""
    Reference to a Document in ssm to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRefPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelector:
    r"""
    Selector for a Document in ssm to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelectorPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderOutputLocationItems0:
    r"""
    ssm aws upbound io v1beta1 association spec for provider output location items0

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        The S3 bucket name.
    s3KeyPrefix : str, default is Undefined, optional
        The S3 bucket prefix. Results stored in the root if not configured.
    s3Region : str, default is Undefined, optional
        The S3 bucket region.
    """


    s3BucketName?: str

    s3KeyPrefix?: str

    s3Region?: str


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0:
    r"""
    ssm aws upbound io v1beta1 association spec for provider targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Either InstanceIds or tag:Tag Name to specify an EC2 tag.
    values : [str], default is Undefined, optional
        A list of instance IDs or tag values. AWS currently limits this list size to one value.
    valuesRefs : [SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0], default is Undefined, optional
        References to Instance in ec2 to populate values.
    valuesSelector : SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelector, default is Undefined, optional
        values selector
    """


    key?: str

    values?: [str]

    valuesRefs?: [SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0]

    valuesSelector?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelector


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0Policy


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelector:
    r"""
    Selector for a list of Instance in ec2 to populate values.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelectorPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecForProviderTargetsItems0ValuesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applyOnlyAtCronInterval : bool, default is Undefined, optional
        By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: false.
    associationName : str, default is Undefined, optional
        The descriptive name for the association.
    automationTargetParameterName : str, default is Undefined, optional
        Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls. This should be set to the SSM document parameter that will define how your automation will branch out.
    complianceSeverity : str, default is Undefined, optional
        The compliance severity for the association. Can be one of the following: UNSPECIFIED, LOW, MEDIUM, HIGH or CRITICAL
    documentVersion : str, default is Undefined, optional
        The document version you want to associate with the target(s). Can be a specific version or the default version.
    instanceId : str, default is Undefined, optional
        The instance ID to apply an SSM document to. Use targets with key InstanceIds for document schema versions 2.0 and above. Use the targets attribute instead.
    maxConcurrency : str, default is Undefined, optional
        The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
    maxErrors : str, default is Undefined, optional
        The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
    name : str, default is Undefined, optional
        The name of the SSM document to apply.
    nameRef : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRef, default is Undefined, optional
        name ref
    nameSelector : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelector, default is Undefined, optional
        name selector
    outputLocation : [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderOutputLocationItems0], default is Undefined, optional
        An output location block. Output Location is documented below.
    parameters : {str:str}, default is Undefined, optional
        A block of arbitrary string parameters to pass to the SSM document.
    scheduleExpression : str, default is Undefined, optional
        A cron or rate expression that specifies when the association runs.
    syncCompliance : str, default is Undefined, optional
        The mode for generating association compliance. You can specify AUTO or MANUAL.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targets : [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0], default is Undefined, optional
        A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
    waitForSuccessTimeoutSeconds : float, default is Undefined, optional
        The number of seconds to wait for the association status to be Success. If Success status is not reached within the given time, create opration will fail.
    """


    applyOnlyAtCronInterval?: bool

    associationName?: str

    automationTargetParameterName?: str

    complianceSeverity?: str

    documentVersion?: str

    instanceId?: str

    maxConcurrency?: str

    maxErrors?: str

    name?: str

    nameRef?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRef

    nameSelector?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelector

    outputLocation?: [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderOutputLocationItems0]

    parameters?: {str:str}

    scheduleExpression?: str

    syncCompliance?: str

    tags?: {str:str}

    targets?: [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0]

    waitForSuccessTimeoutSeconds?: float


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRef:
    r"""
    Reference to a Document in ssm to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRefPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelector:
    r"""
    Selector for a Document in ssm to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelectorPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderOutputLocationItems0:
    r"""
    ssm aws upbound io v1beta1 association spec init provider output location items0

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        The S3 bucket name.
    s3KeyPrefix : str, default is Undefined, optional
        The S3 bucket prefix. Results stored in the root if not configured.
    s3Region : str, default is Undefined, optional
        The S3 bucket region.
    """


    s3BucketName?: str

    s3KeyPrefix?: str

    s3Region?: str


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0:
    r"""
    ssm aws upbound io v1beta1 association spec init provider targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Either InstanceIds or tag:Tag Name to specify an EC2 tag.
    values : [str], default is Undefined, optional
        A list of instance IDs or tag values. AWS currently limits this list size to one value.
    valuesRefs : [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0], default is Undefined, optional
        References to Instance in ec2 to populate values.
    valuesSelector : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelector, default is Undefined, optional
        values selector
    """


    key?: str

    values?: [str]

    valuesRefs?: [SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0]

    valuesSelector?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelector


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0Policy


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelector:
    r"""
    Selector for a list of Instance in ec2 to populate values.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelectorPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecInitProviderTargetsItems0ValuesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRefPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRef

    metadata?: SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToMetadata

    name: str


schema SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRefPolicy


schema SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1AssociationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SsmAwsUpboundIoV1beta1AssociationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SsmAwsUpboundIoV1beta1AssociationStatus:
    r"""
    AssociationStatus defines the observed state of Association.

    Attributes
    ----------
    atProvider : SsmAwsUpboundIoV1beta1AssociationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SsmAwsUpboundIoV1beta1AssociationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SsmAwsUpboundIoV1beta1AssociationStatusAtProvider

    conditions?: [SsmAwsUpboundIoV1beta1AssociationStatusConditionsItems0]

    observedGeneration?: int


schema SsmAwsUpboundIoV1beta1AssociationStatusAtProvider:
    r"""
    ssm aws upbound io v1beta1 association status at provider

    Attributes
    ----------
    applyOnlyAtCronInterval : bool, default is Undefined, optional
        By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: false.
    arn : str, default is Undefined, optional
        The ARN of the SSM association
    associationId : str, default is Undefined, optional
        The ID of the SSM association.
    associationName : str, default is Undefined, optional
        The descriptive name for the association.
    automationTargetParameterName : str, default is Undefined, optional
        Specify the target for the association. This target is required for associations that use an Automation document and target resources by using rate controls. This should be set to the SSM document parameter that will define how your automation will branch out.
    complianceSeverity : str, default is Undefined, optional
        The compliance severity for the association. Can be one of the following: UNSPECIFIED, LOW, MEDIUM, HIGH or CRITICAL
    documentVersion : str, default is Undefined, optional
        The document version you want to associate with the target(s). Can be a specific version or the default version.
    id : str, default is Undefined, optional
        id
    instanceId : str, default is Undefined, optional
        The instance ID to apply an SSM document to. Use targets with key InstanceIds for document schema versions 2.0 and above. Use the targets attribute instead.
    maxConcurrency : str, default is Undefined, optional
        The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
    maxErrors : str, default is Undefined, optional
        The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
    name : str, default is Undefined, optional
        The name of the SSM document to apply.
    outputLocation : [SsmAwsUpboundIoV1beta1AssociationStatusAtProviderOutputLocationItems0], default is Undefined, optional
        An output location block. Output Location is documented below.
    parameters : {str:str}, default is Undefined, optional
        A block of arbitrary string parameters to pass to the SSM document.
    scheduleExpression : str, default is Undefined, optional
        A cron or rate expression that specifies when the association runs.
    syncCompliance : str, default is Undefined, optional
        The mode for generating association compliance. You can specify AUTO or MANUAL.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    targets : [SsmAwsUpboundIoV1beta1AssociationStatusAtProviderTargetsItems0], default is Undefined, optional
        A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
    waitForSuccessTimeoutSeconds : float, default is Undefined, optional
        The number of seconds to wait for the association status to be Success. If Success status is not reached within the given time, create opration will fail.
    """


    applyOnlyAtCronInterval?: bool

    arn?: str

    associationId?: str

    associationName?: str

    automationTargetParameterName?: str

    complianceSeverity?: str

    documentVersion?: str

    id?: str

    instanceId?: str

    maxConcurrency?: str

    maxErrors?: str

    name?: str

    outputLocation?: [SsmAwsUpboundIoV1beta1AssociationStatusAtProviderOutputLocationItems0]

    parameters?: {str:str}

    scheduleExpression?: str

    syncCompliance?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    targets?: [SsmAwsUpboundIoV1beta1AssociationStatusAtProviderTargetsItems0]

    waitForSuccessTimeoutSeconds?: float


schema SsmAwsUpboundIoV1beta1AssociationStatusAtProviderOutputLocationItems0:
    r"""
    ssm aws upbound io v1beta1 association status at provider output location items0

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        The S3 bucket name.
    s3KeyPrefix : str, default is Undefined, optional
        The S3 bucket prefix. Results stored in the root if not configured.
    s3Region : str, default is Undefined, optional
        The S3 bucket region.
    """


    s3BucketName?: str

    s3KeyPrefix?: str

    s3Region?: str


schema SsmAwsUpboundIoV1beta1AssociationStatusAtProviderTargetsItems0:
    r"""
    ssm aws upbound io v1beta1 association status at provider targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Either InstanceIds or tag:Tag Name to specify an EC2 tag.
    values : [str], default is Undefined, optional
        A list of instance IDs or tag values. AWS currently limits this list size to one value.
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1AssociationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


