"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Target:
    r"""
    Target is the Schema for the Targets API. Provides an EventBridge Target resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatchevents.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Target", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatcheventsAwsUpboundIoV1beta1TargetSpec, default is Undefined, required
        spec
    status : CloudwatcheventsAwsUpboundIoV1beta1TargetStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatchevents.aws.upbound.io/v1beta1" = "cloudwatchevents.aws.upbound.io/v1beta1"

    kind: "Target" = "Target"

    metadata?: v1.ObjectMeta

    spec: CloudwatcheventsAwsUpboundIoV1beta1TargetSpec

    status?: CloudwatcheventsAwsUpboundIoV1beta1TargetStatus


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpec:
    r"""
    TargetSpec defines the desired state of Target

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProvider

    initProvider?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider

    Attributes
    ----------
    appsyncTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderAppsyncTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an AppSync GraphQL API mutation. Documented below. A maximum of 1 are allowed.
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target.
    batchTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderBatchTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
    deadLetterConfig : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderDeadLetterConfigItems0], default is Undefined, optional
        Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
    ecsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with the rule.
        If you omit this, the default event bus is used.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    httpTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderHTTPTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
    input : str, default is Undefined, optional
        Valid JSON text passed to the target. Conflicts with input_path and input_transformer.
    inputPath : str, default is Undefined, optional
        The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. Conflicts with input and input_transformer.
    inputTransformer : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderInputTransformerItems0], default is Undefined, optional
        Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with input and input_path.
    kinesisTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderKinesisTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
    redshiftTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRedshiftTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    retryPolicy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRetryPolicyItems0], default is Undefined, optional
        Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if ecs_target is used or target in arn is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
    roleArnRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    $rule : str, default is Undefined, optional
        The name of the rule you want to add targets to.
    ruleRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRef, default is Undefined, optional
        rule ref
    ruleSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelector, default is Undefined, optional
        rule selector
    runCommandTargets : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRunCommandTargetsItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
    sagemakerPipelineTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
    sqsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSqsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
    targetId : str, default is Undefined, optional
        The unique target assignment ID. If missing, will generate a random, unique id.
    """


    appsyncTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderAppsyncTargetItems0]

    arn?: str

    batchTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderBatchTargetItems0]

    deadLetterConfig?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderDeadLetterConfigItems0]

    ecsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0]

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelector

    forceDestroy?: bool

    httpTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderHTTPTargetItems0]

    input?: str

    inputPath?: str

    inputTransformer?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderInputTransformerItems0]

    kinesisTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderKinesisTargetItems0]

    redshiftTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRedshiftTargetItems0]

    region: str

    retryPolicy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRetryPolicyItems0]

    roleArn?: str

    roleArnRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef

    roleArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector

    $rule?: str

    ruleRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRef

    ruleSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelector

    runCommandTargets?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRunCommandTargetsItems0]

    sagemakerPipelineTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0]

    sqsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSqsTargetItems0]

    targetId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderAppsyncTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider appsync target items0

    Attributes
    ----------
    graphqlOperation : str, default is Undefined, optional
        Contains the GraphQL mutation to be parsed and executed.
    """


    graphqlOperation?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderBatchTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider batch target items0

    Attributes
    ----------
    arraySize : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
    jobAttempts : float, default is Undefined, optional
        The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
    jobDefinition : str, default is Undefined, optional
        The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
    jobName : str, default is Undefined, optional
        The name to use for this execution of the job, if the target is an AWS Batch job.
    """


    arraySize?: float

    jobAttempts?: float

    jobDefinition?: str

    jobName?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderDeadLetterConfigItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider dead letter config items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        - ARN of the SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider ecs target items0

    Attributes
    ----------
    capacityProviderStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0CapacityProviderStrategyItems0], default is Undefined, optional
        The capacity provider strategy to use for the task. If a capacity_provider_strategy specified, the launch_type parameter must be omitted. If no capacity_provider_strategy or launch_type is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: EC2, EXTERNAL, or FARGATE.
    networkConfiguration : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0NetworkConfigurationItems0], default is Undefined, optional
        Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if launch_type is FARGATE because the awsvpc mode is required for Fargate tasks.
    orderedPlacementStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0OrderedPlacementStrategyItems0], default is Undefined, optional
        An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
    placementConstraint : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0PlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see AWS Fargate Platform Versions.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: TASK_DEFINITION.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to ecs resources.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on the TaskDefinition. Defaults to 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS cluster.
    taskDefinitionArnRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRef, default is Undefined, optional
        task definition arn ref
    taskDefinitionArnSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelector, default is Undefined, optional
        task definition arn selector
    """


    capacityProviderStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0CapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0NetworkConfigurationItems0]

    orderedPlacementStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0OrderedPlacementStrategyItems0]

    placementConstraint?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0PlacementConstraintItems0]

    platformVersion?: str

    propagateTags?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str

    taskDefinitionArnRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRef

    taskDefinitionArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelector


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0CapacityProviderStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider ecs target items0 capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to 0.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0NetworkConfigurationItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider ecs target items0 network configuration items0

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Assign a public IP address to the ENI (Fargate launch type only). Valid values are true or false. Defaults to false.
    securityGroups : [str], default is Undefined, optional
        The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        The subnets associated with the task or service.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0OrderedPlacementStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider ecs target items0 ordered placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. For more information, see Amazon ECS task placement strategies.
    $type : str, default is Undefined, optional
        Type of placement strategy. The only valid values at this time are binpack, random and spread.
    """


    field?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0PlacementConstraintItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider ecs target items0 placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. Does not need to be specified for the distinctInstance type. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. The only valid values at this time are memberOf and distinctInstance.
    """


    expression?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRef:
    r"""
    Reference to a TaskDefinition in ecs to populate taskDefinitionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelector:
    r"""
    Selector for a TaskDefinition in ecs to populate taskDefinitionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderHTTPTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider HTTP target items0

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Enables you to specify HTTP headers to add to the request.
    pathParameterValues : [str], default is Undefined, optional
        The list of values that correspond sequentially to any path variables in your endpoint ARN (for example arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*).
    queryStringParameters : {str:str}, default is Undefined, optional
        Represents keys/values of query string parameters that are appended to the invoked endpoint.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderInputTransformerItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider input transformer items0

    Attributes
    ----------
    inputPaths : {str:str}, default is Undefined, optional
        Key value pairs specified in the form of JSONPath (for example, time = $.time)
    inputTemplate : str, default is Undefined, optional
        Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.g., "\"Your string goes here.\\nA new line.\""
    """


    inputPaths?: {str:str}

    inputTemplate?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderKinesisTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider kinesis target items0

    Attributes
    ----------
    partitionKeyPath : str, default is Undefined, optional
        The JSON path to be extracted from the event and used as the partition key.
    """


    partitionKeyPath?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRedshiftTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider redshift target items0

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database.
    dbUser : str, default is Undefined, optional
        The database user name.
    secretsManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database.
    sql : str, default is Undefined, optional
        The SQL statement text to run.
    statementName : str, default is Undefined, optional
        The name of the SQL statement.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretsManagerArn?: str

    sql?: str

    statementName?: str

    withEvent?: bool


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRetryPolicyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider retry policy items0

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        The age in seconds to continue to make retry attempts.
    maximumRetryAttempts : float, default is Undefined, optional
        maximum number of retry attempts to make before the request fails
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRef:
    r"""
    Reference to a Rule in cloudwatchevents to populate rule.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelector:
    r"""
    Selector for a Rule in cloudwatchevents to populate rule.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRuleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderRunCommandTargetsItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider run command targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Can be either tag:tag-key or InstanceIds.
    values : [str], default is Undefined, optional
        If Key is tag:tag-key, Values is a list of tag values. If Key is InstanceIds, Values is a list of Amazon EC2 instance IDs.
    """


    key?: str

    values?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider sagemaker pipeline target items0

    Attributes
    ----------
    pipelineParameterList : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0PipelineParameterListItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution.
    """


    pipelineParameterList?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0PipelineParameterListItems0]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSagemakerPipelineTargetItems0PipelineParameterListItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider sagemaker pipeline target items0 pipeline parameter list items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecForProviderSqsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec for provider sqs target items0

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    appsyncTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderAppsyncTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an AppSync GraphQL API mutation. Documented below. A maximum of 1 are allowed.
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target.
    batchTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderBatchTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
    deadLetterConfig : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderDeadLetterConfigItems0], default is Undefined, optional
        Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
    ecsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with the rule.
        If you omit this, the default event bus is used.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    httpTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderHTTPTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
    input : str, default is Undefined, optional
        Valid JSON text passed to the target. Conflicts with input_path and input_transformer.
    inputPath : str, default is Undefined, optional
        The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. Conflicts with input and input_transformer.
    inputTransformer : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderInputTransformerItems0], default is Undefined, optional
        Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with input and input_path.
    kinesisTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderKinesisTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
    redshiftTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRedshiftTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
    retryPolicy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRetryPolicyItems0], default is Undefined, optional
        Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if ecs_target is used or target in arn is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
    roleArnRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    $rule : str, default is Undefined, optional
        The name of the rule you want to add targets to.
    ruleRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRef, default is Undefined, optional
        rule ref
    ruleSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelector, default is Undefined, optional
        rule selector
    runCommandTargets : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRunCommandTargetsItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
    sagemakerPipelineTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
    sqsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSqsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
    targetId : str, default is Undefined, optional
        The unique target assignment ID. If missing, will generate a random, unique id.
    """


    appsyncTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderAppsyncTargetItems0]

    arn?: str

    batchTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderBatchTargetItems0]

    deadLetterConfig?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderDeadLetterConfigItems0]

    ecsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0]

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelector

    forceDestroy?: bool

    httpTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderHTTPTargetItems0]

    input?: str

    inputPath?: str

    inputTransformer?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderInputTransformerItems0]

    kinesisTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderKinesisTargetItems0]

    redshiftTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRedshiftTargetItems0]

    retryPolicy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRetryPolicyItems0]

    roleArn?: str

    roleArnRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef

    roleArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector

    $rule?: str

    ruleRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRef

    ruleSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelector

    runCommandTargets?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRunCommandTargetsItems0]

    sagemakerPipelineTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0]

    sqsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSqsTargetItems0]

    targetId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderAppsyncTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider appsync target items0

    Attributes
    ----------
    graphqlOperation : str, default is Undefined, optional
        Contains the GraphQL mutation to be parsed and executed.
    """


    graphqlOperation?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderBatchTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider batch target items0

    Attributes
    ----------
    arraySize : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
    jobAttempts : float, default is Undefined, optional
        The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
    jobDefinition : str, default is Undefined, optional
        The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
    jobName : str, default is Undefined, optional
        The name to use for this execution of the job, if the target is an AWS Batch job.
    """


    arraySize?: float

    jobAttempts?: float

    jobDefinition?: str

    jobName?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderDeadLetterConfigItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider dead letter config items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        - ARN of the SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider ecs target items0

    Attributes
    ----------
    capacityProviderStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0CapacityProviderStrategyItems0], default is Undefined, optional
        The capacity provider strategy to use for the task. If a capacity_provider_strategy specified, the launch_type parameter must be omitted. If no capacity_provider_strategy or launch_type is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: EC2, EXTERNAL, or FARGATE.
    networkConfiguration : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0NetworkConfigurationItems0], default is Undefined, optional
        Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if launch_type is FARGATE because the awsvpc mode is required for Fargate tasks.
    orderedPlacementStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0OrderedPlacementStrategyItems0], default is Undefined, optional
        An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
    placementConstraint : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0PlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see AWS Fargate Platform Versions.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: TASK_DEFINITION.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to ecs resources.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on the TaskDefinition. Defaults to 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS cluster.
    taskDefinitionArnRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRef, default is Undefined, optional
        task definition arn ref
    taskDefinitionArnSelector : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelector, default is Undefined, optional
        task definition arn selector
    """


    capacityProviderStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0CapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0NetworkConfigurationItems0]

    orderedPlacementStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0OrderedPlacementStrategyItems0]

    placementConstraint?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0PlacementConstraintItems0]

    platformVersion?: str

    propagateTags?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str

    taskDefinitionArnRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRef

    taskDefinitionArnSelector?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelector


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0CapacityProviderStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider ecs target items0 capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to 0.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0NetworkConfigurationItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider ecs target items0 network configuration items0

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Assign a public IP address to the ENI (Fargate launch type only). Valid values are true or false. Defaults to false.
    securityGroups : [str], default is Undefined, optional
        The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        The subnets associated with the task or service.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0OrderedPlacementStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider ecs target items0 ordered placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. For more information, see Amazon ECS task placement strategies.
    $type : str, default is Undefined, optional
        Type of placement strategy. The only valid values at this time are binpack, random and spread.
    """


    field?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0PlacementConstraintItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider ecs target items0 placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. Does not need to be specified for the distinctInstance type. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. The only valid values at this time are memberOf and distinctInstance.
    """


    expression?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRef:
    r"""
    Reference to a TaskDefinition in ecs to populate taskDefinitionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelector:
    r"""
    Selector for a TaskDefinition in ecs to populate taskDefinitionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEcsTargetItems0TaskDefinitionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderHTTPTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider HTTP target items0

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Enables you to specify HTTP headers to add to the request.
    pathParameterValues : [str], default is Undefined, optional
        The list of values that correspond sequentially to any path variables in your endpoint ARN (for example arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*).
    queryStringParameters : {str:str}, default is Undefined, optional
        Represents keys/values of query string parameters that are appended to the invoked endpoint.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderInputTransformerItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider input transformer items0

    Attributes
    ----------
    inputPaths : {str:str}, default is Undefined, optional
        Key value pairs specified in the form of JSONPath (for example, time = $.time)
    inputTemplate : str, default is Undefined, optional
        Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.g., "\"Your string goes here.\\nA new line.\""
    """


    inputPaths?: {str:str}

    inputTemplate?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderKinesisTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider kinesis target items0

    Attributes
    ----------
    partitionKeyPath : str, default is Undefined, optional
        The JSON path to be extracted from the event and used as the partition key.
    """


    partitionKeyPath?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRedshiftTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider redshift target items0

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database.
    dbUser : str, default is Undefined, optional
        The database user name.
    secretsManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database.
    sql : str, default is Undefined, optional
        The SQL statement text to run.
    statementName : str, default is Undefined, optional
        The name of the SQL statement.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretsManagerArn?: str

    sql?: str

    statementName?: str

    withEvent?: bool


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRetryPolicyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider retry policy items0

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        The age in seconds to continue to make retry attempts.
    maximumRetryAttempts : float, default is Undefined, optional
        maximum number of retry attempts to make before the request fails
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRef:
    r"""
    Reference to a Rule in cloudwatchevents to populate rule.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelector:
    r"""
    Selector for a Rule in cloudwatchevents to populate rule.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRuleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderRunCommandTargetsItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider run command targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Can be either tag:tag-key or InstanceIds.
    values : [str], default is Undefined, optional
        If Key is tag:tag-key, Values is a list of tag values. If Key is InstanceIds, Values is a list of Amazon EC2 instance IDs.
    """


    key?: str

    values?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider sagemaker pipeline target items0

    Attributes
    ----------
    pipelineParameterList : [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0PipelineParameterListItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution.
    """


    pipelineParameterList?: [CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0PipelineParameterListItems0]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSagemakerPipelineTargetItems0PipelineParameterListItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider sagemaker pipeline target items0 pipeline parameter list items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecInitProviderSqsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target spec init provider sqs target items0

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatus:
    r"""
    TargetStatus defines the observed state of Target.

    Attributes
    ----------
    atProvider : CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProvider

    conditions?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider

    Attributes
    ----------
    appsyncTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderAppsyncTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an AppSync GraphQL API mutation. Documented below. A maximum of 1 are allowed.
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target.
    batchTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderBatchTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
    deadLetterConfig : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderDeadLetterConfigItems0], default is Undefined, optional
        Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
    ecsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
    eventBusName : str, default is Undefined, optional
        The name or ARN of the event bus to associate with the rule.
        If you omit this, the default event bus is used.
    forceDestroy : bool, default is Undefined, optional
        Used to delete managed rules created by AWS. Defaults to false.
    httpTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderHTTPTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
    id : str, default is Undefined, optional
        id
    input : str, default is Undefined, optional
        Valid JSON text passed to the target. Conflicts with input_path and input_transformer.
    inputPath : str, default is Undefined, optional
        The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. Conflicts with input and input_transformer.
    inputTransformer : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderInputTransformerItems0], default is Undefined, optional
        Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with input and input_path.
    kinesisTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderKinesisTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
    redshiftTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRedshiftTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
    retryPolicy : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRetryPolicyItems0], default is Undefined, optional
        Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if ecs_target is used or target in arn is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
    $rule : str, default is Undefined, optional
        The name of the rule you want to add targets to.
    runCommandTargets : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRunCommandTargetsItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
    sagemakerPipelineTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
    sqsTarget : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSqsTargetItems0], default is Undefined, optional
        Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
    targetId : str, default is Undefined, optional
        The unique target assignment ID. If missing, will generate a random, unique id.
    """


    appsyncTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderAppsyncTargetItems0]

    arn?: str

    batchTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderBatchTargetItems0]

    deadLetterConfig?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderDeadLetterConfigItems0]

    ecsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0]

    eventBusName?: str

    forceDestroy?: bool

    httpTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderHTTPTargetItems0]

    id?: str

    input?: str

    inputPath?: str

    inputTransformer?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderInputTransformerItems0]

    kinesisTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderKinesisTargetItems0]

    redshiftTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRedshiftTargetItems0]

    retryPolicy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRetryPolicyItems0]

    roleArn?: str

    $rule?: str

    runCommandTargets?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRunCommandTargetsItems0]

    sagemakerPipelineTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0]

    sqsTarget?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSqsTargetItems0]

    targetId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderAppsyncTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider appsync target items0

    Attributes
    ----------
    graphqlOperation : str, default is Undefined, optional
        Contains the GraphQL mutation to be parsed and executed.
    """


    graphqlOperation?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderBatchTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider batch target items0

    Attributes
    ----------
    arraySize : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
    jobAttempts : float, default is Undefined, optional
        The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
    jobDefinition : str, default is Undefined, optional
        The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
    jobName : str, default is Undefined, optional
        The name to use for this execution of the job, if the target is an AWS Batch job.
    """


    arraySize?: float

    jobAttempts?: float

    jobDefinition?: str

    jobName?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderDeadLetterConfigItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider dead letter config items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        - ARN of the SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider ecs target items0

    Attributes
    ----------
    capacityProviderStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0CapacityProviderStrategyItems0], default is Undefined, optional
        The capacity provider strategy to use for the task. If a capacity_provider_strategy specified, the launch_type parameter must be omitted. If no capacity_provider_strategy or launch_type is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: EC2, EXTERNAL, or FARGATE.
    networkConfiguration : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0NetworkConfigurationItems0], default is Undefined, optional
        Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if launch_type is FARGATE because the awsvpc mode is required for Fargate tasks.
    orderedPlacementStrategy : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0OrderedPlacementStrategyItems0], default is Undefined, optional
        An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
    placementConstraint : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0PlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see AWS Fargate Platform Versions.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: TASK_DEFINITION.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to ecs resources.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on the TaskDefinition. Defaults to 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS cluster.
    """


    capacityProviderStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0CapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0NetworkConfigurationItems0]

    orderedPlacementStrategy?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0OrderedPlacementStrategyItems0]

    placementConstraint?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0PlacementConstraintItems0]

    platformVersion?: str

    propagateTags?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0CapacityProviderStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider ecs target items0 capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to 0.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0NetworkConfigurationItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider ecs target items0 network configuration items0

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Assign a public IP address to the ENI (Fargate launch type only). Valid values are true or false. Defaults to false.
    securityGroups : [str], default is Undefined, optional
        The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        The subnets associated with the task or service.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0OrderedPlacementStrategyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider ecs target items0 ordered placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. For more information, see Amazon ECS task placement strategies.
    $type : str, default is Undefined, optional
        Type of placement strategy. The only valid values at this time are binpack, random and spread.
    """


    field?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderEcsTargetItems0PlacementConstraintItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider ecs target items0 placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. Does not need to be specified for the distinctInstance type. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. The only valid values at this time are memberOf and distinctInstance.
    """


    expression?: str

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderHTTPTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider HTTP target items0

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Enables you to specify HTTP headers to add to the request.
    pathParameterValues : [str], default is Undefined, optional
        The list of values that correspond sequentially to any path variables in your endpoint ARN (for example arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*).
    queryStringParameters : {str:str}, default is Undefined, optional
        Represents keys/values of query string parameters that are appended to the invoked endpoint.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderInputTransformerItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider input transformer items0

    Attributes
    ----------
    inputPaths : {str:str}, default is Undefined, optional
        Key value pairs specified in the form of JSONPath (for example, time = $.time)
    inputTemplate : str, default is Undefined, optional
        Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.g., "\"Your string goes here.\\nA new line.\""
    """


    inputPaths?: {str:str}

    inputTemplate?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderKinesisTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider kinesis target items0

    Attributes
    ----------
    partitionKeyPath : str, default is Undefined, optional
        The JSON path to be extracted from the event and used as the partition key.
    """


    partitionKeyPath?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRedshiftTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider redshift target items0

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database.
    dbUser : str, default is Undefined, optional
        The database user name.
    secretsManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database.
    sql : str, default is Undefined, optional
        The SQL statement text to run.
    statementName : str, default is Undefined, optional
        The name of the SQL statement.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretsManagerArn?: str

    sql?: str

    statementName?: str

    withEvent?: bool


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRetryPolicyItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider retry policy items0

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        The age in seconds to continue to make retry attempts.
    maximumRetryAttempts : float, default is Undefined, optional
        maximum number of retry attempts to make before the request fails
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderRunCommandTargetsItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider run command targets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Can be either tag:tag-key or InstanceIds.
    values : [str], default is Undefined, optional
        If Key is tag:tag-key, Values is a list of tag values. If Key is InstanceIds, Values is a list of Amazon EC2 instance IDs.
    """


    key?: str

    values?: [str]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider sagemaker pipeline target items0

    Attributes
    ----------
    pipelineParameterList : [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0PipelineParameterListItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution.
    """


    pipelineParameterList?: [CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0PipelineParameterListItems0]


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSagemakerPipelineTargetItems0PipelineParameterListItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider sagemaker pipeline target items0 pipeline parameter list items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusAtProviderSqsTargetItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 target status at provider sqs target items0

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1TargetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


