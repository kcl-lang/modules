"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MsadLdsUserAccountControlMapper:
    r"""
    MsadLdsUserAccountControlMapper is the Schema for the MsadLdsUserAccountControlMappers API.

    Attributes
    ----------
    apiVersion : str, default is "ldap.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MsadLdsUserAccountControlMapper", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpec, default is Undefined, required
        spec
    status : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatus, default is Undefined, optional
        status
    """


    apiVersion: "ldap.keycloak.m.crossplane.io/v1alpha1" = "ldap.keycloak.m.crossplane.io/v1alpha1"

    kind: "MsadLdsUserAccountControlMapper" = "MsadLdsUserAccountControlMapper"

    metadata?: v1.ObjectMeta

    spec: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpec

    status?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatus


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpec:
    r"""
    MsadLdsUserAccountControlMapperSpec defines the desired state of MsadLdsUserAccountControlMapper

    Attributes
    ----------
    forProvider : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProvider, default is Undefined, required
        for provider
    initProvider : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProvider

    initProvider?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecProviderConfigRef

    writeConnectionSecretToRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecWriteConnectionSecretToRef


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 msad lds user account control mapper spec for provider

    Attributes
    ----------
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    ldapUserFederationIdRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRef, default is Undefined, optional
        ldap user federation Id ref
    ldapUserFederationIdSelector : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelector, default is Undefined, optional
        ldap user federation Id selector
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    ldapUserFederationId?: str

    ldapUserFederationIdRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRef

    ldapUserFederationIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelector

    name?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelector


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRef:
    r"""
    Reference to a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelector:
    r"""
    Selector for a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderLdapUserFederationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    ldapUserFederationIdRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRef, default is Undefined, optional
        ldap user federation Id ref
    ldapUserFederationIdSelector : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelector, default is Undefined, optional
        ldap user federation Id selector
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    realmIdRef : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    ldapUserFederationId?: str

    ldapUserFederationIdRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRef

    ldapUserFederationIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelector

    name?: str

    realmId?: str

    realmIdRef?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRef

    realmIdSelector?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelector


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRef:
    r"""
    Reference to a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelector:
    r"""
    Selector for a UserFederation in ldap to populate ldapUserFederationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderLdapUserFederationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRefPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelectorPolicy


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatus:
    r"""
    MsadLdsUserAccountControlMapperStatus defines the observed state of MsadLdsUserAccountControlMapper.

    Attributes
    ----------
    atProvider : LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusAtProvider

    conditions?: [LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusConditionsItems0]

    observedGeneration?: int


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusAtProvider:
    r"""
    ldap keycloakm crossplane io v1alpha1 msad lds user account control mapper status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        id
    ldapUserFederationId : str, default is Undefined, optional
        The ID of the LDAP user federation provider to attach this mapper to.
        The ldap user federation provider to attach this mapper to.
    name : str, default is Undefined, optional
        Display name of this mapper when displayed in the console.
        Display name of the mapper when displayed in the console.
    realmId : str, default is Undefined, optional
        The realm that this LDAP mapper will exist in.
        The realm in which the ldap user federation provider exists.
    """


    id?: str

    ldapUserFederationId?: str

    name?: str

    realmId?: str


schema LdapKeycloakmCrossplaneIoV1alpha1MsadLdsUserAccountControlMapperStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


