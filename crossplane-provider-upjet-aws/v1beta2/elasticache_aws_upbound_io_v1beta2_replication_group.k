"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ReplicationGroup:
    r"""
    ReplicationGroup is the Schema for the ReplicationGroups API. Provides an ElastiCache Replication Group resource.

    Attributes
    ----------
    apiVersion : str, default is "elasticache.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ReplicationGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpec, default is Undefined, required
        spec
    status : ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticache.aws.upbound.io/v1beta2" = "elasticache.aws.upbound.io/v1beta2"

    kind: "ReplicationGroup" = "ReplicationGroup"

    metadata?: v1.ObjectMeta

    spec: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpec

    status?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatus


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpec:
    r"""
    ReplicationGroupSpec defines the desired state of ReplicationGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProvider

    initProvider?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecWriteConnectionSecretToRef


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProvider:
    r"""
    elasticache aws upbound io v1beta2 replication group spec for provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.
    atRestEncryptionEnabled : str, default is Undefined, optional
        Whether to enable encryption at rest.
        When engine is redis, default is false.
        When engine is valkey, default is true.
    authTokenSecretRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderAuthTokenSecretRef, default is Undefined, optional
        auth token secret ref
    authTokenUpdateStrategy : str, default is Undefined, optional
        Strategy to use when updating the auth_token. Valid values are SET, ROTATE, and DELETE. Defaults to ROTATE.
    autoGenerateAuthToken : bool, default is Undefined, optional
        Password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.
        If true, the auth token will be auto-generated and stored in the Secret referenced by the authTokenSecretRef field.
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine types "redis" and "valkey" and if the engine version is 6 or higher.
        Defaults to true.
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, num_cache_clusters must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.
    clusterMode : str, default is Undefined, optional
        Specifies whether cluster mode is enabled or disabled. Valid values are enabled or disabled or compatible
    dataTieringEnabled : bool, default is Undefined, optional
        Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes.
    description : str, default is Undefined, optional
        created description for the replication group. Must not be empty.
    engine : str, default is Undefined, optional
        Name of the cache engine to be used for the clusters in this replication group.
        Valid values are redis or valkey.
        Default is redis.
    engineVersion : str, default is Undefined, optional
        Version number of the cache engine to be used for the cache clusters in this replication group.
        If the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        If the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
    globalReplicationGroupId : str, default is Undefined, optional
        The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If global_replication_group_id is set, the num_node_groups parameter cannot be set.
    globalReplicationGroupIdRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRef, default is Undefined, optional
        global replication group Id ref
    globalReplicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelector, default is Undefined, optional
        global replication group Id selector
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    kmsKeyId : str, default is Undefined, optional
        The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at_rest_encryption_enabled = true.
    kmsKeyIdRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis OSS/Valkey SLOWLOG or Redis OSS/Valkey Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00
    multiAzEnabled : bool, default is Undefined, optional
        Specifies whether to enable Multi-AZ Support for the replication group.
        If true, automatic_failover_enabled must also be enabled.
        Defaults to false.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        Instance class to be used.
        See AWS documentation for information on supported node types and guidance on selecting node types.
        Required unless global_replication_group_id is set.
        Cannot be set if global_replication_group_id is set.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    numCacheClusters : float, default is Undefined, optional
        00#.
    numNodeGroups : float, default is Undefined, optional
        Number of node groups (shards) for this Redis replication group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Conflicts with num_cache_clusters.
    parameterGroupName : str, default is Undefined, optional
        Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter cluster-enabled set to true.
    port : float, default is Undefined, optional
        –  Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
    preferredCacheClusterAzs : [str], default is Undefined, optional
        List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicasPerNodeGroup : float, default is Undefined, optional
        Number of replica nodes in each node group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Valid values are 0 to 5.
        Conflicts with num_cache_clusters.
        Can only be set if num_node_groups is set.
    securityGroupIdRefs : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        IDs of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    securityGroupNames : [str], default is Undefined, optional
        Names of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    snapshotArns : [str], default is Undefined, optional
        –  List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of snapshot_retention_limit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        Name of the cache subnet group to be used for the replication group.
    subnetGroupNameRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Whether to enable encryption in transit.
        Changing this argument with an engine_version < 7.0.5 will force a replacement.
        Engine versions prior to 7.0.5 only allow this transit encryption to be configured during creation of the replication group.
    transitEncryptionMode : str, default is Undefined, optional
        A setting that enables clients to migrate to in-transit encryption with no downtime.
        Valid values are preferred and required.
        When enabling encryption on an existing replication group, this must first be set to preferred before setting it to required in a subsequent apply.
        See the TransitEncryptionMode field in the CreateReplicationGroup API documentation for additional details.
    userGroupIds : [str], default is Undefined, optional
        User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. NOTE: This argument is a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
    """


    applyImmediately?: bool

    atRestEncryptionEnabled?: str

    authTokenSecretRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderAuthTokenSecretRef

    authTokenUpdateStrategy?: str

    autoGenerateAuthToken?: bool

    autoMinorVersionUpgrade?: str

    automaticFailoverEnabled?: bool

    clusterMode?: str

    dataTieringEnabled?: bool

    description?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalReplicationGroupId?: str

    globalReplicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRef

    globalReplicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelector

    ipDiscovery?: str

    kmsKeyId?: str

    kmsKeyIdRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelector

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    multiAzEnabled?: bool

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheClusters?: float

    numNodeGroups?: float

    parameterGroupName?: str

    port?: float

    preferredCacheClusterAzs?: [str]

    region: str

    replicasPerNodeGroup?: float

    securityGroupIdRefs?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    securityGroupNames?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    subnetGroupNameRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRef

    subnetGroupNameSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelector

    tags?: {str:str}

    transitEncryptionEnabled?: bool

    transitEncryptionMode?: str

    userGroupIds?: [str]


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderAuthTokenSecretRef:
    r"""
    Password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.
    If you set autoGenerateAuthToken to true, the Secret referenced here will be created or updated with generated auth token if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRef:
    r"""
    Reference to a GlobalReplicationGroup in elasticache to populate globalReplicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelector:
    r"""
    Selector for a GlobalReplicationGroup in elasticache to populate globalReplicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderGlobalReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta2 replication group spec for provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecForProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.
    atRestEncryptionEnabled : str, default is Undefined, optional
        Whether to enable encryption at rest.
        When engine is redis, default is false.
        When engine is valkey, default is true.
    authTokenSecretRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderAuthTokenSecretRef, default is Undefined, optional
        auth token secret ref
    authTokenUpdateStrategy : str, default is Undefined, optional
        Strategy to use when updating the auth_token. Valid values are SET, ROTATE, and DELETE. Defaults to ROTATE.
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine types "redis" and "valkey" and if the engine version is 6 or higher.
        Defaults to true.
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, num_cache_clusters must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.
    clusterMode : str, default is Undefined, optional
        Specifies whether cluster mode is enabled or disabled. Valid values are enabled or disabled or compatible
    dataTieringEnabled : bool, default is Undefined, optional
        Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes.
    description : str, default is Undefined, optional
        created description for the replication group. Must not be empty.
    engine : str, default is Undefined, optional
        Name of the cache engine to be used for the clusters in this replication group.
        Valid values are redis or valkey.
        Default is redis.
    engineVersion : str, default is Undefined, optional
        Version number of the cache engine to be used for the cache clusters in this replication group.
        If the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        If the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
    globalReplicationGroupId : str, default is Undefined, optional
        The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If global_replication_group_id is set, the num_node_groups parameter cannot be set.
    globalReplicationGroupIdRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRef, default is Undefined, optional
        global replication group Id ref
    globalReplicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelector, default is Undefined, optional
        global replication group Id selector
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    kmsKeyId : str, default is Undefined, optional
        The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at_rest_encryption_enabled = true.
    kmsKeyIdRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis OSS/Valkey SLOWLOG or Redis OSS/Valkey Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00
    multiAzEnabled : bool, default is Undefined, optional
        Specifies whether to enable Multi-AZ Support for the replication group.
        If true, automatic_failover_enabled must also be enabled.
        Defaults to false.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        Instance class to be used.
        See AWS documentation for information on supported node types and guidance on selecting node types.
        Required unless global_replication_group_id is set.
        Cannot be set if global_replication_group_id is set.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    numCacheClusters : float, default is Undefined, optional
        00#.
    numNodeGroups : float, default is Undefined, optional
        Number of node groups (shards) for this Redis replication group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Conflicts with num_cache_clusters.
    parameterGroupName : str, default is Undefined, optional
        Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter cluster-enabled set to true.
    port : float, default is Undefined, optional
        –  Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
    preferredCacheClusterAzs : [str], default is Undefined, optional
        List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
    replicasPerNodeGroup : float, default is Undefined, optional
        Number of replica nodes in each node group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Valid values are 0 to 5.
        Conflicts with num_cache_clusters.
        Can only be set if num_node_groups is set.
    securityGroupIdRefs : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        IDs of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    securityGroupNames : [str], default is Undefined, optional
        Names of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    snapshotArns : [str], default is Undefined, optional
        –  List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of snapshot_retention_limit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        Name of the cache subnet group to be used for the replication group.
    subnetGroupNameRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Whether to enable encryption in transit.
        Changing this argument with an engine_version < 7.0.5 will force a replacement.
        Engine versions prior to 7.0.5 only allow this transit encryption to be configured during creation of the replication group.
    transitEncryptionMode : str, default is Undefined, optional
        A setting that enables clients to migrate to in-transit encryption with no downtime.
        Valid values are preferred and required.
        When enabling encryption on an existing replication group, this must first be set to preferred before setting it to required in a subsequent apply.
        See the TransitEncryptionMode field in the CreateReplicationGroup API documentation for additional details.
    userGroupIds : [str], default is Undefined, optional
        User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. NOTE: This argument is a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
    """


    applyImmediately?: bool

    atRestEncryptionEnabled?: str

    authTokenSecretRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderAuthTokenSecretRef

    authTokenUpdateStrategy?: str

    autoMinorVersionUpgrade?: str

    automaticFailoverEnabled?: bool

    clusterMode?: str

    dataTieringEnabled?: bool

    description?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalReplicationGroupId?: str

    globalReplicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRef

    globalReplicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelector

    ipDiscovery?: str

    kmsKeyId?: str

    kmsKeyIdRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelector

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    multiAzEnabled?: bool

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheClusters?: float

    numNodeGroups?: float

    parameterGroupName?: str

    port?: float

    preferredCacheClusterAzs?: [str]

    replicasPerNodeGroup?: float

    securityGroupIdRefs?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    securityGroupNames?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    subnetGroupNameRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRef

    subnetGroupNameSelector?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelector

    tags?: {str:str}

    transitEncryptionEnabled?: bool

    transitEncryptionMode?: str

    userGroupIds?: [str]


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderAuthTokenSecretRef:
    r"""
    Password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.
    If you set autoGenerateAuthToken to true, the Secret referenced here will be created or updated with generated auth token if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRef:
    r"""
    Reference to a GlobalReplicationGroup in elasticache to populate globalReplicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelector:
    r"""
    Selector for a GlobalReplicationGroup in elasticache to populate globalReplicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderGlobalReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta2 replication group spec init provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0Policy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in elasticache to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecInitProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatus:
    r"""
    ReplicationGroupStatus defines the observed state of ReplicationGroup.

    Attributes
    ----------
    atProvider : ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProvider

    conditions?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusConditionsItems0]

    observedGeneration?: int


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProvider:
    r"""
    elasticache aws upbound io v1beta2 replication group status at provider

    Attributes
    ----------
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.
    arn : str, default is Undefined, optional
        ARN of the created ElastiCache Replication Group.
    atRestEncryptionEnabled : str, default is Undefined, optional
        Whether to enable encryption at rest.
        When engine is redis, default is false.
        When engine is valkey, default is true.
    authTokenUpdateStrategy : str, default is Undefined, optional
        Strategy to use when updating the auth_token. Valid values are SET, ROTATE, and DELETE. Defaults to ROTATE.
    autoMinorVersionUpgrade : str, default is Undefined, optional
        Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        Only supported for engine types "redis" and "valkey" and if the engine version is 6 or higher.
        Defaults to true.
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, num_cache_clusters must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.
    clusterEnabled : bool, default is Undefined, optional
        Indicates if cluster mode is enabled.
    clusterMode : str, default is Undefined, optional
        Specifies whether cluster mode is enabled or disabled. Valid values are enabled or disabled or compatible
    configurationEndpointAddress : str, default is Undefined, optional
        Address of the replication group configuration endpoint when cluster mode is enabled.
    dataTieringEnabled : bool, default is Undefined, optional
        Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes.
    description : str, default is Undefined, optional
        created description for the replication group. Must not be empty.
    engine : str, default is Undefined, optional
        Name of the cache engine to be used for the clusters in this replication group.
        Valid values are redis or valkey.
        Default is redis.
    engineVersion : str, default is Undefined, optional
        Version number of the cache engine to be used for the cache clusters in this replication group.
        If the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        If the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        Otherwise, specify the full version desired, e.g., 5.0.6.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    engineVersionActual : str, default is Undefined, optional
        Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
    globalReplicationGroupId : str, default is Undefined, optional
        The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If global_replication_group_id is set, the num_node_groups parameter cannot be set.
    id : str, default is Undefined, optional
        ID of the ElastiCache Replication Group.
    ipDiscovery : str, default is Undefined, optional
        The IP version to advertise in the discovery protocol. Valid values are ipv4 or ipv6.
    kmsKeyId : str, default is Undefined, optional
        The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at_rest_encryption_enabled = true.
    logDeliveryConfiguration : [ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProviderLogDeliveryConfigurationItems0], default is Undefined, optional
        Specifies the destination and format of Redis OSS/Valkey SLOWLOG or Redis OSS/Valkey Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.
    maintenanceWindow : str, default is Undefined, optional
        ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00
    memberClusters : [str], default is Undefined, optional
        Identifiers of all the nodes that are part of this replication group.
    multiAzEnabled : bool, default is Undefined, optional
        Specifies whether to enable Multi-AZ Support for the replication group.
        If true, automatic_failover_enabled must also be enabled.
        Defaults to false.
    networkType : str, default is Undefined, optional
        The IP versions for cache cluster connections. Valid values are ipv4, ipv6 or dual_stack.
    nodeType : str, default is Undefined, optional
        Instance class to be used.
        See AWS documentation for information on supported node types and guidance on selecting node types.
        Required unless global_replication_group_id is set.
        Cannot be set if global_replication_group_id is set.
    notificationTopicArn : str, default is Undefined, optional
        east-1:012345678999:my_sns_topic
    numCacheClusters : float, default is Undefined, optional
        00#.
    numNodeGroups : float, default is Undefined, optional
        Number of node groups (shards) for this Redis replication group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Conflicts with num_cache_clusters.
    parameterGroupName : str, default is Undefined, optional
        Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter cluster-enabled set to true.
    port : float, default is Undefined, optional
        –  Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
    preferredCacheClusterAzs : [str], default is Undefined, optional
        List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
    primaryEndpointAddress : str, default is Undefined, optional
        (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
    readerEndpointAddress : str, default is Undefined, optional
        (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
    replicasPerNodeGroup : float, default is Undefined, optional
        Number of replica nodes in each node group.
        Changing this number will trigger a resizing operation before other settings modifications.
        Valid values are 0 to 5.
        Conflicts with num_cache_clusters.
        Can only be set if num_node_groups is set.
    securityGroupIds : [str], default is Undefined, optional
        IDs of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    securityGroupNames : [str], default is Undefined, optional
        Names of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
    snapshotArns : [str], default is Undefined, optional
        –  List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        Name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.
    snapshotRetentionLimit : float, default is Undefined, optional
        Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of snapshot_retention_limit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes
    snapshotWindow : str, default is Undefined, optional
        Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00
    subnetGroupName : str, default is Undefined, optional
        Name of the cache subnet group to be used for the replication group.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    transitEncryptionEnabled : bool, default is Undefined, optional
        Whether to enable encryption in transit.
        Changing this argument with an engine_version < 7.0.5 will force a replacement.
        Engine versions prior to 7.0.5 only allow this transit encryption to be configured during creation of the replication group.
    transitEncryptionMode : str, default is Undefined, optional
        A setting that enables clients to migrate to in-transit encryption with no downtime.
        Valid values are preferred and required.
        When enabling encryption on an existing replication group, this must first be set to preferred before setting it to required in a subsequent apply.
        See the TransitEncryptionMode field in the CreateReplicationGroup API documentation for additional details.
    userGroupIds : [str], default is Undefined, optional
        User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. NOTE: This argument is a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
    """


    applyImmediately?: bool

    arn?: str

    atRestEncryptionEnabled?: str

    authTokenUpdateStrategy?: str

    autoMinorVersionUpgrade?: str

    automaticFailoverEnabled?: bool

    clusterEnabled?: bool

    clusterMode?: str

    configurationEndpointAddress?: str

    dataTieringEnabled?: bool

    description?: str

    engine?: str

    engineVersion?: str

    engineVersionActual?: str

    finalSnapshotIdentifier?: str

    globalReplicationGroupId?: str

    id?: str

    ipDiscovery?: str

    kmsKeyId?: str

    logDeliveryConfiguration?: [ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProviderLogDeliveryConfigurationItems0]

    maintenanceWindow?: str

    memberClusters?: [str]

    multiAzEnabled?: bool

    networkType?: str

    nodeType?: str

    notificationTopicArn?: str

    numCacheClusters?: float

    numNodeGroups?: float

    parameterGroupName?: str

    port?: float

    preferredCacheClusterAzs?: [str]

    primaryEndpointAddress?: str

    readerEndpointAddress?: str

    replicasPerNodeGroup?: float

    securityGroupIds?: [str]

    securityGroupNames?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    subnetGroupName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    transitEncryptionEnabled?: bool

    transitEncryptionMode?: str

    userGroupIds?: [str]


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusAtProviderLogDeliveryConfigurationItems0:
    r"""
    elasticache aws upbound io v1beta2 replication group status at provider log delivery configuration items0

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
    destinationType : str, default is Undefined, optional
        For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.
    logFormat : str, default is Undefined, optional
        Valid values are json or text
    logType : str, default is Undefined, optional
        Valid values are  slow-log or engine-log. Max 1 of each.
    """


    destination?: str

    destinationType?: str

    logFormat?: str

    logType?: str


schema ElasticacheAwsUpboundIoV1beta2ReplicationGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


