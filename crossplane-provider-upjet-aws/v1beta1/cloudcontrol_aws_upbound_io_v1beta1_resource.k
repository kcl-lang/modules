"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Resource:
    r"""
    Resource is the Schema for the Resources API. Manages a Cloud Control API Resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudcontrol.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Resource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudcontrolAwsUpboundIoV1beta1ResourceSpec, default is Undefined, required
        spec
    status : CloudcontrolAwsUpboundIoV1beta1ResourceStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudcontrol.aws.upbound.io/v1beta1" = "cloudcontrol.aws.upbound.io/v1beta1"

    kind: "Resource" = "Resource"

    metadata?: v1.ObjectMeta

    spec: CloudcontrolAwsUpboundIoV1beta1ResourceSpec

    status?: CloudcontrolAwsUpboundIoV1beta1ResourceStatus


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpec:
    r"""
    ResourceSpec defines the desired state of Resource

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProvider

    initProvider?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecWriteConnectionSecretToRef


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProvider:
    r"""
    cloudcontrol aws upbound io v1beta1 resource spec for provider

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        JSON string matching the CloudFormation resource type schema with desired configuration.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role to assume for operations.
    roleArnRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    schemaSecretRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderSchemaSecretRef, default is Undefined, optional
        schema secret ref
    typeName : str, default is Undefined, optional
        CloudFormation resource type name. For example, AWS::EC2::VPC.
    typeVersionId : str, default is Undefined, optional
        Identifier of the CloudFormation resource type version.
    """


    desiredState?: str

    region: str

    roleArn?: str

    roleArnRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRef

    roleArnSelector?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelector

    schemaSecretRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderSchemaSecretRef

    typeName?: str

    typeVersionId?: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRefPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelectorPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecForProviderSchemaSecretRef:
    r"""
    JSON string of the CloudFormation resource type schema which is used for plan time validation where possible. Automatically fetched if not provided. In large scale environments with multiple resources using the same type_name, it is recommended to fetch the schema once via the aws_cloudformation_type data source and use this argument to reduce DescribeType API operation throttling. This value is marked sensitive only to prevent large plan differences from showing.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        JSON string matching the CloudFormation resource type schema with desired configuration.
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role to assume for operations.
    roleArnRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    schemaSecretRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderSchemaSecretRef, default is Undefined, optional
        schema secret ref
    typeName : str, default is Undefined, optional
        CloudFormation resource type name. For example, AWS::EC2::VPC.
    typeVersionId : str, default is Undefined, optional
        Identifier of the CloudFormation resource type version.
    """


    desiredState?: str

    roleArn?: str

    roleArnRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRef

    roleArnSelector?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelector

    schemaSecretRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderSchemaSecretRef

    typeName?: str

    typeVersionId?: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRefPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelectorPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecInitProviderSchemaSecretRef:
    r"""
    JSON string of the CloudFormation resource type schema which is used for plan time validation where possible. Automatically fetched if not provided. In large scale environments with multiple resources using the same type_name, it is recommended to fetch the schema once via the aws_cloudformation_type data source and use this argument to reduce DescribeType API operation throttling. This value is marked sensitive only to prevent large plan differences from showing.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRefPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceStatus:
    r"""
    ResourceStatus defines the observed state of Resource.

    Attributes
    ----------
    atProvider : CloudcontrolAwsUpboundIoV1beta1ResourceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudcontrolAwsUpboundIoV1beta1ResourceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudcontrolAwsUpboundIoV1beta1ResourceStatusAtProvider

    conditions?: [CloudcontrolAwsUpboundIoV1beta1ResourceStatusConditionsItems0]

    observedGeneration?: int


schema CloudcontrolAwsUpboundIoV1beta1ResourceStatusAtProvider:
    r"""
    cloudcontrol aws upbound io v1beta1 resource status at provider

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        JSON string matching the CloudFormation resource type schema with desired configuration.
    id : str, default is Undefined, optional
        id
    properties : str, default is Undefined, optional
        JSON string matching the CloudFormation resource type schema with current configuration. Underlying attributes can be referenced via the jsondecode() function, for example, jsondecode(data.aws_cloudcontrolapi_resource.example.properties)["example"].
    roleArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the IAM Role to assume for operations.
    typeName : str, default is Undefined, optional
        CloudFormation resource type name. For example, AWS::EC2::VPC.
    typeVersionId : str, default is Undefined, optional
        Identifier of the CloudFormation resource type version.
    """


    desiredState?: str

    id?: str

    properties?: str

    roleArn?: str

    typeName?: str

    typeVersionId?: str


schema CloudcontrolAwsUpboundIoV1beta1ResourceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


