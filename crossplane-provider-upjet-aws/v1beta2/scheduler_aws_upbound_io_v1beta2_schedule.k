"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Schedule:
    r"""
    Schedule is the Schema for the Schedules API. Provides an EventBridge Scheduler Schedule resource.

    Attributes
    ----------
    apiVersion : str, default is "scheduler.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Schedule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SchedulerAwsUpboundIoV1beta2ScheduleSpec, default is Undefined, required
        spec
    status : SchedulerAwsUpboundIoV1beta2ScheduleStatus, default is Undefined, optional
        status
    """


    apiVersion: "scheduler.aws.upbound.io/v1beta2" = "scheduler.aws.upbound.io/v1beta2"

    kind: "Schedule" = "Schedule"

    metadata?: v1.ObjectMeta

    spec: SchedulerAwsUpboundIoV1beta2ScheduleSpec

    status?: SchedulerAwsUpboundIoV1beta2ScheduleStatus


schema SchedulerAwsUpboundIoV1beta2ScheduleSpec:
    r"""
    ScheduleSpec defines the desired state of Schedule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProvider, default is Undefined, required
        for provider
    initProvider : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProvider

    initProvider?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRef

    publishConnectionDetailsTo?: SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecWriteConnectionSecretToRef


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProvider:
    r"""
    scheduler aws upbound io v1beta2 schedule spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Brief description of the schedule.
    endDate : str, default is Undefined, optional
        The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the end date you specify. EventBridge Scheduler ignores the end date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    flexibleTimeWindow : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderFlexibleTimeWindow, default is Undefined, optional
        flexible time window
    groupName : str, default is Undefined, optional
        Name of the schedule group to associate with this schedule. When omitted, the default schedule group is used.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the customer managed KMS key that EventBridge Scheduler will use to encrypt and decrypt your data.
    kmsKeyArnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    name : str, default is Undefined, optional
        Name of the schedule. Conflicts with name_prefix.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scheduleExpression : str, default is Undefined, optional
        Defines when the schedule runs. Read more in Schedule types on EventBridge Scheduler.
    scheduleExpressionTimezone : str, default is Undefined, optional
        Timezone in which the scheduling expression is evaluated. Defaults to UTC. Example: Australia/Sydney.
    startDate : str, default is Undefined, optional
        The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the start date you specify. EventBridge Scheduler ignores the start date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    state : str, default is Undefined, optional
        Specifies whether the schedule is enabled or disabled. One of: ENABLED (default), DISABLED.
    target : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTarget, default is Undefined, optional
        target
    """


    description?: str

    endDate?: str

    flexibleTimeWindow?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderFlexibleTimeWindow

    groupName?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelector

    name?: str

    region: str

    scheduleExpression?: str

    scheduleExpressionTimezone?: str

    startDate?: str

    state?: str

    target?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTarget


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderFlexibleTimeWindow:
    r"""
    Configures a time window during which EventBridge Scheduler invokes the schedule. Detailed below.

    Attributes
    ----------
    maximumWindowInMinutes : float, default is Undefined, optional
        Maximum time window during which a schedule can be invoked. Ranges from 1 to 1440 minutes.
    mode : str, default is Undefined, optional
        Determines whether the schedule is invoked within a flexible time window. One of: OFF, FLEXIBLE.
    """


    maximumWindowInMinutes?: float

    mode?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTarget:
    r"""
    Configures the target of the schedule. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    arnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRef, default is Undefined, optional
        arn ref
    arnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelector, default is Undefined, optional
        arn selector
    deadLetterConfig : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetDeadLetterConfig, default is Undefined, optional
        dead letter config
    ecsParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParameters, default is Undefined, optional
        ecs parameters
    eventbridgeParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEventbridgeParameters, default is Undefined, optional
        eventbridge parameters
    input : str, default is Undefined, optional
        Text, or well-formed JSON, passed to the target. Read more in Universal target.
    kinesisParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetKinesisParameters, default is Undefined, optional
        kinesis parameters
    retryPolicy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRetryPolicy, default is Undefined, optional
        retry policy
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked. Read more in Set up the execution role.
    roleArnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelector, default is Undefined, optional
        role arn selector
    sagemakerPipelineParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSqsParameters, default is Undefined, optional
        sqs parameters
    """


    arn?: str

    arnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRef

    arnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelector

    deadLetterConfig?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetDeadLetterConfig

    ecsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParameters

    eventbridgeParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEventbridgeParameters

    input?: str

    kinesisParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetKinesisParameters

    retryPolicy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRetryPolicy

    roleArn?: str

    roleArnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRef

    roleArnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelector

    sagemakerPipelineParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParameters

    sqsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSqsParameters


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRef:
    r"""
    Reference to a Queue in sqs to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelector:
    r"""
    Selector for a Queue in sqs to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetDeadLetterConfig:
    r"""
    Information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    """


    arn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParameters:
    r"""
    Templated target type for the Amazon ECS RunTask API operation. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersCapacityProviderStrategyItems0], default is Undefined, optional
        Up to 6 capacity provider strategies to use for the task. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon ECS Developer Guide.
    enableExecuteCommand : bool, default is Undefined, optional
        Specifies whether to enable the execute command functionality for the containers in this task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. At most 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. One of: EC2, FARGATE, EXTERNAL.
    networkConfiguration : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    placementConstraints : [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementConstraintsItems0], default is Undefined, optional
        A set of up to 10 placement constraints to use for the task. Detailed below.
    placementStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementStrategyItems0], default is Undefined, optional
        A set of up to 5 placement strategies. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. One of: TASK_DEFINITION.
    referenceId : str, default is Undefined, optional
        Reference ID to use for the task.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taskCount : float, default is Undefined, optional
        The number of tasks to create. Ranges from 1 (default) to 10.
    taskDefinitionArn : str, default is Undefined, optional
        ARN of the task definition to use.
    """


    capacityProviderStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersNetworkConfiguration

    placementConstraints?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementConstraintsItems0]

    placementStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersCapacityProviderStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec for provider target ecs parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        How many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Ranges from 0 (default) to 100000.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        Designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Ranges from from 0 to 1000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersNetworkConfiguration:
    r"""
    Configures the networking associated with the task. Detailed below.

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. This attribute is a boolean type, where true maps to ENABLED and false to DISABLED. You can specify true only when the launch_type is set to FARGATE.
    securityGroups : [str], default is Undefined, optional
        Set of 1 to 5 Security Group ID-s to be associated with the task. These security groups must all be in the same VPC.
    subnets : [str], default is Undefined, optional
        Set of 1 to 16 subnets to be associated with the task. These subnets must all be in the same VPC.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementConstraintsItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec for provider target ecs parameters placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. For more information, see Cluster query language in the Amazon ECS Developer Guide.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    expression?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEcsParametersPlacementStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec for provider target ecs parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    field?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetEventbridgeParameters:
    r"""
    Templated target type for the EventBridge PutEvents API operation. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        Free-form string used to decide what fields to expect in the event detail. Up to 128 characters.
    source : str, default is Undefined, optional
        Source of the event.
    """


    detailType?: str

    source?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetKinesisParameters:
    r"""
    Templated target type for the Amazon Kinesis PutRecord API operation. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Specifies the shard to which EventBridge Scheduler sends the event. Up to 256 characters.
    """


    partitionKey?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRetryPolicy:
    r"""
    Information about the retry policy settings. Detailed below.

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        Maximum amount of time, in seconds, to continue to make retry attempts. Ranges from 60 to 86400 (default).
    maximumRetryAttempts : float, default is Undefined, optional
        Maximum number of retry attempts to make before the request fails. Ranges from 0 to 185 (default).
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParameters:
    r"""
    Templated target type for the Amazon SageMaker StartPipelineExecution API operation. Detailed below.

    Attributes
    ----------
    pipelineParameter : [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        Set of up to 200 parameter names and values to use when executing the SageMaker Model Building Pipeline. Detailed below.
    """


    pipelineParameter?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParametersPipelineParameterItems0]


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec for provider target sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecForProviderTargetSqsParameters:
    r"""
    The templated target type for the Amazon SQS SendMessage API operation. Detailed below.

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Brief description of the schedule.
    endDate : str, default is Undefined, optional
        The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the end date you specify. EventBridge Scheduler ignores the end date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    flexibleTimeWindow : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderFlexibleTimeWindow, default is Undefined, optional
        flexible time window
    groupName : str, default is Undefined, optional
        Name of the schedule group to associate with this schedule. When omitted, the default schedule group is used.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the customer managed KMS key that EventBridge Scheduler will use to encrypt and decrypt your data.
    kmsKeyArnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    name : str, default is Undefined, optional
        Name of the schedule. Conflicts with name_prefix.
    scheduleExpression : str, default is Undefined, optional
        Defines when the schedule runs. Read more in Schedule types on EventBridge Scheduler.
    scheduleExpressionTimezone : str, default is Undefined, optional
        Timezone in which the scheduling expression is evaluated. Defaults to UTC. Example: Australia/Sydney.
    startDate : str, default is Undefined, optional
        The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the start date you specify. EventBridge Scheduler ignores the start date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    state : str, default is Undefined, optional
        Specifies whether the schedule is enabled or disabled. One of: ENABLED (default), DISABLED.
    target : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTarget, default is Undefined, optional
        target
    """


    description?: str

    endDate?: str

    flexibleTimeWindow?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderFlexibleTimeWindow

    groupName?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelector

    name?: str

    scheduleExpression?: str

    scheduleExpressionTimezone?: str

    startDate?: str

    state?: str

    target?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTarget


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderFlexibleTimeWindow:
    r"""
    Configures a time window during which EventBridge Scheduler invokes the schedule. Detailed below.

    Attributes
    ----------
    maximumWindowInMinutes : float, default is Undefined, optional
        Maximum time window during which a schedule can be invoked. Ranges from 1 to 1440 minutes.
    mode : str, default is Undefined, optional
        Determines whether the schedule is invoked within a flexible time window. One of: OFF, FLEXIBLE.
    """


    maximumWindowInMinutes?: float

    mode?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTarget:
    r"""
    Configures the target of the schedule. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    arnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRef, default is Undefined, optional
        arn ref
    arnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelector, default is Undefined, optional
        arn selector
    deadLetterConfig : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetDeadLetterConfig, default is Undefined, optional
        dead letter config
    ecsParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParameters, default is Undefined, optional
        ecs parameters
    eventbridgeParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEventbridgeParameters, default is Undefined, optional
        eventbridge parameters
    input : str, default is Undefined, optional
        Text, or well-formed JSON, passed to the target. Read more in Universal target.
    kinesisParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetKinesisParameters, default is Undefined, optional
        kinesis parameters
    retryPolicy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRetryPolicy, default is Undefined, optional
        retry policy
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked. Read more in Set up the execution role.
    roleArnRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelector, default is Undefined, optional
        role arn selector
    sagemakerPipelineParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsParameters : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSqsParameters, default is Undefined, optional
        sqs parameters
    """


    arn?: str

    arnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRef

    arnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelector

    deadLetterConfig?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetDeadLetterConfig

    ecsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParameters

    eventbridgeParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEventbridgeParameters

    input?: str

    kinesisParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetKinesisParameters

    retryPolicy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRetryPolicy

    roleArn?: str

    roleArnRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRef

    roleArnSelector?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelector

    sagemakerPipelineParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParameters

    sqsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSqsParameters


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRef:
    r"""
    Reference to a Queue in sqs to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelector:
    r"""
    Selector for a Queue in sqs to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetDeadLetterConfig:
    r"""
    Information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    """


    arn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParameters:
    r"""
    Templated target type for the Amazon ECS RunTask API operation. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersCapacityProviderStrategyItems0], default is Undefined, optional
        Up to 6 capacity provider strategies to use for the task. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon ECS Developer Guide.
    enableExecuteCommand : bool, default is Undefined, optional
        Specifies whether to enable the execute command functionality for the containers in this task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. At most 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. One of: EC2, FARGATE, EXTERNAL.
    networkConfiguration : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    placementConstraints : [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementConstraintsItems0], default is Undefined, optional
        A set of up to 10 placement constraints to use for the task. Detailed below.
    placementStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementStrategyItems0], default is Undefined, optional
        A set of up to 5 placement strategies. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. One of: TASK_DEFINITION.
    referenceId : str, default is Undefined, optional
        Reference ID to use for the task.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taskCount : float, default is Undefined, optional
        The number of tasks to create. Ranges from 1 (default) to 10.
    taskDefinitionArn : str, default is Undefined, optional
        ARN of the task definition to use.
    """


    capacityProviderStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersNetworkConfiguration

    placementConstraints?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementConstraintsItems0]

    placementStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersCapacityProviderStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec init provider target ecs parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        How many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Ranges from 0 (default) to 100000.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        Designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Ranges from from 0 to 1000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersNetworkConfiguration:
    r"""
    Configures the networking associated with the task. Detailed below.

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. This attribute is a boolean type, where true maps to ENABLED and false to DISABLED. You can specify true only when the launch_type is set to FARGATE.
    securityGroups : [str], default is Undefined, optional
        Set of 1 to 5 Security Group ID-s to be associated with the task. These security groups must all be in the same VPC.
    subnets : [str], default is Undefined, optional
        Set of 1 to 16 subnets to be associated with the task. These subnets must all be in the same VPC.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementConstraintsItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec init provider target ecs parameters placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. For more information, see Cluster query language in the Amazon ECS Developer Guide.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    expression?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEcsParametersPlacementStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec init provider target ecs parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    field?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetEventbridgeParameters:
    r"""
    Templated target type for the EventBridge PutEvents API operation. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        Free-form string used to decide what fields to expect in the event detail. Up to 128 characters.
    source : str, default is Undefined, optional
        Source of the event.
    """


    detailType?: str

    source?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetKinesisParameters:
    r"""
    Templated target type for the Amazon Kinesis PutRecord API operation. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Specifies the shard to which EventBridge Scheduler sends the event. Up to 256 characters.
    """


    partitionKey?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRetryPolicy:
    r"""
    Information about the retry policy settings. Detailed below.

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        Maximum amount of time, in seconds, to continue to make retry attempts. Ranges from 60 to 86400 (default).
    maximumRetryAttempts : float, default is Undefined, optional
        Maximum number of retry attempts to make before the request fails. Ranges from 0 to 185 (default).
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelectorPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParameters:
    r"""
    Templated target type for the Amazon SageMaker StartPipelineExecution API operation. Detailed below.

    Attributes
    ----------
    pipelineParameter : [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        Set of up to 200 parameter names and values to use when executing the SageMaker Model Building Pipeline. Detailed below.
    """


    pipelineParameter?: [SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParametersPipelineParameterItems0]


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule spec init provider target sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecInitProviderTargetSqsParameters:
    r"""
    The templated target type for the Amazon SQS SendMessage API operation. Detailed below.

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRef

    metadata?: SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToMetadata

    name: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRefPolicy


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatus:
    r"""
    ScheduleStatus defines the observed state of Schedule.

    Attributes
    ----------
    atProvider : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SchedulerAwsUpboundIoV1beta2ScheduleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProvider

    conditions?: [SchedulerAwsUpboundIoV1beta2ScheduleStatusConditionsItems0]

    observedGeneration?: int


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProvider:
    r"""
    scheduler aws upbound io v1beta2 schedule status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the SQS queue specified as the destination for the dead-letter queue.
    description : str, default is Undefined, optional
        Brief description of the schedule.
    endDate : str, default is Undefined, optional
        The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the end date you specify. EventBridge Scheduler ignores the end date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    flexibleTimeWindow : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderFlexibleTimeWindow, default is Undefined, optional
        flexible time window
    groupName : str, default is Undefined, optional
        Name of the schedule group to associate with this schedule. When omitted, the default schedule group is used.
    id : str, default is Undefined, optional
        Name of the schedule.
    kmsKeyArn : str, default is Undefined, optional
        ARN for the customer managed KMS key that EventBridge Scheduler will use to encrypt and decrypt your data.
    name : str, default is Undefined, optional
        Name of the schedule. Conflicts with name_prefix.
    scheduleExpression : str, default is Undefined, optional
        Defines when the schedule runs. Read more in Schedule types on EventBridge Scheduler.
    scheduleExpressionTimezone : str, default is Undefined, optional
        Timezone in which the scheduling expression is evaluated. Defaults to UTC. Example: Australia/Sydney.
    startDate : str, default is Undefined, optional
        The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the start date you specify. EventBridge Scheduler ignores the start date for one-time schedules. Example: 2030-01-01T01:00:00Z.
    state : str, default is Undefined, optional
        Specifies whether the schedule is enabled or disabled. One of: ENABLED (default), DISABLED.
    target : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTarget, default is Undefined, optional
        target
    """


    arn?: str

    description?: str

    endDate?: str

    flexibleTimeWindow?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderFlexibleTimeWindow

    groupName?: str

    id?: str

    kmsKeyArn?: str

    name?: str

    scheduleExpression?: str

    scheduleExpressionTimezone?: str

    startDate?: str

    state?: str

    target?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTarget


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderFlexibleTimeWindow:
    r"""
    Configures a time window during which EventBridge Scheduler invokes the schedule. Detailed below.

    Attributes
    ----------
    maximumWindowInMinutes : float, default is Undefined, optional
        Maximum time window during which a schedule can be invoked. Ranges from 1 to 1440 minutes.
    mode : str, default is Undefined, optional
        Determines whether the schedule is invoked within a flexible time window. One of: OFF, FLEXIBLE.
    """


    maximumWindowInMinutes?: float

    mode?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTarget:
    r"""
    Configures the target of the schedule. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    deadLetterConfig : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetDeadLetterConfig, default is Undefined, optional
        dead letter config
    ecsParameters : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParameters, default is Undefined, optional
        ecs parameters
    eventbridgeParameters : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEventbridgeParameters, default is Undefined, optional
        eventbridge parameters
    input : str, default is Undefined, optional
        Text, or well-formed JSON, passed to the target. Read more in Universal target.
    kinesisParameters : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetKinesisParameters, default is Undefined, optional
        kinesis parameters
    retryPolicy : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetRetryPolicy, default is Undefined, optional
        retry policy
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked. Read more in Set up the execution role.
    sagemakerPipelineParameters : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsParameters : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSqsParameters, default is Undefined, optional
        sqs parameters
    """


    arn?: str

    deadLetterConfig?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetDeadLetterConfig

    ecsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParameters

    eventbridgeParameters?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEventbridgeParameters

    input?: str

    kinesisParameters?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetKinesisParameters

    retryPolicy?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetRetryPolicy

    roleArn?: str

    sagemakerPipelineParameters?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParameters

    sqsParameters?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSqsParameters


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetDeadLetterConfig:
    r"""
    Information about an Amazon SQS queue that EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified, EventBridge Scheduler delivers failed events that could not be successfully delivered to a target to the queue. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the target of this schedule, such as a SQS queue or ECS cluster. For universal targets, this is a Service ARN specific to the target service.
    """


    arn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParameters:
    r"""
    Templated target type for the Amazon ECS RunTask API operation. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersCapacityProviderStrategyItems0], default is Undefined, optional
        Up to 6 capacity provider strategies to use for the task. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon ECS Developer Guide.
    enableExecuteCommand : bool, default is Undefined, optional
        Specifies whether to enable the execute command functionality for the containers in this task.
    group : str, default is Undefined, optional
        Specifies an ECS task group for the task. At most 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. One of: EC2, FARGATE, EXTERNAL.
    networkConfiguration : SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    placementConstraints : [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementConstraintsItems0], default is Undefined, optional
        A set of up to 10 placement constraints to use for the task. Detailed below.
    placementStrategy : [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementStrategyItems0], default is Undefined, optional
        A set of up to 5 placement strategies. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. One of: TASK_DEFINITION.
    referenceId : str, default is Undefined, optional
        Reference ID to use for the task.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taskCount : float, default is Undefined, optional
        The number of tasks to create. Ranges from 1 (default) to 10.
    taskDefinitionArn : str, default is Undefined, optional
        ARN of the task definition to use.
    """


    capacityProviderStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersNetworkConfiguration

    placementConstraints?: [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementConstraintsItems0]

    placementStrategy?: [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersCapacityProviderStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule status at provider target ecs parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        How many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Ranges from 0 (default) to 100000.
    capacityProvider : str, default is Undefined, optional
        Short name of the capacity provider.
    weight : float, default is Undefined, optional
        Designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Ranges from from 0 to 1000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersNetworkConfiguration:
    r"""
    Configures the networking associated with the task. Detailed below.

    Attributes
    ----------
    assignPublicIp : bool, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. This attribute is a boolean type, where true maps to ENABLED and false to DISABLED. You can specify true only when the launch_type is set to FARGATE.
    securityGroups : [str], default is Undefined, optional
        Set of 1 to 5 Security Group ID-s to be associated with the task. These security groups must all be in the same VPC.
    subnets : [str], default is Undefined, optional
        Set of 1 to 16 subnets to be associated with the task. These subnets must all be in the same VPC.
    """


    assignPublicIp?: bool

    securityGroups?: [str]

    subnets?: [str]


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementConstraintsItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule status at provider target ecs parameters placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. For more information, see Cluster query language in the Amazon ECS Developer Guide.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    expression?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEcsParametersPlacementStrategyItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule status at provider target ecs parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against.
    $type : str, default is Undefined, optional
        The type of placement strategy. One of: random, spread, binpack.
    """


    field?: str

    $type?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetEventbridgeParameters:
    r"""
    Templated target type for the EventBridge PutEvents API operation. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        Free-form string used to decide what fields to expect in the event detail. Up to 128 characters.
    source : str, default is Undefined, optional
        Source of the event.
    """


    detailType?: str

    source?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetKinesisParameters:
    r"""
    Templated target type for the Amazon Kinesis PutRecord API operation. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Specifies the shard to which EventBridge Scheduler sends the event. Up to 256 characters.
    """


    partitionKey?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetRetryPolicy:
    r"""
    Information about the retry policy settings. Detailed below.

    Attributes
    ----------
    maximumEventAgeInSeconds : float, default is Undefined, optional
        Maximum amount of time, in seconds, to continue to make retry attempts. Ranges from 60 to 86400 (default).
    maximumRetryAttempts : float, default is Undefined, optional
        Maximum number of retry attempts to make before the request fails. Ranges from 0 to 185 (default).
    """


    maximumEventAgeInSeconds?: float

    maximumRetryAttempts?: float


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParameters:
    r"""
    Templated target type for the Amazon SageMaker StartPipelineExecution API operation. Detailed below.

    Attributes
    ----------
    pipelineParameter : [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        Set of up to 200 parameter names and values to use when executing the SageMaker Model Building Pipeline. Detailed below.
    """


    pipelineParameter?: [SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParametersPipelineParameterItems0]


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    scheduler aws upbound io v1beta2 schedule status at provider target sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of parameter to start execution of a SageMaker Model Building Pipeline.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline.
    """


    name?: str

    value?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusAtProviderTargetSqsParameters:
    r"""
    The templated target type for the Amazon SQS SendMessage API operation. Detailed below.

    Attributes
    ----------
    messageGroupId : str, default is Undefined, optional
        FIFO message group ID to use as the target.
    """


    messageGroupId?: str


schema SchedulerAwsUpboundIoV1beta2ScheduleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


