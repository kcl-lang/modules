"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Record:
    r"""
    Record is the Schema for the Records API. Provides a Route53 record resource.

    Attributes
    ----------
    apiVersion : str, default is "route53.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Record", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53AwsUpboundIoV1beta1RecordSpec, default is Undefined, required
        spec
    status : Route53AwsUpboundIoV1beta1RecordStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53.aws.upbound.io/v1beta1" = "route53.aws.upbound.io/v1beta1"

    kind: "Record" = "Record"

    metadata?: v1.ObjectMeta

    spec: Route53AwsUpboundIoV1beta1RecordSpec

    status?: Route53AwsUpboundIoV1beta1RecordStatus


schema Route53AwsUpboundIoV1beta1RecordSpec:
    r"""
    RecordSpec defines the desired state of Record

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Route53AwsUpboundIoV1beta1RecordSpecForProvider, default is Undefined, required
        for provider
    initProvider : Route53AwsUpboundIoV1beta1RecordSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53AwsUpboundIoV1beta1RecordSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53AwsUpboundIoV1beta1RecordSpecForProvider

    initProvider?: Route53AwsUpboundIoV1beta1RecordSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRef

    publishConnectionDetailsTo?: Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53AwsUpboundIoV1beta1RecordSpecWriteConnectionSecretToRef


schema Route53AwsUpboundIoV1beta1RecordSpecForProvider:
    r"""
    route53 aws upbound io v1beta1 record spec for provider

    Attributes
    ----------
    alias : [Route53AwsUpboundIoV1beta1RecordSpecForProviderAliasItems0], default is Undefined, optional
        An alias block. Conflicts with ttl & records.
        Documented below.
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderCidrRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.
    failoverRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderFailoverRoutingPolicyItems0], default is Undefined, optional
        A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
    geolocationRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeolocationRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
    geoproximityRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    healthCheckIdRef : Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRef, default is Undefined, optional
        health check Id ref
    healthCheckIdSelector : Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelector, default is Undefined, optional
        health check Id selector
    latencyRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderLatencyRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    recordsRefs : [Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate records.
    recordsSelector : Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelector, default is Undefined, optional
        records selector
    region : str, default is Undefined, required
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        Region is the region you'd like your resource to be created in.
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecForProviderWeightedRoutingPolicyItems0], default is Undefined, optional
        A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    zoneIdRef : Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    alias?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderAliasItems0]

    allowOverwrite?: bool

    cidrRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderCidrRoutingPolicyItems0]

    failoverRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderFailoverRoutingPolicyItems0]

    geolocationRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeolocationRoutingPolicyItems0]

    geoproximityRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0]

    healthCheckId?: str

    healthCheckIdRef?: Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRef

    healthCheckIdSelector?: Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelector

    latencyRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderLatencyRoutingPolicyItems0]

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    recordsRefs?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0]

    recordsSelector?: Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelector

    region: str

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderWeightedRoutingPolicyItems0]

    zoneId?: str

    zoneIdRef?: Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRef

    zoneIdSelector?: Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelector


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderAliasItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider alias items0

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderCidrRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider cidr routing policy items0

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderFailoverRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider failover routing policy items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderGeolocationRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider geolocation routing policy items0

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider geoproximity routing policy items0

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0CoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0CoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderGeoproximityRoutingPolicyItems0CoordinatesItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider geoproximity routing policy items0 coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRef:
    r"""
    Reference to a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelector:
    r"""
    Selector for a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderHealthCheckIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderLatencyRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider latency routing policy items0

    Attributes
    ----------
    region : str, default is Undefined, required
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
    """


    region: str


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0Policy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate records.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderRecordsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderWeightedRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec for provider weighted routing policy items0

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRef:
    r"""
    Reference to a Zone in route53 to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelector:
    r"""
    Selector for a Zone in route53 to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecForProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alias : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderAliasItems0], default is Undefined, optional
        An alias block. Conflicts with ttl & records.
        Documented below.
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderCidrRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.
    failoverRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderFailoverRoutingPolicyItems0], default is Undefined, optional
        A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
    geolocationRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeolocationRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
    geoproximityRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    healthCheckIdRef : Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRef, default is Undefined, optional
        health check Id ref
    healthCheckIdSelector : Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelector, default is Undefined, optional
        health check Id selector
    latencyRoutingPolicy : [any], default is Undefined, optional
        A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    recordsRefs : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate records.
    recordsSelector : Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelector, default is Undefined, optional
        records selector
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderWeightedRoutingPolicyItems0], default is Undefined, optional
        A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    zoneIdRef : Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    alias?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderAliasItems0]

    allowOverwrite?: bool

    cidrRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderCidrRoutingPolicyItems0]

    failoverRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderFailoverRoutingPolicyItems0]

    geolocationRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeolocationRoutingPolicyItems0]

    geoproximityRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0]

    healthCheckId?: str

    healthCheckIdRef?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRef

    healthCheckIdSelector?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelector

    latencyRoutingPolicy?: [any]

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    recordsRefs?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0]

    recordsSelector?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelector

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderWeightedRoutingPolicyItems0]

    zoneId?: str

    zoneIdRef?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRef

    zoneIdSelector?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelector


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderAliasItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider alias items0

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderCidrRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider cidr routing policy items0

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderFailoverRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider failover routing policy items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeolocationRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider geolocation routing policy items0

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider geoproximity routing policy items0

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0CoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0CoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderGeoproximityRoutingPolicyItems0CoordinatesItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider geoproximity routing policy items0 coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRef:
    r"""
    Reference to a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelector:
    r"""
    Selector for a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderHealthCheckIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0Policy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate records.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderRecordsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderWeightedRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record spec init provider weighted routing policy items0

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRef:
    r"""
    Reference to a Zone in route53 to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelector:
    r"""
    Selector for a Zone in route53 to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecInitProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1RecordSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1RecordSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53AwsUpboundIoV1beta1RecordStatus:
    r"""
    RecordStatus defines the observed state of Record.

    Attributes
    ----------
    atProvider : Route53AwsUpboundIoV1beta1RecordStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53AwsUpboundIoV1beta1RecordStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Route53AwsUpboundIoV1beta1RecordStatusAtProvider

    conditions?: [Route53AwsUpboundIoV1beta1RecordStatusConditionsItems0]

    observedGeneration?: int


schema Route53AwsUpboundIoV1beta1RecordStatusAtProvider:
    r"""
    route53 aws upbound io v1beta1 record status at provider

    Attributes
    ----------
    alias : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderAliasItems0], default is Undefined, optional
        An alias block. Conflicts with ttl & records.
        Documented below.
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderCidrRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.
    failoverRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderFailoverRoutingPolicyItems0], default is Undefined, optional
        A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
    fqdn : str, default is Undefined, optional
        FQDN built using the zone domain and name.
    geolocationRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeolocationRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
    geoproximityRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    id : str, default is Undefined, optional
        id
    latencyRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderLatencyRoutingPolicyItems0], default is Undefined, optional
        A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderWeightedRoutingPolicyItems0], default is Undefined, optional
        A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    alias?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderAliasItems0]

    allowOverwrite?: bool

    cidrRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderCidrRoutingPolicyItems0]

    failoverRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderFailoverRoutingPolicyItems0]

    fqdn?: str

    geolocationRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeolocationRoutingPolicyItems0]

    geoproximityRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0]

    healthCheckId?: str

    id?: str

    latencyRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderLatencyRoutingPolicyItems0]

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderWeightedRoutingPolicyItems0]

    zoneId?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderAliasItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider alias items0

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderCidrRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider cidr routing policy items0

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderFailoverRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider failover routing policy items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeolocationRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider geolocation routing policy items0

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider geoproximity routing policy items0

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0CoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0CoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderGeoproximityRoutingPolicyItems0CoordinatesItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider geoproximity routing policy items0 coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderLatencyRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider latency routing policy items0

    Attributes
    ----------
    region : str, default is Undefined, optional
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
    """


    region?: str


schema Route53AwsUpboundIoV1beta1RecordStatusAtProviderWeightedRoutingPolicyItems0:
    r"""
    route53 aws upbound io v1beta1 record status at provider weighted routing policy items0

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta1RecordStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


