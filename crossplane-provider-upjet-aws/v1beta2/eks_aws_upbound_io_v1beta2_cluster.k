"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Manages an EKS Cluster

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta2ClusterSpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta2ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta2" = "eks.aws.upbound.io/v1beta2"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta2ClusterSpec

    status?: EksAwsUpboundIoV1beta2ClusterStatus


schema EksAwsUpboundIoV1beta2ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta2ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : EksAwsUpboundIoV1beta2ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta2ClusterSpecForProvider

    initProvider?: EksAwsUpboundIoV1beta2ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta2ClusterSpecForProvider:
    r"""
    eks aws upbound io v1beta2 cluster spec for provider

    Attributes
    ----------
    accessConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderAccessConfig, default is Undefined, optional
        access config
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    computeConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderComputeConfig, default is Undefined, optional
        compute config
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfig, default is Undefined, optional
        encryption config
    kubernetesNetworkConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfig, default is Undefined, optional
        kubernetes network config
    outpostConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfig, default is Undefined, optional
        outpost config
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    remoteNetworkConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfig, default is Undefined, optional
        remote network config
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    roleArnRef : EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    storageConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfig, default is Undefined, optional
        storage config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    upgradePolicy : EksAwsUpboundIoV1beta2ClusterSpecForProviderUpgradePolicy, default is Undefined, optional
        upgrade policy
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfig, default is Undefined, optional
        vpc config
    zonalShiftConfig : EksAwsUpboundIoV1beta2ClusterSpecForProviderZonalShiftConfig, default is Undefined, optional
        zonal shift config
    """


    accessConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderAccessConfig

    bootstrapSelfManagedAddons?: bool

    computeConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderComputeConfig

    enabledClusterLogTypes?: [str]

    encryptionConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfig

    kubernetesNetworkConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfig

    outpostConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfig

    region: str

    remoteNetworkConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfig

    roleArn?: str

    roleArnRef?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRef

    roleArnSelector?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelector

    storageConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfig

    tags?: {str:str}

    upgradePolicy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderUpgradePolicy

    version?: str

    vpcConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfig

    zonalShiftConfig?: EksAwsUpboundIoV1beta2ClusterSpecForProviderZonalShiftConfig


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderAccessConfig:
    r"""
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is false.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderComputeConfig:
    r"""
    Configuration block with compute configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfig:
    r"""
    Configuration block with encryption configuration for the cluster. Detailed below.

    Attributes
    ----------
    provider : EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfigProvider, default is Undefined, optional
        provider
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfigProvider

    resources?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionConfigProvider:
    r"""
    Configuration block with provider for encryption. Detailed below.

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfig:
    r"""
    Configuration block with kubernetes network configuration for the cluster. Detailed below.

    Attributes
    ----------
    elasticLoadBalancing : EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfigElasticLoadBalancing, default is Undefined, optional
        elastic load balancing
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """


    elasticLoadBalancing?: EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfigElasticLoadBalancing

    ipFamily?: str

    serviceIpv4Cidr?: str


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderKubernetesNetworkConfigElasticLoadBalancing:
    r"""
    Configuration block with elastic load balancing configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfig:
    r"""
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfigControlPlanePlacement, default is Undefined, optional
        control plane placement
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfigControlPlanePlacement

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderOutpostConfigControlPlanePlacement:
    r"""
    An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
    The control_plane_placement configuration block supports the following arguments:

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfig:
    r"""
    Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    remoteNodeNetworks : EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemoteNodeNetworks, default is Undefined, optional
        remote node networks
    remotePodNetworks : EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemotePodNetworks, default is Undefined, optional
        remote pod networks
    """


    remoteNodeNetworks?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemoteNodeNetworks

    remotePodNetworks?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemotePodNetworks


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemoteNodeNetworks:
    r"""
    Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRemoteNetworkConfigRemotePodNetworks:
    r"""
    Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRefPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfig:
    r"""
    Configuration block with storage configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    blockStorage : EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfigBlockStorage, default is Undefined, optional
        block storage
    """


    blockStorage?: EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfigBlockStorage


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderStorageConfigBlockStorage:
    r"""
    eks aws upbound io v1beta2 cluster spec for provider storage config block storage

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderUpgradePolicy:
    r"""
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfig:
    r"""
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.

    Attributes
    ----------
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIdRefs : [EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIdRefs : [EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """


    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    publicAccessCidrs?: [str]

    securityGroupIdRefs?: [EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecForProviderZonalShiftConfig:
    r"""
    Configuration block with zonal shift configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderAccessConfig, default is Undefined, optional
        access config
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    computeConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderComputeConfig, default is Undefined, optional
        compute config
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfig, default is Undefined, optional
        encryption config
    kubernetesNetworkConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfig, default is Undefined, optional
        kubernetes network config
    outpostConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfig, default is Undefined, optional
        outpost config
    remoteNetworkConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfig, default is Undefined, optional
        remote network config
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    roleArnRef : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    storageConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfig, default is Undefined, optional
        storage config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    upgradePolicy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderUpgradePolicy, default is Undefined, optional
        upgrade policy
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfig, default is Undefined, optional
        vpc config
    zonalShiftConfig : EksAwsUpboundIoV1beta2ClusterSpecInitProviderZonalShiftConfig, default is Undefined, optional
        zonal shift config
    """


    accessConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderAccessConfig

    bootstrapSelfManagedAddons?: bool

    computeConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderComputeConfig

    enabledClusterLogTypes?: [str]

    encryptionConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfig

    kubernetesNetworkConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfig

    outpostConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfig

    remoteNetworkConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfig

    roleArn?: str

    roleArnRef?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRef

    roleArnSelector?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelector

    storageConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfig

    tags?: {str:str}

    upgradePolicy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderUpgradePolicy

    version?: str

    vpcConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfig

    zonalShiftConfig?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderZonalShiftConfig


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderAccessConfig:
    r"""
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is false.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderComputeConfig:
    r"""
    Configuration block with compute configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfig:
    r"""
    Configuration block with encryption configuration for the cluster. Detailed below.

    Attributes
    ----------
    provider : EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfigProvider, default is Undefined, optional
        provider
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfigProvider

    resources?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionConfigProvider:
    r"""
    Configuration block with provider for encryption. Detailed below.

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfig:
    r"""
    Configuration block with kubernetes network configuration for the cluster. Detailed below.

    Attributes
    ----------
    elasticLoadBalancing : EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfigElasticLoadBalancing, default is Undefined, optional
        elastic load balancing
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """


    elasticLoadBalancing?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfigElasticLoadBalancing

    ipFamily?: str

    serviceIpv4Cidr?: str


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderKubernetesNetworkConfigElasticLoadBalancing:
    r"""
    Configuration block with elastic load balancing configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfig:
    r"""
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfigControlPlanePlacement, default is Undefined, optional
        control plane placement
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfigControlPlanePlacement

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderOutpostConfigControlPlanePlacement:
    r"""
    An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
    The control_plane_placement configuration block supports the following arguments:

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfig:
    r"""
    Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    remoteNodeNetworks : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemoteNodeNetworks, default is Undefined, optional
        remote node networks
    remotePodNetworks : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemotePodNetworks, default is Undefined, optional
        remote pod networks
    """


    remoteNodeNetworks?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemoteNodeNetworks

    remotePodNetworks?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemotePodNetworks


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemoteNodeNetworks:
    r"""
    Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRemoteNetworkConfigRemotePodNetworks:
    r"""
    Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRefPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfig:
    r"""
    Configuration block with storage configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    blockStorage : EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfigBlockStorage, default is Undefined, optional
        block storage
    """


    blockStorage?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfigBlockStorage


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderStorageConfigBlockStorage:
    r"""
    eks aws upbound io v1beta2 cluster spec init provider storage config block storage

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderUpgradePolicy:
    r"""
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfig:
    r"""
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.

    Attributes
    ----------
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIdRefs : [EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIdRefs : [EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """


    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    publicAccessCidrs?: [str]

    securityGroupIdRefs?: [EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecInitProviderZonalShiftConfig:
    r"""
    Configuration block with zonal shift configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta2ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta2ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta2ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta2ClusterStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta2ClusterStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta2ClusterStatusAtProvider:
    r"""
    eks aws upbound io v1beta2 cluster status at provider

    Attributes
    ----------
    accessConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderAccessConfig, default is Undefined, optional
        access config
    arn : str, default is Undefined, optional
        ARN of the cluster.
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    certificateAuthority : [EksAwsUpboundIoV1beta2ClusterStatusAtProviderCertificateAuthorityItems0], default is Undefined, optional
        Attribute block containing certificate-authority-data for your cluster. Detailed below.
    clusterId : str, default is Undefined, optional
        The ID of your local Amazon EKS cluster on the AWS Outpost. This attribute isn't available for an AWS EKS cluster on AWS cloud.
    computeConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderComputeConfig, default is Undefined, optional
        compute config
    createdAt : str, default is Undefined, optional
        Unix epoch timestamp in seconds for when the cluster was created.
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfig, default is Undefined, optional
        encryption config
    endpoint : str, default is Undefined, optional
        Endpoint for your Kubernetes API server.
    id : str, default is Undefined, optional
        Name of the cluster.
    identity : [EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0], default is Undefined, optional
        Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.
    kubernetesNetworkConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfig, default is Undefined, optional
        kubernetes network config
    outpostConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfig, default is Undefined, optional
        outpost config
    platformVersion : str, default is Undefined, optional
        Platform version for the cluster.
    remoteNetworkConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfig, default is Undefined, optional
        remote network config
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    status : str, default is Undefined, optional
        Status of the EKS cluster. One of CREATING, ACTIVE, DELETING, FAILED.
    storageConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfig, default is Undefined, optional
        storage config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    upgradePolicy : EksAwsUpboundIoV1beta2ClusterStatusAtProviderUpgradePolicy, default is Undefined, optional
        upgrade policy
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderVpcConfig, default is Undefined, optional
        vpc config
    zonalShiftConfig : EksAwsUpboundIoV1beta2ClusterStatusAtProviderZonalShiftConfig, default is Undefined, optional
        zonal shift config
    """


    accessConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderAccessConfig

    arn?: str

    bootstrapSelfManagedAddons?: bool

    certificateAuthority?: [EksAwsUpboundIoV1beta2ClusterStatusAtProviderCertificateAuthorityItems0]

    clusterId?: str

    computeConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderComputeConfig

    createdAt?: str

    enabledClusterLogTypes?: [str]

    encryptionConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfig

    endpoint?: str

    id?: str

    identity?: [EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0]

    kubernetesNetworkConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfig

    outpostConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfig

    platformVersion?: str

    remoteNetworkConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfig

    roleArn?: str

    status?: str

    storageConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfig

    tags?: {str:str}

    tagsAll?: {str:str}

    upgradePolicy?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderUpgradePolicy

    version?: str

    vpcConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderVpcConfig

    zonalShiftConfig?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderZonalShiftConfig


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderAccessConfig:
    r"""
    Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is false.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderCertificateAuthorityItems0:
    r"""
    eks aws upbound io v1beta2 cluster status at provider certificate authority items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        Base64 encoded certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
    """


    data?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderComputeConfig:
    r"""
    Configuration block with compute configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfig:
    r"""
    Configuration block with encryption configuration for the cluster. Detailed below.

    Attributes
    ----------
    provider : EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfigProvider, default is Undefined, optional
        provider
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfigProvider

    resources?: [str]


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionConfigProvider:
    r"""
    Configuration block with provider for encryption. Detailed below.

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0:
    r"""
    eks aws upbound io v1beta2 cluster status at provider identity items0

    Attributes
    ----------
    oidc : [EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0OidcItems0], default is Undefined, optional
        Nested block containing OpenID Connect identity provider information for the cluster. Detailed below.
    """


    oidc?: [EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0OidcItems0]


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderIdentityItems0OidcItems0:
    r"""
    eks aws upbound io v1beta2 cluster status at provider identity items0 oidc items0

    Attributes
    ----------
    issuer : str, default is Undefined, optional
        Issuer URL for the OpenID Connect identity provider.
    """


    issuer?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfig:
    r"""
    Configuration block with kubernetes network configuration for the cluster. Detailed below.

    Attributes
    ----------
    elasticLoadBalancing : EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfigElasticLoadBalancing, default is Undefined, optional
        elastic load balancing
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    serviceIpv6Cidr : str, default is Undefined, optional
        The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified ipv6 for ip_family when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
    """


    elasticLoadBalancing?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfigElasticLoadBalancing

    ipFamily?: str

    serviceIpv4Cidr?: str

    serviceIpv6Cidr?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderKubernetesNetworkConfigElasticLoadBalancing:
    r"""
    Configuration block with elastic load balancing configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfig:
    r"""
    Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfigControlPlanePlacement, default is Undefined, optional
        control plane placement
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfigControlPlanePlacement

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderOutpostConfigControlPlanePlacement:
    r"""
    An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
    The control_plane_placement configuration block supports the following arguments:

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfig:
    r"""
    Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    remoteNodeNetworks : EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemoteNodeNetworks, default is Undefined, optional
        remote node networks
    remotePodNetworks : EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemotePodNetworks, default is Undefined, optional
        remote pod networks
    """


    remoteNodeNetworks?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemoteNodeNetworks

    remotePodNetworks?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemotePodNetworks


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemoteNodeNetworks:
    r"""
    Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderRemoteNetworkConfigRemotePodNetworks:
    r"""
    Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfig:
    r"""
    Configuration block with storage configuration for EKS Auto Mode. Detailed below.

    Attributes
    ----------
    blockStorage : EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfigBlockStorage, default is Undefined, optional
        block storage
    """


    blockStorage?: EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfigBlockStorage


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderStorageConfigBlockStorage:
    r"""
    eks aws upbound io v1beta2 cluster status at provider storage config block storage

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderUpgradePolicy:
    r"""
    Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderVpcConfig:
    r"""
    Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.

    Attributes
    ----------
    clusterSecurityGroupId : str, default is Undefined, optional
        Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    vpcId : str, default is Undefined, optional
        ID of the VPC associated with your cluster.
    """


    clusterSecurityGroupId?: str

    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    publicAccessCidrs?: [str]

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema EksAwsUpboundIoV1beta2ClusterStatusAtProviderZonalShiftConfig:
    r"""
    Configuration block with zonal shift configuration for the cluster. Detailed below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta2ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


