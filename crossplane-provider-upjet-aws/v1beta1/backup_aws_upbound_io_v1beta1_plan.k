"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Plan:
    r"""
    Plan is the Schema for the Plans API. Provides an AWS Backup plan resource.

    Attributes
    ----------
    apiVersion : str, default is "backup.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Plan", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BackupAwsUpboundIoV1beta1PlanSpec, default is Undefined, required
        spec
    status : BackupAwsUpboundIoV1beta1PlanStatus, default is Undefined, optional
        status
    """


    apiVersion: "backup.aws.upbound.io/v1beta1" = "backup.aws.upbound.io/v1beta1"

    kind: "Plan" = "Plan"

    metadata?: v1.ObjectMeta

    spec: BackupAwsUpboundIoV1beta1PlanSpec

    status?: BackupAwsUpboundIoV1beta1PlanStatus


schema BackupAwsUpboundIoV1beta1PlanSpec:
    r"""
    PlanSpec defines the desired state of Plan

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BackupAwsUpboundIoV1beta1PlanSpecForProvider, default is Undefined, required
        for provider
    initProvider : BackupAwsUpboundIoV1beta1PlanSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BackupAwsUpboundIoV1beta1PlanSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BackupAwsUpboundIoV1beta1PlanSpecForProvider

    initProvider?: BackupAwsUpboundIoV1beta1PlanSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRef

    publishConnectionDetailsTo?: BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BackupAwsUpboundIoV1beta1PlanSpecWriteConnectionSecretToRef


schema BackupAwsUpboundIoV1beta1PlanSpecForProvider:
    r"""
    backup aws upbound io v1beta1 plan spec for provider

    Attributes
    ----------
    advancedBackupSetting : [BackupAwsUpboundIoV1beta1PlanSpecForProviderAdvancedBackupSettingItems0], default is Undefined, optional
        An object that specifies backup options for each resource type.
    name : str, default is Undefined, optional
        The display name of a backup plan.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    $rule : [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0], default is Undefined, optional
        A rule object that specifies a scheduled task that is used to back up a selection of resources.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    advancedBackupSetting?: [BackupAwsUpboundIoV1beta1PlanSpecForProviderAdvancedBackupSettingItems0]

    name?: str

    region: str

    $rule?: [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0]

    tags?: {str:str}


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderAdvancedBackupSettingItems0:
    r"""
    backup aws upbound io v1beta1 plan spec for provider advanced backup setting items0

    Attributes
    ----------
    backupOptions : {str:str}, default is Undefined, optional
        Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = "enabled" } to enable Windows VSS backup option and create a VSS Windows backup.
    resourceType : str, default is Undefined, optional
        The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.
    """


    backupOptions?: {str:str}

    resourceType?: str


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec for provider rule items0

    Attributes
    ----------
    completionWindow : float, default is Undefined, optional
        The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.
    copyAction : [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0], default is Undefined, optional
        Configuration block(s) with copy operation settings. Detailed below.
    enableContinuousBackup : bool, default is Undefined, optional
        Enable continuous backups for supported resources.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    recoveryPointTags : {str:str}, default is Undefined, optional
        Metadata that you can assign to help organize the resources that you create.
    ruleName : str, default is Undefined, optional
        An display name for a backup rule.
    schedule : str, default is Undefined, optional
        A CRON expression specifying when AWS Backup initiates a backup job.
    scheduleExpressionTimezone : str, default is Undefined, optional
        The timezone in which the schedule expression is set. Default value: "Etc/UTC".
    startWindow : float, default is Undefined, optional
        The amount of time in minutes before beginning a backup.
    targetVaultName : str, default is Undefined, optional
        The name of a logical container where backups are stored.
    targetVaultNameRef : BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRef, default is Undefined, optional
        target vault name ref
    targetVaultNameSelector : BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelector, default is Undefined, optional
        target vault name selector
    """


    completionWindow?: float

    copyAction?: [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0]

    enableContinuousBackup?: bool

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0LifecycleItems0]

    recoveryPointTags?: {str:str}

    ruleName?: str

    schedule?: str

    scheduleExpressionTimezone?: str

    startWindow?: float

    targetVaultName?: str

    targetVaultNameRef?: BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRef

    targetVaultNameSelector?: BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelector


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0:
    r"""
    backup aws upbound io v1beta1 plan spec for provider rule items0 copy action items0

    Attributes
    ----------
    destinationVaultArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    """


    destinationVaultArn?: str

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0LifecycleItems0]


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0CopyActionItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec for provider rule items0 copy action items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec for provider rule items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRef:
    r"""
    Reference to a Vault in backup to populate targetVaultName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRefPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelector:
    r"""
    Selector for a Vault in backup to populate targetVaultName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelectorPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecForProviderRuleItems0TargetVaultNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    advancedBackupSetting : [BackupAwsUpboundIoV1beta1PlanSpecInitProviderAdvancedBackupSettingItems0], default is Undefined, optional
        An object that specifies backup options for each resource type.
    name : str, default is Undefined, optional
        The display name of a backup plan.
    $rule : [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0], default is Undefined, optional
        A rule object that specifies a scheduled task that is used to back up a selection of resources.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    advancedBackupSetting?: [BackupAwsUpboundIoV1beta1PlanSpecInitProviderAdvancedBackupSettingItems0]

    name?: str

    $rule?: [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0]

    tags?: {str:str}


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderAdvancedBackupSettingItems0:
    r"""
    backup aws upbound io v1beta1 plan spec init provider advanced backup setting items0

    Attributes
    ----------
    backupOptions : {str:str}, default is Undefined, optional
        Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = "enabled" } to enable Windows VSS backup option and create a VSS Windows backup.
    resourceType : str, default is Undefined, optional
        The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.
    """


    backupOptions?: {str:str}

    resourceType?: str


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec init provider rule items0

    Attributes
    ----------
    completionWindow : float, default is Undefined, optional
        The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.
    copyAction : [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0], default is Undefined, optional
        Configuration block(s) with copy operation settings. Detailed below.
    enableContinuousBackup : bool, default is Undefined, optional
        Enable continuous backups for supported resources.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    recoveryPointTags : {str:str}, default is Undefined, optional
        Metadata that you can assign to help organize the resources that you create.
    ruleName : str, default is Undefined, optional
        An display name for a backup rule.
    schedule : str, default is Undefined, optional
        A CRON expression specifying when AWS Backup initiates a backup job.
    scheduleExpressionTimezone : str, default is Undefined, optional
        The timezone in which the schedule expression is set. Default value: "Etc/UTC".
    startWindow : float, default is Undefined, optional
        The amount of time in minutes before beginning a backup.
    targetVaultName : str, default is Undefined, optional
        The name of a logical container where backups are stored.
    targetVaultNameRef : BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRef, default is Undefined, optional
        target vault name ref
    targetVaultNameSelector : BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelector, default is Undefined, optional
        target vault name selector
    """


    completionWindow?: float

    copyAction?: [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0]

    enableContinuousBackup?: bool

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0LifecycleItems0]

    recoveryPointTags?: {str:str}

    ruleName?: str

    schedule?: str

    scheduleExpressionTimezone?: str

    startWindow?: float

    targetVaultName?: str

    targetVaultNameRef?: BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRef

    targetVaultNameSelector?: BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelector


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0:
    r"""
    backup aws upbound io v1beta1 plan spec init provider rule items0 copy action items0

    Attributes
    ----------
    destinationVaultArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    """


    destinationVaultArn?: str

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0LifecycleItems0]


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0CopyActionItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec init provider rule items0 copy action items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan spec init provider rule items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRef:
    r"""
    Reference to a Vault in backup to populate targetVaultName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRefPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelector:
    r"""
    Selector for a Vault in backup to populate targetVaultName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelectorPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecInitProviderRuleItems0TargetVaultNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRefPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRef

    metadata?: BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToMetadata

    name: str


schema BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRefPolicy


schema BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BackupAwsUpboundIoV1beta1PlanSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BackupAwsUpboundIoV1beta1PlanSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BackupAwsUpboundIoV1beta1PlanStatus:
    r"""
    PlanStatus defines the observed state of Plan.

    Attributes
    ----------
    atProvider : BackupAwsUpboundIoV1beta1PlanStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BackupAwsUpboundIoV1beta1PlanStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BackupAwsUpboundIoV1beta1PlanStatusAtProvider

    conditions?: [BackupAwsUpboundIoV1beta1PlanStatusConditionsItems0]

    observedGeneration?: int


schema BackupAwsUpboundIoV1beta1PlanStatusAtProvider:
    r"""
    backup aws upbound io v1beta1 plan status at provider

    Attributes
    ----------
    advancedBackupSetting : [BackupAwsUpboundIoV1beta1PlanStatusAtProviderAdvancedBackupSettingItems0], default is Undefined, optional
        An object that specifies backup options for each resource type.
    arn : str, default is Undefined, optional
        The ARN of the backup plan.
    id : str, default is Undefined, optional
        The id of the backup plan.
    name : str, default is Undefined, optional
        The display name of a backup plan.
    $rule : [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0], default is Undefined, optional
        A rule object that specifies a scheduled task that is used to back up a selection of resources.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : str, default is Undefined, optional
        Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.
    """


    advancedBackupSetting?: [BackupAwsUpboundIoV1beta1PlanStatusAtProviderAdvancedBackupSettingItems0]

    arn?: str

    id?: str

    name?: str

    $rule?: [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: str


schema BackupAwsUpboundIoV1beta1PlanStatusAtProviderAdvancedBackupSettingItems0:
    r"""
    backup aws upbound io v1beta1 plan status at provider advanced backup setting items0

    Attributes
    ----------
    backupOptions : {str:str}, default is Undefined, optional
        Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = "enabled" } to enable Windows VSS backup option and create a VSS Windows backup.
    resourceType : str, default is Undefined, optional
        The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.
    """


    backupOptions?: {str:str}

    resourceType?: str


schema BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0:
    r"""
    backup aws upbound io v1beta1 plan status at provider rule items0

    Attributes
    ----------
    completionWindow : float, default is Undefined, optional
        The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.
    copyAction : [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0], default is Undefined, optional
        Configuration block(s) with copy operation settings. Detailed below.
    enableContinuousBackup : bool, default is Undefined, optional
        Enable continuous backups for supported resources.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    recoveryPointTags : {str:str}, default is Undefined, optional
        Metadata that you can assign to help organize the resources that you create.
    ruleName : str, default is Undefined, optional
        An display name for a backup rule.
    schedule : str, default is Undefined, optional
        A CRON expression specifying when AWS Backup initiates a backup job.
    scheduleExpressionTimezone : str, default is Undefined, optional
        The timezone in which the schedule expression is set. Default value: "Etc/UTC".
    startWindow : float, default is Undefined, optional
        The amount of time in minutes before beginning a backup.
    targetVaultName : str, default is Undefined, optional
        The name of a logical container where backups are stored.
    """


    completionWindow?: float

    copyAction?: [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0]

    enableContinuousBackup?: bool

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0LifecycleItems0]

    recoveryPointTags?: {str:str}

    ruleName?: str

    schedule?: str

    scheduleExpressionTimezone?: str

    startWindow?: float

    targetVaultName?: str


schema BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0:
    r"""
    backup aws upbound io v1beta1 plan status at provider rule items0 copy action items0

    Attributes
    ----------
    destinationVaultArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.
    lifecycle : [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0LifecycleItems0], default is Undefined, optional
        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.
    """


    destinationVaultArn?: str

    lifecycle?: [BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0LifecycleItems0]


schema BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0CopyActionItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan status at provider rule items0 copy action items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanStatusAtProviderRuleItems0LifecycleItems0:
    r"""
    backup aws upbound io v1beta1 plan status at provider rule items0 lifecycle items0

    Attributes
    ----------
    coldStorageAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is moved to cold storage.
    deleteAfter : float, default is Undefined, optional
        Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.
    optInToArchiveForSupportedResources : bool, default is Undefined, optional
        This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.
    """


    coldStorageAfter?: float

    deleteAfter?: float

    optInToArchiveForSupportedResources?: bool


schema BackupAwsUpboundIoV1beta1PlanStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


