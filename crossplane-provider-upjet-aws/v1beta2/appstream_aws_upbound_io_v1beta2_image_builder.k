"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ImageBuilder:
    r"""
    ImageBuilder is the Schema for the ImageBuilders API. Provides an AppStream image builder

    Attributes
    ----------
    apiVersion : str, default is "appstream.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ImageBuilder", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppstreamAwsUpboundIoV1beta2ImageBuilderSpec, default is Undefined, required
        spec
    status : AppstreamAwsUpboundIoV1beta2ImageBuilderStatus, default is Undefined, optional
        status
    """


    apiVersion: "appstream.aws.upbound.io/v1beta2" = "appstream.aws.upbound.io/v1beta2"

    kind: "ImageBuilder" = "ImageBuilder"

    metadata?: v1.ObjectMeta

    spec: AppstreamAwsUpboundIoV1beta2ImageBuilderSpec

    status?: AppstreamAwsUpboundIoV1beta2ImageBuilderStatus


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpec:
    r"""
    ImageBuilderSpec defines the desired state of ImageBuilder

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProvider

    initProvider?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRef

    publishConnectionDetailsTo?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecWriteConnectionSecretToRef


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProvider:
    r"""
    appstream aws upbound io v1beta2 image builder spec for provider

    Attributes
    ----------
    accessEndpoint : [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderAccessEndpointItems0], default is Undefined, optional
        Set of interface VPC endpoint (interface endpoint) objects. Maximum of 4. See below.
    appstreamAgentVersion : str, default is Undefined, optional
        Version of the AppStream 2.0 agent to use for this image builder.
    description : str, default is Undefined, optional
        Description to display.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream image builder.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the image builder.
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the image builder.
    iamRoleArnRef : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching the image builder.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    accessEndpoint?: [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderAccessEndpointItems0]

    appstreamAgentVersion?: str

    description?: str

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    iamRoleArn?: str

    iamRoleArnRef?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRef

    iamRoleArnSelector?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelector

    imageArn?: str

    instanceType?: str

    region: str

    tags?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderAccessEndpointItems0:
    r"""
    appstream aws upbound io v1beta2 image builder spec for provider access endpoint items0

    Attributes
    ----------
    endpointType : str, default is Undefined, optional
        Type of interface endpoint. For valid values, refer to the AWS documentation.
    vpceId : str, default is Undefined, optional
        Identifier (ID) of the interface VPC endpoint.
    """


    endpointType?: str

    vpceId?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRefPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the image builder or image builder.
    subnetIdRefs : [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifier of the subnet to which a network interface is attached from the image builder instance.
    """


    securityGroupIds?: [str]

    subnetIdRefs?: [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0Policy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecForProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessEndpoint : [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderAccessEndpointItems0], default is Undefined, optional
        Set of interface VPC endpoint (interface endpoint) objects. Maximum of 4. See below.
    appstreamAgentVersion : str, default is Undefined, optional
        Version of the AppStream 2.0 agent to use for this image builder.
    description : str, default is Undefined, optional
        Description to display.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream image builder.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the image builder.
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the image builder.
    iamRoleArnRef : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching the image builder.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    accessEndpoint?: [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderAccessEndpointItems0]

    appstreamAgentVersion?: str

    description?: str

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    iamRoleArn?: str

    iamRoleArnRef?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRef

    iamRoleArnSelector?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelector

    imageArn?: str

    instanceType?: str

    tags?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderAccessEndpointItems0:
    r"""
    appstream aws upbound io v1beta2 image builder spec init provider access endpoint items0

    Attributes
    ----------
    endpointType : str, default is Undefined, optional
        Type of interface endpoint. For valid values, refer to the AWS documentation.
    vpceId : str, default is Undefined, optional
        Identifier (ID) of the interface VPC endpoint.
    """


    endpointType?: str

    vpceId?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRefPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the image builder or image builder.
    subnetIdRefs : [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifier of the subnet to which a network interface is attached from the image builder instance.
    """


    securityGroupIds?: [str]

    subnetIdRefs?: [AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0Policy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecInitProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRefPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRef

    metadata?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToMetadata

    name: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRefPolicy


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatus:
    r"""
    ImageBuilderStatus defines the observed state of ImageBuilder.

    Attributes
    ----------
    atProvider : AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppstreamAwsUpboundIoV1beta2ImageBuilderStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProvider

    conditions?: [AppstreamAwsUpboundIoV1beta2ImageBuilderStatusConditionsItems0]

    observedGeneration?: int


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProvider:
    r"""
    appstream aws upbound io v1beta2 image builder status at provider

    Attributes
    ----------
    accessEndpoint : [AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderAccessEndpointItems0], default is Undefined, optional
        Set of interface VPC endpoint (interface endpoint) objects. Maximum of 4. See below.
    appstreamAgentVersion : str, default is Undefined, optional
        Version of the AppStream 2.0 agent to use for this image builder.
    arn : str, default is Undefined, optional
        ARN of the appstream image builder.
    createdTime : str, default is Undefined, optional
        Date and time, in UTC and extended RFC 3339 format, when the image builder was created.
    description : str, default is Undefined, optional
        Description to display.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream image builder.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the image builder.
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the image builder.
    id : str, default is Undefined, optional
        Name of the image builder.
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    imageName : str, default is Undefined, optional
        Name of the image used to create the image builder.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching the image builder.
    state : str, default is Undefined, optional
        State of the image builder. For valid values, refer to the AWS documentation.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcConfig : AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    accessEndpoint?: [AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderAccessEndpointItems0]

    appstreamAgentVersion?: str

    arn?: str

    createdTime?: str

    description?: str

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    iamRoleArn?: str

    id?: str

    imageArn?: str

    imageName?: str

    instanceType?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderAccessEndpointItems0:
    r"""
    appstream aws upbound io v1beta2 image builder status at provider access endpoint items0

    Attributes
    ----------
    endpointType : str, default is Undefined, optional
        Type of interface endpoint. For valid values, refer to the AWS documentation.
    vpceId : str, default is Undefined, optional
        Identifier (ID) of the interface VPC endpoint.
    """


    endpointType?: str

    vpceId?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatusAtProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the image builder or image builder.
    subnetIds : [str], default is Undefined, optional
        Identifier of the subnet to which a network interface is attached from the image builder instance.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2ImageBuilderStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


