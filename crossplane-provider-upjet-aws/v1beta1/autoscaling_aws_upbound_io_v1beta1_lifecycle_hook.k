"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LifecycleHook:
    r"""
    LifecycleHook is the Schema for the LifecycleHooks API. Provides an AutoScaling Lifecycle Hook resource.

    Attributes
    ----------
    apiVersion : str, default is "autoscaling.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LifecycleHook", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpec, default is Undefined, required
        spec
    status : AutoscalingAwsUpboundIoV1beta1LifecycleHookStatus, default is Undefined, optional
        status
    """


    apiVersion: "autoscaling.aws.upbound.io/v1beta1" = "autoscaling.aws.upbound.io/v1beta1"

    kind: "LifecycleHook" = "LifecycleHook"

    metadata?: v1.ObjectMeta

    spec: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpec

    status?: AutoscalingAwsUpboundIoV1beta1LifecycleHookStatus


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpec:
    r"""
    LifecycleHookSpec defines the desired state of LifecycleHook

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProvider, default is Undefined, required
        for provider
    initProvider : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProvider

    initProvider?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRef

    publishConnectionDetailsTo?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecWriteConnectionSecretToRef


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProvider:
    r"""
    autoscaling aws upbound io v1beta1 lifecycle hook spec for provider

    Attributes
    ----------
    autoscalingGroupName : str, default is Undefined, optional
        Name of the Auto Scaling group to which you want to assign the lifecycle hook
    autoscalingGroupNameRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRef, default is Undefined, optional
        autoscaling group name ref
    autoscalingGroupNameSelector : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelector, default is Undefined, optional
        autoscaling group name selector
    defaultResult : str, default is Undefined, optional
        Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.
    heartbeatTimeout : float, default is Undefined, optional
        Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter
    lifecycleTransition : str, default is Undefined, optional
        Instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see describe-lifecycle-hook-types
    notificationMetadata : str, default is Undefined, optional
        Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
    notificationTargetArn : str, default is Undefined, optional
        ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
    roleArnRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    autoscalingGroupName?: str

    autoscalingGroupNameRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRef

    autoscalingGroupNameSelector?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelector

    defaultResult?: str

    heartbeatTimeout?: float

    lifecycleTransition?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    region: str

    roleArn?: str

    roleArnRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRef

    roleArnSelector?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelector


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRef:
    r"""
    Reference to a AutoscalingGroup in autoscaling to populate autoscalingGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelector:
    r"""
    Selector for a AutoscalingGroup in autoscaling to populate autoscalingGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderAutoscalingGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultResult : str, default is Undefined, optional
        Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.
    heartbeatTimeout : float, default is Undefined, optional
        Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter
    lifecycleTransition : str, default is Undefined, optional
        Instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see describe-lifecycle-hook-types
    notificationMetadata : str, default is Undefined, optional
        Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
    notificationTargetArn : str, default is Undefined, optional
        ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
    roleArnRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    defaultResult?: str

    heartbeatTimeout?: float

    lifecycleTransition?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    roleArn?: str

    roleArnRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRef

    roleArnSelector?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelector


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRef

    metadata?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToMetadata

    name: str


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookStatus:
    r"""
    LifecycleHookStatus defines the observed state of LifecycleHook.

    Attributes
    ----------
    atProvider : AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusAtProvider

    conditions?: [AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusConditionsItems0]

    observedGeneration?: int


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusAtProvider:
    r"""
    autoscaling aws upbound io v1beta1 lifecycle hook status at provider

    Attributes
    ----------
    autoscalingGroupName : str, default is Undefined, optional
        Name of the Auto Scaling group to which you want to assign the lifecycle hook
    defaultResult : str, default is Undefined, optional
        Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.
    heartbeatTimeout : float, default is Undefined, optional
        Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter
    id : str, default is Undefined, optional
        id
    lifecycleTransition : str, default is Undefined, optional
        Instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see describe-lifecycle-hook-types
    notificationMetadata : str, default is Undefined, optional
        Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.
    notificationTargetArn : str, default is Undefined, optional
        ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.
    """


    autoscalingGroupName?: str

    defaultResult?: str

    heartbeatTimeout?: float

    id?: str

    lifecycleTransition?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    roleArn?: str


schema AutoscalingAwsUpboundIoV1beta1LifecycleHookStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


