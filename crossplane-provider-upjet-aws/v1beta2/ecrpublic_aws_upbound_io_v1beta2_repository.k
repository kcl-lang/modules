"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Repository:
    r"""
    Repository is the Schema for the Repositorys API. Provides a Public Elastic Container Registry Repository.

    Attributes
    ----------
    apiVersion : str, default is "ecrpublic.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Repository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcrpublicAwsUpboundIoV1beta2RepositorySpec, default is Undefined, required
        spec
    status : EcrpublicAwsUpboundIoV1beta2RepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecrpublic.aws.upbound.io/v1beta2" = "ecrpublic.aws.upbound.io/v1beta2"

    kind: "Repository" = "Repository"

    metadata?: v1.ObjectMeta

    spec: EcrpublicAwsUpboundIoV1beta2RepositorySpec

    status?: EcrpublicAwsUpboundIoV1beta2RepositoryStatus


schema EcrpublicAwsUpboundIoV1beta2RepositorySpec:
    r"""
    RepositorySpec defines the desired state of Repository

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EcrpublicAwsUpboundIoV1beta2RepositorySpecForProvider, default is Undefined, required
        for provider
    initProvider : EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcrpublicAwsUpboundIoV1beta2RepositorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcrpublicAwsUpboundIoV1beta2RepositorySpecForProvider

    initProvider?: EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRef

    publishConnectionDetailsTo?: EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcrpublicAwsUpboundIoV1beta2RepositorySpecWriteConnectionSecretToRef


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecForProvider:
    r"""
    ecrpublic aws upbound io v1beta2 repository spec for provider

    Attributes
    ----------
    catalogData : EcrpublicAwsUpboundIoV1beta2RepositorySpecForProviderCatalogData, default is Undefined, optional
        catalog data
    forceDestroy : bool, default is Undefined, optional
        force destroy
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    catalogData?: EcrpublicAwsUpboundIoV1beta2RepositorySpecForProviderCatalogData

    forceDestroy?: bool

    region: str

    tags?: {str:str}


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecForProviderCatalogData:
    r"""
    Catalog data configuration for the repository. See below for schema.

    Attributes
    ----------
    aboutText : str, default is Undefined, optional
        A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
    architectures : [str], default is Undefined, optional
        The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: ARM, ARM 64, x86, x86-64
    description : str, default is Undefined, optional
        A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
    logoImageBlob : str, default is Undefined, optional
        The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
    operatingSystems : [str], default is Undefined, optional
        The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: Linux, Windows
    usageText : str, default is Undefined, optional
        Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
    """


    aboutText?: str

    architectures?: [str]

    description?: str

    logoImageBlob?: str

    operatingSystems?: [str]

    usageText?: str


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    catalogData : EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProviderCatalogData, default is Undefined, optional
        catalog data
    forceDestroy : bool, default is Undefined, optional
        force destroy
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    catalogData?: EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProviderCatalogData

    forceDestroy?: bool

    tags?: {str:str}


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecInitProviderCatalogData:
    r"""
    Catalog data configuration for the repository. See below for schema.

    Attributes
    ----------
    aboutText : str, default is Undefined, optional
        A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
    architectures : [str], default is Undefined, optional
        The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: ARM, ARM 64, x86, x86-64
    description : str, default is Undefined, optional
        A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
    logoImageBlob : str, default is Undefined, optional
        The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
    operatingSystems : [str], default is Undefined, optional
        The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: Linux, Windows
    usageText : str, default is Undefined, optional
        Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
    """


    aboutText?: str

    architectures?: [str]

    description?: str

    logoImageBlob?: str

    operatingSystems?: [str]

    usageText?: str


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRefPolicy


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRef

    metadata?: EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToMetadata

    name: str


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRefPolicy


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcrpublicAwsUpboundIoV1beta2RepositorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcrpublicAwsUpboundIoV1beta2RepositoryStatus:
    r"""
    RepositoryStatus defines the observed state of Repository.

    Attributes
    ----------
    atProvider : EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcrpublicAwsUpboundIoV1beta2RepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProvider

    conditions?: [EcrpublicAwsUpboundIoV1beta2RepositoryStatusConditionsItems0]

    observedGeneration?: int


schema EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProvider:
    r"""
    ecrpublic aws upbound io v1beta2 repository status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Full ARN of the repository.
    catalogData : EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProviderCatalogData, default is Undefined, optional
        catalog data
    forceDestroy : bool, default is Undefined, optional
        force destroy
    id : str, default is Undefined, optional
        The repository name.
    registryId : str, default is Undefined, optional
        The registry ID where the repository was created.
    repositoryUri : str, default is Undefined, optional
        The URI of the repository.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    catalogData?: EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProviderCatalogData

    forceDestroy?: bool

    id?: str

    registryId?: str

    repositoryUri?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema EcrpublicAwsUpboundIoV1beta2RepositoryStatusAtProviderCatalogData:
    r"""
    Catalog data configuration for the repository. See below for schema.

    Attributes
    ----------
    aboutText : str, default is Undefined, optional
        A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
    architectures : [str], default is Undefined, optional
        The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: ARM, ARM 64, x86, x86-64
    description : str, default is Undefined, optional
        A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
    logoImageBlob : str, default is Undefined, optional
        The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
    operatingSystems : [str], default is Undefined, optional
        The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: Linux, Windows
    usageText : str, default is Undefined, optional
        Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
    """


    aboutText?: str

    architectures?: [str]

    description?: str

    logoImageBlob?: str

    operatingSystems?: [str]

    usageText?: str


schema EcrpublicAwsUpboundIoV1beta2RepositoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


