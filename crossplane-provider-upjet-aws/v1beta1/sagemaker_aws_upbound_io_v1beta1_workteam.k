"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Workteam:
    r"""
    Workteam is the Schema for the Workteams API. Provides a SageMaker Workteam resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Workteam", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta1WorkteamSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta1WorkteamStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta1" = "sagemaker.aws.upbound.io/v1beta1"

    kind: "Workteam" = "Workteam"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta1WorkteamSpec

    status?: SagemakerAwsUpboundIoV1beta1WorkteamStatus


schema SagemakerAwsUpboundIoV1beta1WorkteamSpec:
    r"""
    WorkteamSpec defines the desired state of Workteam

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the work team.
    memberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0], default is Undefined, optional
        A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use cognito_member_definition. For workforces created using your own OIDC identity provider (IdP) use oidc_member_definition. Do not provide input for both of these parameters in a single request. see Member Definition details below.
    notificationConfiguration : [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderNotificationConfigurationItems0], default is Undefined, optional
        Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workerAccessConfiguration : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfiguration, default is Undefined, optional
        worker access configuration
    workforceName : str, default is Undefined, optional
        The name of the workforce.
    workforceNameRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRef, default is Undefined, optional
        workforce name ref
    workforceNameSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelector, default is Undefined, optional
        workforce name selector
    """


    description?: str

    memberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0]

    notificationConfiguration?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderNotificationConfigurationItems0]

    region: str

    tags?: {str:str}

    workerAccessConfiguration?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfiguration

    workforceName?: str

    workforceNameRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRef

    workforceNameSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelector


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec for provider member definition items0

    Attributes
    ----------
    cognitoMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0], default is Undefined, optional
        The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
    oidcMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0OidcMemberDefinitionItems0], default is Undefined, optional
        A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
    """


    cognitoMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0]

    oidcMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0OidcMemberDefinitionItems0]


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec for provider member definition items0 cognito member definition items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        An identifier for an application client. You must create the app client ID using Amazon Cognito.
    clientIdRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector, default is Undefined, optional
        client Id selector
    userGroup : str, default is Undefined, optional
        An identifier for a user group.
    userGroupRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef, default is Undefined, optional
        user group ref
    userGroupSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector, default is Undefined, optional
        user group selector
    userPool : str, default is Undefined, optional
        An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
    userPoolRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef, default is Undefined, optional
        user pool ref
    userPoolSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector, default is Undefined, optional
        user pool selector
    """


    clientId?: str

    clientIdRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef

    clientIdSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector

    userGroup?: str

    userGroupRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef

    userGroupSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector

    userPool?: str

    userPoolRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef

    userPoolSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef:
    r"""
    Reference to a UserGroup in cognitoidp to populate userGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector:
    r"""
    Selector for a UserGroup in cognitoidp to populate userGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderMemberDefinitionItems0OidcMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec for provider member definition items0 oidc member definition items0

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
    """


    groups?: [str]


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderNotificationConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec for provider notification configuration items0

    Attributes
    ----------
    notificationTopicArn : str, default is Undefined, optional
        The ARN for the SNS topic to which notifications should be published.
    """


    notificationTopicArn?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfiguration:
    r"""
    Use this optional parameter to constrain access to an Amazon S3 resource based on the IP address using supported IAM global condition keys. The Amazon S3 resource is accessed in the worker portal using a Amazon S3 presigned URL. see Worker Access Configuration details below.

    Attributes
    ----------
    s3Presign : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3Presign, default is Undefined, optional
        s3 presign
    """


    s3Presign?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3Presign


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3Presign:
    r"""
    Defines any Amazon S3 resource constraints. see S3 Presign details below.

    Attributes
    ----------
    iamPolicyConstraints : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints, default is Undefined, optional
        iam policy constraints
    """


    iamPolicyConstraints?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints:
    r"""
    Use this parameter to specify the allowed request source. Possible sources are either SourceIp or VpcSourceIp. see IAM Policy Constraints details below.

    Attributes
    ----------
    sourceIp : str, default is Undefined, optional
        When SourceIp is Enabled the worker's IP address when a task is rendered in the worker portal is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. This IP address is checked by Amazon S3 and must match in order for the Amazon S3 resource to be rendered in the worker portal. Valid values are Enabled or Disabled
    vpcSourceIp : str, default is Undefined, optional
        When VpcSourceIp is Enabled the worker's IP address when a task is rendered in private worker portal inside the VPC is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. To render the task successfully Amazon S3 checks that the presigned URL is being accessed over an Amazon S3 VPC Endpoint, and that the worker's IP address matches the IP address in the IAM policy. To learn more about configuring private worker portal, see Use Amazon VPC mode from a private worker portal. Valid values are Enabled or Disabled
    """


    sourceIp?: str

    vpcSourceIp?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRef:
    r"""
    Reference to a Workforce in sagemaker to populate workforceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelector:
    r"""
    Selector for a Workforce in sagemaker to populate workforceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecForProviderWorkforceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the work team.
    memberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0], default is Undefined, optional
        A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use cognito_member_definition. For workforces created using your own OIDC identity provider (IdP) use oidc_member_definition. Do not provide input for both of these parameters in a single request. see Member Definition details below.
    notificationConfiguration : [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderNotificationConfigurationItems0], default is Undefined, optional
        Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workerAccessConfiguration : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfiguration, default is Undefined, optional
        worker access configuration
    workforceName : str, default is Undefined, optional
        The name of the workforce.
    workforceNameRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRef, default is Undefined, optional
        workforce name ref
    workforceNameSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelector, default is Undefined, optional
        workforce name selector
    """


    description?: str

    memberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0]

    notificationConfiguration?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderNotificationConfigurationItems0]

    tags?: {str:str}

    workerAccessConfiguration?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfiguration

    workforceName?: str

    workforceNameRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRef

    workforceNameSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelector


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec init provider member definition items0

    Attributes
    ----------
    cognitoMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0], default is Undefined, optional
        The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
    oidcMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0OidcMemberDefinitionItems0], default is Undefined, optional
        A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
    """


    cognitoMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0]

    oidcMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0OidcMemberDefinitionItems0]


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec init provider member definition items0 cognito member definition items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        An identifier for an application client. You must create the app client ID using Amazon Cognito.
    clientIdRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector, default is Undefined, optional
        client Id selector
    userGroup : str, default is Undefined, optional
        An identifier for a user group.
    userGroupRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef, default is Undefined, optional
        user group ref
    userGroupSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector, default is Undefined, optional
        user group selector
    userPool : str, default is Undefined, optional
        An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
    userPoolRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef, default is Undefined, optional
        user pool ref
    userPoolSelector : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector, default is Undefined, optional
        user pool selector
    """


    clientId?: str

    clientIdRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef

    clientIdSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector

    userGroup?: str

    userGroupRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef

    userGroupSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector

    userPool?: str

    userPoolRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef

    userPoolSelector?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0ClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRef:
    r"""
    Reference to a UserGroup in cognitoidp to populate userGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelector:
    r"""
    Selector for a UserGroup in cognitoidp to populate userGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0CognitoMemberDefinitionItems0UserPoolSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderMemberDefinitionItems0OidcMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec init provider member definition items0 oidc member definition items0

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
    """


    groups?: [str]


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderNotificationConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam spec init provider notification configuration items0

    Attributes
    ----------
    notificationTopicArn : str, default is Undefined, optional
        The ARN for the SNS topic to which notifications should be published.
    """


    notificationTopicArn?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfiguration:
    r"""
    Use this optional parameter to constrain access to an Amazon S3 resource based on the IP address using supported IAM global condition keys. The Amazon S3 resource is accessed in the worker portal using a Amazon S3 presigned URL. see Worker Access Configuration details below.

    Attributes
    ----------
    s3Presign : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3Presign, default is Undefined, optional
        s3 presign
    """


    s3Presign?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3Presign


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3Presign:
    r"""
    Defines any Amazon S3 resource constraints. see S3 Presign details below.

    Attributes
    ----------
    iamPolicyConstraints : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints, default is Undefined, optional
        iam policy constraints
    """


    iamPolicyConstraints?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints:
    r"""
    Use this parameter to specify the allowed request source. Possible sources are either SourceIp or VpcSourceIp. see IAM Policy Constraints details below.

    Attributes
    ----------
    sourceIp : str, default is Undefined, optional
        When SourceIp is Enabled the worker's IP address when a task is rendered in the worker portal is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. This IP address is checked by Amazon S3 and must match in order for the Amazon S3 resource to be rendered in the worker portal. Valid values are Enabled or Disabled
    vpcSourceIp : str, default is Undefined, optional
        When VpcSourceIp is Enabled the worker's IP address when a task is rendered in private worker portal inside the VPC is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. To render the task successfully Amazon S3 checks that the presigned URL is being accessed over an Amazon S3 VPC Endpoint, and that the worker's IP address matches the IP address in the IAM policy. To learn more about configuring private worker portal, see Use Amazon VPC mode from a private worker portal. Valid values are Enabled or Disabled
    """


    sourceIp?: str

    vpcSourceIp?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRef:
    r"""
    Reference to a Workforce in sagemaker to populate workforceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelector:
    r"""
    Selector for a Workforce in sagemaker to populate workforceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecInitProviderWorkforceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta1WorkteamStatus:
    r"""
    WorkteamStatus defines the observed state of Workteam.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta1WorkteamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta1WorkteamStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta1 workteam status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
    description : str, default is Undefined, optional
        A description of the work team.
    id : str, default is Undefined, optional
        The name of the Workteam.
    memberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0], default is Undefined, optional
        A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use cognito_member_definition. For workforces created using your own OIDC identity provider (IdP) use oidc_member_definition. Do not provide input for both of these parameters in a single request. see Member Definition details below.
    notificationConfiguration : [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderNotificationConfigurationItems0], default is Undefined, optional
        Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
    subdomain : str, default is Undefined, optional
        The subdomain for your OIDC Identity Provider.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    workerAccessConfiguration : SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfiguration, default is Undefined, optional
        worker access configuration
    workforceName : str, default is Undefined, optional
        The name of the workforce.
    """


    arn?: str

    description?: str

    id?: str

    memberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0]

    notificationConfiguration?: [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderNotificationConfigurationItems0]

    subdomain?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    workerAccessConfiguration?: SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfiguration

    workforceName?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam status at provider member definition items0

    Attributes
    ----------
    cognitoMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0CognitoMemberDefinitionItems0], default is Undefined, optional
        The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
    oidcMemberDefinition : [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0OidcMemberDefinitionItems0], default is Undefined, optional
        A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
    """


    cognitoMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0CognitoMemberDefinitionItems0]

    oidcMemberDefinition?: [SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0OidcMemberDefinitionItems0]


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0CognitoMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam status at provider member definition items0 cognito member definition items0

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        An identifier for an application client. You must create the app client ID using Amazon Cognito.
    userGroup : str, default is Undefined, optional
        An identifier for a user group.
    userPool : str, default is Undefined, optional
        An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
    """


    clientId?: str

    userGroup?: str

    userPool?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderMemberDefinitionItems0OidcMemberDefinitionItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam status at provider member definition items0 oidc member definition items0

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
    """


    groups?: [str]


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderNotificationConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 workteam status at provider notification configuration items0

    Attributes
    ----------
    notificationTopicArn : str, default is Undefined, optional
        The ARN for the SNS topic to which notifications should be published.
    """


    notificationTopicArn?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfiguration:
    r"""
    Use this optional parameter to constrain access to an Amazon S3 resource based on the IP address using supported IAM global condition keys. The Amazon S3 resource is accessed in the worker portal using a Amazon S3 presigned URL. see Worker Access Configuration details below.

    Attributes
    ----------
    s3Presign : SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3Presign, default is Undefined, optional
        s3 presign
    """


    s3Presign?: SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3Presign


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3Presign:
    r"""
    Defines any Amazon S3 resource constraints. see S3 Presign details below.

    Attributes
    ----------
    iamPolicyConstraints : SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints, default is Undefined, optional
        iam policy constraints
    """


    iamPolicyConstraints?: SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusAtProviderWorkerAccessConfigurationS3PresignIamPolicyConstraints:
    r"""
    Use this parameter to specify the allowed request source. Possible sources are either SourceIp or VpcSourceIp. see IAM Policy Constraints details below.

    Attributes
    ----------
    sourceIp : str, default is Undefined, optional
        When SourceIp is Enabled the worker's IP address when a task is rendered in the worker portal is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. This IP address is checked by Amazon S3 and must match in order for the Amazon S3 resource to be rendered in the worker portal. Valid values are Enabled or Disabled
    vpcSourceIp : str, default is Undefined, optional
        When VpcSourceIp is Enabled the worker's IP address when a task is rendered in private worker portal inside the VPC is added to the IAM policy as a Condition used to generate the Amazon S3 presigned URL. To render the task successfully Amazon S3 checks that the presigned URL is being accessed over an Amazon S3 VPC Endpoint, and that the worker's IP address matches the IP address in the IAM policy. To learn more about configuring private worker portal, see Use Amazon VPC mode from a private worker portal. Valid values are Enabled or Disabled
    """


    sourceIp?: str

    vpcSourceIp?: str


schema SagemakerAwsUpboundIoV1beta1WorkteamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


