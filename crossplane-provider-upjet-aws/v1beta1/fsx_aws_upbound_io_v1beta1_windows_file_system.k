"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema WindowsFileSystem:
    r"""
    WindowsFileSystem is the Schema for the WindowsFileSystems API. Manages a FSx Windows File System.

    Attributes
    ----------
    apiVersion : str, default is "fsx.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "WindowsFileSystem", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FsxAwsUpboundIoV1beta1WindowsFileSystemSpec, default is Undefined, required
        spec
    status : FsxAwsUpboundIoV1beta1WindowsFileSystemStatus, default is Undefined, optional
        status
    """


    apiVersion: "fsx.aws.upbound.io/v1beta1" = "fsx.aws.upbound.io/v1beta1"

    kind: "WindowsFileSystem" = "WindowsFileSystem"

    metadata?: v1.ObjectMeta

    spec: FsxAwsUpboundIoV1beta1WindowsFileSystemSpec

    status?: FsxAwsUpboundIoV1beta1WindowsFileSystemStatus


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpec:
    r"""
    WindowsFileSystemSpec defines the desired state of WindowsFileSystem

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProvider, default is Undefined, required
        for provider
    initProvider : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProvider

    initProvider?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRef

    publishConnectionDetailsTo?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecWriteConnectionSecretToRef


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProvider:
    r"""
    fsx aws upbound io v1beta1 windows file system spec for provider

    Attributes
    ----------
    activeDirectoryId : str, default is Undefined, optional
        The ID for an existing Microsoft Active Directory instance that the file system should join when it's created. Cannot be specified with self_managed_active_directory.
    activeDirectoryIdRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRef, default is Undefined, optional
        active directory Id ref
    activeDirectoryIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelector, default is Undefined, optional
        active directory Id selector
    aliases : [str], default is Undefined, optional
        An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see Working with DNS Aliases
    auditLogConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderAuditLogConfigurationItems0], default is Undefined, optional
        The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See Audit Log Configuration below.
    automaticBackupRetentionDays : float, default is Undefined, optional
        The number of days to retain automatic backups. Minimum of 0 and maximum of 90. Defaults to 7. Set to 0 to disable.
    backupId : str, default is Undefined, optional
        The ID of the source backup to create the filesystem from.
    copyTagsToBackups : bool, default is Undefined, optional
        A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to false.
    dailyAutomaticBackupStartTime : str, default is Undefined, optional
        The preferred time (in HH:MM format) to take daily automatic backups, in the UTC time zone.
    deploymentType : str, default is Undefined, optional
        Specifies the file system deployment type, valid values are MULTI_AZ_1, SINGLE_AZ_1 and SINGLE_AZ_2. Default value is SINGLE_AZ_1.
    diskIopsConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderDiskIopsConfigurationItems0], default is Undefined, optional
        The SSD IOPS configuration for the Amazon FSx for Windows File Server file system. See Disk Iops Configuration below.
    finalBackupTags : {str:str}, default is Undefined, optional
        A map of tags to apply to the file system's final backup.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.
    kmsKeyIdRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    preferredSubnetId : str, default is Undefined, optional
        Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is MULTI_AZ_1.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupIdRefs : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
    selfManagedActiveDirectory : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0], default is Undefined, optional
        Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with active_directory_id. See Self-Managed Active Directory below.
    skipFinalBackup : bool, default is Undefined, optional
        When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to false.
    storageCapacity : float, default is Undefined, optional
        Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to HDD the minimum value is 2000. Required when not creating filesystem for a backup.
    storageType : str, default is Undefined, optional
        Specifies the storage type, Valid values are SSD and HDD. HDD is supported on SINGLE_AZ_2 and MULTI_AZ_1 Windows file system deployment types. Default value is SSD.
    subnetIdRefs : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set deployment_type to MULTI_AZ_1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throughputCapacity : float, default is Undefined, optional
        Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of 8 and maximum of 2048.
    weeklyMaintenanceStartTime : str, default is Undefined, optional
        The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.
    """


    activeDirectoryId?: str

    activeDirectoryIdRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRef

    activeDirectoryIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelector

    aliases?: [str]

    auditLogConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderAuditLogConfigurationItems0]

    automaticBackupRetentionDays?: float

    backupId?: str

    copyTagsToBackups?: bool

    dailyAutomaticBackupStartTime?: str

    deploymentType?: str

    diskIopsConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderDiskIopsConfigurationItems0]

    finalBackupTags?: {str:str}

    kmsKeyId?: str

    kmsKeyIdRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelector

    preferredSubnetId?: str

    region: str

    securityGroupIdRefs?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    selfManagedActiveDirectory?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0]

    skipFinalBackup?: bool

    storageCapacity?: float

    storageType?: str

    subnetIdRefs?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0]

    subnetIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    throughputCapacity?: float

    weeklyMaintenanceStartTime?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate activeDirectoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate activeDirectoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderActiveDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderAuditLogConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec for provider audit log configuration items0

    Attributes
    ----------
    auditLogDestination : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when file_access_audit_log_level and file_share_access_audit_log_level are not set to DISABLED. The name of the Amazon CloudWatch Logs log group must begin with the /aws/fsx prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the aws-fsx prefix. If you do not provide a destination in audit_log_destionation, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
    fileAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    fileShareAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    """


    auditLogDestination?: str

    fileAccessAuditLogLevel?: str

    fileShareAccessAuditLogLevel?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderDiskIopsConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec for provider disk iops configuration items0

    Attributes
    ----------
    iops : float, default is Undefined, optional
        - The total number of SSD IOPS provisioned for the file system.
    mode : str, default is Undefined, optional
        - Specifies whether the number of IOPS for the file system is using the system. Valid values are AUTOMATIC and USER_PROVISIONED. Default value is AUTOMATIC.
    """


    iops?: float

    mode?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0Policy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec for provider self managed active directory items0

    Attributes
    ----------
    dnsIps : [str], default is Undefined, optional
        A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in RFC 1918.
    domainName : str, default is Undefined, optional
        The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
    fileSystemAdministratorsGroup : str, default is Undefined, optional
        The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to Domain Admins.
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
    passwordSecretRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
    """


    dnsIps?: [str]

    domainName?: str

    fileSystemAdministratorsGroup?: str

    organizationalUnitDistinguishedName?: str

    passwordSecretRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0PasswordSecretRef

    username?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSelfManagedActiveDirectoryItems0PasswordSecretRef:
    r"""
    The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0Policy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    activeDirectoryId : str, default is Undefined, optional
        The ID for an existing Microsoft Active Directory instance that the file system should join when it's created. Cannot be specified with self_managed_active_directory.
    activeDirectoryIdRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRef, default is Undefined, optional
        active directory Id ref
    activeDirectoryIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelector, default is Undefined, optional
        active directory Id selector
    aliases : [str], default is Undefined, optional
        An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see Working with DNS Aliases
    auditLogConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderAuditLogConfigurationItems0], default is Undefined, optional
        The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See Audit Log Configuration below.
    automaticBackupRetentionDays : float, default is Undefined, optional
        The number of days to retain automatic backups. Minimum of 0 and maximum of 90. Defaults to 7. Set to 0 to disable.
    backupId : str, default is Undefined, optional
        The ID of the source backup to create the filesystem from.
    copyTagsToBackups : bool, default is Undefined, optional
        A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to false.
    dailyAutomaticBackupStartTime : str, default is Undefined, optional
        The preferred time (in HH:MM format) to take daily automatic backups, in the UTC time zone.
    deploymentType : str, default is Undefined, optional
        Specifies the file system deployment type, valid values are MULTI_AZ_1, SINGLE_AZ_1 and SINGLE_AZ_2. Default value is SINGLE_AZ_1.
    diskIopsConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderDiskIopsConfigurationItems0], default is Undefined, optional
        The SSD IOPS configuration for the Amazon FSx for Windows File Server file system. See Disk Iops Configuration below.
    finalBackupTags : {str:str}, default is Undefined, optional
        A map of tags to apply to the file system's final backup.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.
    kmsKeyIdRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    preferredSubnetId : str, default is Undefined, optional
        Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is MULTI_AZ_1.
    securityGroupIdRefs : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
    selfManagedActiveDirectory : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0], default is Undefined, optional
        Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with active_directory_id. See Self-Managed Active Directory below.
    skipFinalBackup : bool, default is Undefined, optional
        When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to false.
    storageCapacity : float, default is Undefined, optional
        Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to HDD the minimum value is 2000. Required when not creating filesystem for a backup.
    storageType : str, default is Undefined, optional
        Specifies the storage type, Valid values are SSD and HDD. HDD is supported on SINGLE_AZ_2 and MULTI_AZ_1 Windows file system deployment types. Default value is SSD.
    subnetIdRefs : [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set deployment_type to MULTI_AZ_1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throughputCapacity : float, default is Undefined, optional
        Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of 8 and maximum of 2048.
    weeklyMaintenanceStartTime : str, default is Undefined, optional
        The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.
    """


    activeDirectoryId?: str

    activeDirectoryIdRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRef

    activeDirectoryIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelector

    aliases?: [str]

    auditLogConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderAuditLogConfigurationItems0]

    automaticBackupRetentionDays?: float

    backupId?: str

    copyTagsToBackups?: bool

    dailyAutomaticBackupStartTime?: str

    deploymentType?: str

    diskIopsConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderDiskIopsConfigurationItems0]

    finalBackupTags?: {str:str}

    kmsKeyId?: str

    kmsKeyIdRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelector

    preferredSubnetId?: str

    securityGroupIdRefs?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    selfManagedActiveDirectory?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0]

    skipFinalBackup?: bool

    storageCapacity?: float

    storageType?: str

    subnetIdRefs?: [FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0]

    subnetIdSelector?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelector

    subnetIds?: [str]

    tags?: {str:str}

    throughputCapacity?: float

    weeklyMaintenanceStartTime?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRef:
    r"""
    Reference to a Directory in ds to populate activeDirectoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelector:
    r"""
    Selector for a Directory in ds to populate activeDirectoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderActiveDirectoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderAuditLogConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec init provider audit log configuration items0

    Attributes
    ----------
    auditLogDestination : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when file_access_audit_log_level and file_share_access_audit_log_level are not set to DISABLED. The name of the Amazon CloudWatch Logs log group must begin with the /aws/fsx prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the aws-fsx prefix. If you do not provide a destination in audit_log_destionation, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
    fileAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    fileShareAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    """


    auditLogDestination?: str

    fileAccessAuditLogLevel?: str

    fileShareAccessAuditLogLevel?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderDiskIopsConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec init provider disk iops configuration items0

    Attributes
    ----------
    iops : float, default is Undefined, optional
        - The total number of SSD IOPS provisioned for the file system.
    mode : str, default is Undefined, optional
        - Specifies whether the number of IOPS for the file system is using the system. Valid values are AUTOMATIC and USER_PROVISIONED. Default value is AUTOMATIC.
    """


    iops?: float

    mode?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0Policy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system spec init provider self managed active directory items0

    Attributes
    ----------
    dnsIps : [str], default is Undefined, optional
        A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in RFC 1918.
    domainName : str, default is Undefined, optional
        The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
    fileSystemAdministratorsGroup : str, default is Undefined, optional
        The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to Domain Admins.
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
    passwordSecretRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    username : str, default is Undefined, optional
        The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
    """


    dnsIps?: [str]

    domainName?: str

    fileSystemAdministratorsGroup?: str

    organizationalUnitDistinguishedName?: str

    passwordSecretRef: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0PasswordSecretRef

    username?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSelfManagedActiveDirectoryItems0PasswordSecretRef:
    r"""
    The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0Policy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelectorPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRef

    metadata?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToMetadata

    name: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRefPolicy


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatus:
    r"""
    WindowsFileSystemStatus defines the observed state of WindowsFileSystem.

    Attributes
    ----------
    atProvider : FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProvider

    conditions?: [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusConditionsItems0]

    observedGeneration?: int


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProvider:
    r"""
    fsx aws upbound io v1beta1 windows file system status at provider

    Attributes
    ----------
    activeDirectoryId : str, default is Undefined, optional
        The ID for an existing Microsoft Active Directory instance that the file system should join when it's created. Cannot be specified with self_managed_active_directory.
    aliases : [str], default is Undefined, optional
        An array DNS alias names that you want to associate with the Amazon FSx file system.  For more information, see Working with DNS Aliases
    arn : str, default is Undefined, optional
        Amazon Resource Name of the file system.
    auditLogConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderAuditLogConfigurationItems0], default is Undefined, optional
        The configuration that Amazon FSx for Windows File Server uses to audit and log user accesses of files, folders, and file shares on the Amazon FSx for Windows File Server file system. See Audit Log Configuration below.
    automaticBackupRetentionDays : float, default is Undefined, optional
        The number of days to retain automatic backups. Minimum of 0 and maximum of 90. Defaults to 7. Set to 0 to disable.
    backupId : str, default is Undefined, optional
        The ID of the source backup to create the filesystem from.
    copyTagsToBackups : bool, default is Undefined, optional
        A boolean flag indicating whether tags on the file system should be copied to backups. Defaults to false.
    dailyAutomaticBackupStartTime : str, default is Undefined, optional
        The preferred time (in HH:MM format) to take daily automatic backups, in the UTC time zone.
    deploymentType : str, default is Undefined, optional
        Specifies the file system deployment type, valid values are MULTI_AZ_1, SINGLE_AZ_1 and SINGLE_AZ_2. Default value is SINGLE_AZ_1.
    diskIopsConfiguration : [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderDiskIopsConfigurationItems0], default is Undefined, optional
        The SSD IOPS configuration for the Amazon FSx for Windows File Server file system. See Disk Iops Configuration below.
    dnsName : str, default is Undefined, optional
        DNS name for the file system, e.g., fs-12345678.corp.example.com (domain name matching the Active Directory domain name)
    finalBackupTags : {str:str}, default is Undefined, optional
        A map of tags to apply to the file system's final backup.
    id : str, default is Undefined, optional
        Identifier of the file system (e.g. fs-12345678).
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS Key to encrypt the file system at rest. Defaults to an AWS managed KMS Key.
    networkInterfaceIds : [str], default is Undefined, optional
        Set of Elastic Network Interface identifiers from which the file system is accessible.
    ownerId : str, default is Undefined, optional
        AWS account identifier that created the file system.
    preferredFileServerIp : str, default is Undefined, optional
        The IP address of the primary, or preferred, file server.
    preferredSubnetId : str, default is Undefined, optional
        Specifies the subnet in which you want the preferred file server to be located. Required for when deployment type is MULTI_AZ_1.
    remoteAdministrationEndpoint : str, default is Undefined, optional
        For MULTI_AZ_1 deployment types, use this endpoint when performing administrative tasks on the file system using Amazon FSx Remote PowerShell. For SINGLE_AZ_1 deployment types, this is the DNS name of the file system.
    securityGroupIds : [str], default is Undefined, optional
        A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
    selfManagedActiveDirectory : [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderSelfManagedActiveDirectoryItems0], default is Undefined, optional
        Configuration block that Amazon FSx uses to join the Windows File Server instance to your self-managed (including on-premises) Microsoft Active Directory (AD) directory. Cannot be specified with active_directory_id. See Self-Managed Active Directory below.
    skipFinalBackup : bool, default is Undefined, optional
        When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to false.
    storageCapacity : float, default is Undefined, optional
        Storage capacity (GiB) of the file system. Minimum of 32 and maximum of 65536. If the storage type is set to HDD the minimum value is 2000. Required when not creating filesystem for a backup.
    storageType : str, default is Undefined, optional
        Specifies the storage type, Valid values are SSD and HDD. HDD is supported on SINGLE_AZ_2 and MULTI_AZ_1 Windows file system deployment types. Default value is SSD.
    subnetIds : [str], default is Undefined, optional
        A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set deployment_type to MULTI_AZ_1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughputCapacity : float, default is Undefined, optional
        Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of 8 and maximum of 2048.
    vpcId : str, default is Undefined, optional
        Identifier of the Virtual Private Cloud for the file system.
    weeklyMaintenanceStartTime : str, default is Undefined, optional
        The preferred start time (in d:HH:MM format) to perform weekly maintenance, in the UTC time zone.
    """


    activeDirectoryId?: str

    aliases?: [str]

    arn?: str

    auditLogConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderAuditLogConfigurationItems0]

    automaticBackupRetentionDays?: float

    backupId?: str

    copyTagsToBackups?: bool

    dailyAutomaticBackupStartTime?: str

    deploymentType?: str

    diskIopsConfiguration?: [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderDiskIopsConfigurationItems0]

    dnsName?: str

    finalBackupTags?: {str:str}

    id?: str

    kmsKeyId?: str

    networkInterfaceIds?: [str]

    ownerId?: str

    preferredFileServerIp?: str

    preferredSubnetId?: str

    remoteAdministrationEndpoint?: str

    securityGroupIds?: [str]

    selfManagedActiveDirectory?: [FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderSelfManagedActiveDirectoryItems0]

    skipFinalBackup?: bool

    storageCapacity?: float

    storageType?: str

    subnetIds?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    throughputCapacity?: float

    vpcId?: str

    weeklyMaintenanceStartTime?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderAuditLogConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system status at provider audit log configuration items0

    Attributes
    ----------
    auditLogDestination : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when file_access_audit_log_level and file_share_access_audit_log_level are not set to DISABLED. The name of the Amazon CloudWatch Logs log group must begin with the /aws/fsx prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the aws-fsx prefix. If you do not provide a destination in audit_log_destionation, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
    fileAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    fileShareAccessAuditLogLevel : str, default is Undefined, optional
        Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are SUCCESS_ONLY, FAILURE_ONLY, SUCCESS_AND_FAILURE, and DISABLED. Default value is DISABLED.
    """


    auditLogDestination?: str

    fileAccessAuditLogLevel?: str

    fileShareAccessAuditLogLevel?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderDiskIopsConfigurationItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system status at provider disk iops configuration items0

    Attributes
    ----------
    iops : float, default is Undefined, optional
        - The total number of SSD IOPS provisioned for the file system.
    mode : str, default is Undefined, optional
        - Specifies whether the number of IOPS for the file system is using the system. Valid values are AUTOMATIC and USER_PROVISIONED. Default value is AUTOMATIC.
    """


    iops?: float

    mode?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatusAtProviderSelfManagedActiveDirectoryItems0:
    r"""
    fsx aws upbound io v1beta1 windows file system status at provider self managed active directory items0

    Attributes
    ----------
    dnsIps : [str], default is Undefined, optional
        A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in RFC 1918.
    domainName : str, default is Undefined, optional
        The fully qualified domain name of the self-managed AD directory. For example, corp.example.com.
    fileSystemAdministratorsGroup : str, default is Undefined, optional
        The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to Domain Admins.
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, OU=FSx,DC=yourdomain,DC=corp,DC=com. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see RFC 2253.
    username : str, default is Undefined, optional
        The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
    """


    dnsIps?: [str]

    domainName?: str

    fileSystemAdministratorsGroup?: str

    organizationalUnitDistinguishedName?: str

    username?: str


schema FsxAwsUpboundIoV1beta1WindowsFileSystemStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


